{
  "comments": [
    {
      "key": {
        "uuid": "27673e34_9e779a1b",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2191,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2016-01-13T23:56:07Z",
      "side": 1,
      "message": "You don\u0027t need to to call $(shell) here: the build recipe itself is shell script. Use shell construct $$(...) instead.",
      "range": {
        "startLine": 2191,
        "startChar": 0,
        "endLine": 2191,
        "endChar": 7
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "676db610_91530b1a",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2193,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2016-01-13T23:56:07Z",
      "side": 1,
      "message": "For platform build (system.img), shouldn\u0027t we always use $(PLATFORM_SDK_VERSION)?\nLooks to me we only need the apk\u0027s minSdkVersion if the apk is about to be installed in older system, right?\nIn that case, we only need the dumped sdkVersion for unbundled build. You can write it as:\n\nifdef TARGET_BUILD_APPS\n# Unbundled build\ndefine get-package-min-sdk-version-int\n$$($(AAPT) dump badging $(1) 2\u003e\u00261 | grep \u0027^sdkVersion\u0027 | cut -d\"\u0027\" -f2 | \\\n    sed -e s/^$(PLATFORM_VERSION_CODENAME)$$/$(PLATFORM_SDK_VERSION)/)\nendef\nelse\n# Platform build\ndefine get-package-min-sdk-version-int\n$(PLATFORM_SDK_VERSION)\nendef\nendif",
      "range": {
        "startLine": 2193,
        "startChar": 0,
        "endLine": 2193,
        "endChar": 5
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "676db610_2c09fc43",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2193,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2016-01-14T01:48:45Z",
      "side": 1,
      "message": "For platform builds, is it actually guaranteed that nobody takes the APK the build produces and then reuse them elsewhere? I\u0027m simply trying to be conservative/cautious here. If this is not a concern, then, indeed, we can ignore APK\u0027s minSdkVersion and instead use $(PLATFORM_SDK_VERSION).\n\nA similar concern applies to the sign target files Python script (also in this change). Right now, I\u0027m being conservative there and relying on each APK\u0027s minSdkVersion. However, since we\u0027re signing a build there, we know which platform version / API Level these APKs will be pre-installed on and thus can use that platform\u0027s API Level instead. Again, this is only OK if nobody extracts APKs from those signed ZIP files and reuses them elsewhere.\n\nWhich approach do you and Baligh suggest?",
      "parentUuid": "676db610_91530b1a",
      "range": {
        "startLine": 2193,
        "startChar": 0,
        "endLine": 2193,
        "endChar": 5
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07495aa4_5a7d14fb",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2193,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2016-01-14T02:03:03Z",
      "side": 1,
      "message": "Serious players shouldn\u0027t be doing that (Baligh should have more say than I do). But you can\u0027t prevent individual persons from doing that. If people do that, what error message will they get?",
      "parentUuid": "676db610_2c09fc43",
      "range": {
        "startLine": 2193,
        "startChar": 0,
        "endLine": 2193,
        "endChar": 5
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4768b202_689abe89",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2193,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2016-01-14T02:40:48Z",
      "side": 1,
      "message": "If somebody extracts such a minSdkVersion 15 APK from, say, an M or N target files ZIP and then installs it on a platform with, say, API Level 16, that platform won\u0027t be able to verify the APK signatures (because it doesn\u0027t support APKs signed using SHA-256) and thus will refuse to install/upgrade the APK.\n\nI\u0027m happy to make our life simpler and ignore minSdkVersion in this CL, if Baligh agrees. To be fair, in the past, APKs from target files ZIP couldn\u0027t be used outside of the system partition anyway because they might have been missing classes.dex or .so files. Not sure whether this is the case these days...\n\nP. S. If we do go for the simpler solution, I\u0027d also love to add the \"Serious players shouldn\u0027t be doing that\" quote to the relevant bit of the scripts, with your permission of course. :)",
      "parentUuid": "07495aa4_5a7d14fb",
      "range": {
        "startLine": 2193,
        "startChar": 0,
        "endLine": 2193,
        "endChar": 5
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "274e5eac_8853d419",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2193,
      "author": {
        "id": 1018026
      },
      "writtenOn": "2016-01-14T20:05:12Z",
      "side": 1,
      "message": "but, if the requirement is that APK minSDK version is needed to evaluate whether we use SHA1 vs SHA256, how will using PLATFORM_SDK_VERSION help ?  Isn\u0027t Platform_SDK_version almost always higher than min_SDK.\n\nSorry I don\u0027t understand - so asking.",
      "parentUuid": "4768b202_689abe89",
      "range": {
        "startLine": 2193,
        "startChar": 0,
        "endLine": 2193,
        "endChar": 5
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c75ca266_cc4e82bd",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2193,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2016-01-14T20:31:30Z",
      "side": 1,
      "message": "The finer point is that it depends only on the platform\u0027s API Level whether SHA-256 signatures can be verified by the platform. An APK\u0027s minSdkVersion (as long as its equal to or lower than platform\u0027s API Level) is irrelevant for the verification.\n\nThus, if we\u0027re signing APKs for a platform with API Level 23, we know for a fact that SHA-256 signatures will be verified just fine by that platform. It doesn\u0027t matter whether an APK says that its minSdkVersion is, say, 15.\n\nThe catch is that somebody could take such a signed APKs and attempt to install it on older platforms. In this hypothetical example, the APK itself says it\u0027s fine to install it on platforms with API Level 15 or newer. However, if it\u0027s signed with SHA-256, then it\u0027ll fail to install on anything older than API Level 18. Thus, I was trying to be very conservative here and use SHA-256 only if the APK being signed declares minSdkVersion 18 or higher.\n\nIf we don\u0027t need that level of conservatism, we can indeed ignore APKs\u0027 minSdkVersion and simply rely on API Level of the platform for which we\u0027re signing APKs. If the build is unbundled, then we\u0027d still need to rely on minSdkVersion instead (exactly as Ying proposed in his code snippet earlier in this thread).",
      "parentUuid": "274e5eac_8853d419",
      "range": {
        "startLine": 2193,
        "startChar": 0,
        "endLine": 2193,
        "endChar": 5
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07123a0e_569bb235",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2193,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2016-01-20T21:16:06Z",
      "side": 1,
      "message": "OK. I am fine to be cautious here. Running aapt on each apk shouldn\u0027t be a high cost for platform build.",
      "parentUuid": "c75ca266_cc4e82bd",
      "range": {
        "startLine": 2193,
        "startChar": 0,
        "endLine": 2193,
        "endChar": 5
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "678e9643_1560b30a",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2200,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2016-01-13T23:56:07Z",
      "side": 1,
      "message": "For platform build (system.img), shouldn\u0027t we always use $(PLATFORM_SDK_VERSION)?\nLooks to me we only need the apk\u0027s minSdkVersion if the apk is about to be installed in older system, right?\nIn that case, we only need the dumped sdkVersion for unbundled build.",
      "range": {
        "startLine": 2200,
        "startChar": 4,
        "endLine": 2200,
        "endChar": 75
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07623a24_bfb9b294",
        "filename": "core/definitions.mk",
        "patchSetId": 3
      },
      "lineNbr": 2200,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2016-01-13T23:56:58Z",
      "side": 1,
      "message": "Please ignore this.  I just moved the comment up a little bit.",
      "parentUuid": "678e9643_1560b30a",
      "range": {
        "startLine": 2200,
        "startChar": 4,
        "endLine": 2200,
        "endChar": 75
      },
      "revId": "8cc80071197dbed645d7e755e811d1276e0493c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}