{
  "comments": [
    {
      "key": {
        "uuid": "b483b24f_3d2471fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1703091
      },
      "writtenOn": "2020-07-08T06:58:13Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "520e4482b2833d3321af30b6a19929e1f8ae13e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abc034da_b0d58368",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2020-07-01T19:23:40Z",
      "side": 1,
      "message": "I noticed you are using simg2img in https://github.com/hsiangkao/erofs-utils/blob/aosp_work/mkerofsimage.sh, which is pretty inefficient. Do you have plans to add sparse support directly to the tool?",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "520e4482b2833d3321af30b6a19929e1f8ae13e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d2cbce1_a9648776",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1703091
      },
      "writtenOn": "2020-07-02T00:50:24Z",
      "side": 1,
      "message": "Hi Alistair,\nI\u0027d love to, yet partially due to 3 reasons I didn\u0027t do that...\n\n1) Mainly I\u0027m not sure whether the sparse library supports random write or it just write sequentially... If it just supports writing sequentially, then it may need to add code to keep metadata/data in memory and pass into sparse library, which would take more memory than the current approach (And yeah, there is also a reason that it\u0027s not wise to directly write to flash devices in order to avoid device fragments but rather write to an image file first).\n\n2) currently erofs-utils won\u0027t finally generate any FILL or DONTCARE blocks in practice, so finally img2simg will just add a sparse header to wrap this...\n\n3) I\u0027m not quite familiar with sparse library APIs... It needs some extra free time for me to hand that. So I\u0027d like to upstream first, maybe some other aosp vendor users could also help me on this... The impact for now is just taking a little longer time without runtime influence...\n\nThanks,\nGao Xiang",
      "parentUuid": "abc034da_b0d58368",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "520e4482b2833d3321af30b6a19929e1f8ae13e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdb964a7_21cc7fb1",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-07-08T03:57:39Z",
      "side": 1,
      "message": "For (1), I don\u0027t think it does. ext4 images are build with e2fsdroid, which has a sparse IO backend. It looks like it builds the blocks in memory and emits them when the image is done: https://cs.android.com/android/platform/superproject/+/master:external/e2fsprogs/lib/ext2fs/sparse_io.c?q\u003dsparse_io.c",
      "parentUuid": "0d2cbce1_a9648776",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "520e4482b2833d3321af30b6a19929e1f8ae13e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b913a00_a72ea959",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1703091
      },
      "writtenOn": "2020-07-08T06:58:13Z",
      "side": 1,
      "message": "Hi David,\n\nYes, that is why I\u0027m a bit worried about that and since EROFS is a compressed filesystem, sparse img won\u0027t do much since it has rare zero blocks for this filesystem.\n\nFrom its starting point, I think it can be done in the long term, but my current bandwidth is limited due to my recent Red Hat work... And the extra time out of img2simg may be only few seconds... So I think it\u0027s reasonable to keep such priority for now...\n\nAnyway, let me seek some extra time on fixing the EROFS build scripts first...\n\nThanks,\nGao Xiang",
      "parentUuid": "cdb964a7_21cc7fb1",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "520e4482b2833d3321af30b6a19929e1f8ae13e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39332bc0_9f5fd5b4",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1703091
      },
      "writtenOn": "2020-07-08T07:26:14Z",
      "side": 1,
      "message": "(add more words about erofs-utils itself...)\nIn erofs-utils implementation, most metadata is cached since mkfs will seek better compacted places to save all inodes and indexes. OTOH, most data is written immediately such it\u0027s block-aligned.\n\nFinally, the whole filesystem itself is in a well-compacted form which is much different from other general fses. As a result sparse img will only increase its img size... (It\u0027s better if fastboot protocol/tool support writing large RAW files, which can only be supported by sparse now.... Since in my previous company, we have such customized fastboot protocol and the phone device itself has some ringbuf for all RAW/sparse files and USB/flash can work at the same time to maximize the download/flash speed.)",
      "parentUuid": "1b913a00_a72ea959",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "520e4482b2833d3321af30b6a19929e1f8ae13e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "973f857e_bf813627",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-07-08T17:46:29Z",
      "side": 1,
      "message": "I think it should be okay to commit this and leave the simg2img stuff as an optimization for later.",
      "parentUuid": "39332bc0_9f5fd5b4",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 25
      },
      "revId": "520e4482b2833d3321af30b6a19929e1f8ae13e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}