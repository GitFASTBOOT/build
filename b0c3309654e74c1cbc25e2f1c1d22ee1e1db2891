{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5023398b_410fbd7a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-18T09:11:35Z",
      "side": 1,
      "message": "nit: typo: \"in the\"",
      "range": {
        "startLine": 10,
        "startChar": 22,
        "endLine": 10,
        "endChar": 27
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07de17f_460b3acf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-18T09:11:35Z",
      "side": 1,
      "message": "Include a go/ link please",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 37
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c5db774_01b9d044",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2023-07-18T13:45:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c07de17f_460b3acf",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 37
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d3948df_c0ab3001",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2023-07-18T13:45:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5023398b_410fbd7a",
      "range": {
        "startLine": 10,
        "startChar": 22,
        "endLine": 10,
        "endChar": 27
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01a04ace_97220610",
        "filename": "tools/aconfig/src/codegen_rust.rs",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-18T09:11:35Z",
      "side": 1,
      "message": "Change to `match`: it will help if someone adds a new ProtoFlagState in the future.",
      "range": {
        "startLine": 73,
        "startChar": 27,
        "endLine": 73,
        "endChar": 68
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a167d6ef_a8d47e11",
        "filename": "tools/aconfig/src/codegen_rust.rs",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2023-07-18T13:45:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01a04ace_97220610",
      "range": {
        "startLine": 73,
        "startChar": 27,
        "endLine": 73,
        "endChar": 68
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f33664_fba7e64c",
        "filename": "tools/aconfig/src/codegen_rust.rs",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-18T09:11:35Z",
      "side": 1,
      "message": "I don\u0027t see the reason for FlagProvider in prod code? Am I missing something?",
      "range": {
        "startLine": 95,
        "startChar": 7,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20a03f3b_07c617ed",
        "filename": "tools/aconfig/src/codegen_rust.rs",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2023-07-18T13:45:59Z",
      "side": 1,
      "message": "The FlagProvider is there to support injection pattern with this static object.",
      "parentUuid": "00f33664_fba7e64c",
      "range": {
        "startLine": 95,
        "startChar": 7,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5991b80c_0d5762c6",
        "filename": "tools/aconfig/src/codegen_rust.rs",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-18T15:04:40Z",
      "side": 1,
      "message": "But we don\u0027t support overriding flag values in production?",
      "parentUuid": "20a03f3b_07c617ed",
      "range": {
        "startLine": 95,
        "startChar": 7,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04b6cebd_2b63247e",
        "filename": "tools/aconfig/src/codegen_rust.rs",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2023-07-18T15:32:09Z",
      "side": 1,
      "message": "No, we do not support flag override in production. The flag provider allows users to write code like this\n\nfn do_something(provider:  FlagProvider) {\nif provider.disabled_ro() {\n...\n}\nif provider.disabled_rw() {\n...\n}\n}\n\nsome teams like sysui seems have preference of injection pattern over the static methods style api.\n\nIt is really a coding style choice.",
      "parentUuid": "5991b80c_0d5762c6",
      "range": {
        "startLine": 95,
        "startChar": 7,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02e7815e_579f72d5",
        "filename": "tools/aconfig/src/codegen_rust.rs",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-18T15:45:25Z",
      "side": 1,
      "message": "Oh, I didn\u0027t realize that people may want to use a provider object. That clears up a lot of confusion!\n\nIn that case, you need to make struct FlagProvider and PROVIDER pub.",
      "parentUuid": "04b6cebd_2b63247e",
      "range": {
        "startLine": 95,
        "startChar": 7,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "661cb7ef_e4514a1d",
        "filename": "tools/aconfig/src/codegen_rust.rs",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2023-07-18T15:52:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02e7815e_579f72d5",
      "range": {
        "startLine": 95,
        "startChar": 7,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf038e04_8a668f34",
        "filename": "tools/aconfig/templates/rust_prod.template",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-18T09:11:35Z",
      "side": 1,
      "message": "Why not remove FlagProvider from the prod code and just call GetServerConfigurableFlag directly in all READ_WRITE functions?",
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb16078_1988c983",
        "filename": "tools/aconfig/templates/rust_prod.template",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2023-07-18T13:45:59Z",
      "side": 1,
      "message": "Is the purpose to reduce one level of indirection for performance reasons? If that is the case, can we inline the FlagProvider implementation? \n\nOne advantage of doing so via PROVIDER is that we only have one source of truth in the generated code which is the flag provider, if any update needs to be made, we only need to update flag provider.",
      "parentUuid": "bf038e04_8a668f34",
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7384014c_93946885",
        "filename": "tools/aconfig/templates/rust_prod.template",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-18T15:04:40Z",
      "side": 1,
      "message": "I see the source of truth as the call to GetServerConfigurableFlag, not the indirection via PROVIDER. If we were to update something in the future, we would still need to re-create the auto-generated lib.\n\nI don\u0027t see a reason not to write this as\n\n```\nfn get_some_read_write_flag() { flags_rust::GetServerConfigurableFlag(...) }\nfn get_some_read_only_flag() { false }\n```\n\nBut again, maybe I\u0027m missing something?",
      "parentUuid": "ecb16078_1988c983",
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc4736ea_60284d91",
        "filename": "tools/aconfig/templates/rust_prod.template",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2023-07-18T15:32:09Z",
      "side": 1,
      "message": "I think using PROVIDER will have a tighter guarantee to ensure that the following two calls actually do the same thing:\n\nprovider.disabled_ro()\ndisabled_ro()\n\nIf we need to update the GetServerConfigurableFlag call, then we only need to update the flag provider code gen. The top level function can stay the same.\n\nIt is really a minor thing, I\u0027m only very slightly leaning towards keeping it. I\u0027m open to change it though if the extra level of indirection can be a concern or there are other benefits.",
      "parentUuid": "7384014c_93946885",
      "revId": "b0c3309654e74c1cbc25e2f1c1d22ee1e1db2891",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}