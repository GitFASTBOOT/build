{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5831beab_17225a9f",
        "filename": "core/product_config.mk",
        "patchSetId": 2
      },
      "lineNbr": 495,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-06-01T00:27:02Z",
      "side": 1,
      "message": "should this be 35?",
      "range": {
        "startLine": 494,
        "startChar": 31,
        "endLine": 495,
        "endChar": 46
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "111deab8_cfa25787",
        "filename": "core/product_config.mk",
        "patchSetId": 2
      },
      "lineNbr": 495,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-06-02T15:11:43Z",
      "side": 1,
      "message": "No, if 34 is greater than or equal to the API level these packages are added.",
      "parentUuid": "5831beab_17225a9f",
      "range": {
        "startLine": 494,
        "startChar": 31,
        "endLine": 495,
        "endChar": 46
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc3830da_aaec04cd",
        "filename": "target/product/base_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1318142
      },
      "writtenOn": "2023-06-01T22:40:11Z",
      "side": 1,
      "message": "Using :\u003d should fix the presubmit error.",
      "range": {
        "startLine": 302,
        "startChar": 39,
        "endLine": 302,
        "endChar": 41
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f4cf7df_0999873c",
        "filename": "target/product/base_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-06-02T15:11:43Z",
      "side": 1,
      "message": "I want to add these packages here, not assign the variable, so we can have more packages added to it elsewhere - before or after this point. How do I handle that?",
      "parentUuid": "bc3830da_aaec04cd",
      "range": {
        "startLine": 302,
        "startChar": 39,
        "endLine": 302,
        "endChar": 41
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49044992_7fe2e944",
        "filename": "target/product/base_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-06-02T19:05:35Z",
      "side": 1,
      "message": "The problem is that `PRODUCT_PACKAGES_SHIPPING_API_LEVEL_34` has never been set before.  Make has two styles of assignment, `\u003d` for delayed evaluation and `:\u003d` for immediate evaluation.  `+\u003d` uses whatever style was last used for the variable, defaulting to delayed assignment if this is the first use of the variable.  Delayed assignment means `$(HIDL_SUPPORT_SERVICES)` isn\u0027t evaluated until later when `PRODUCT_PACKAGES_SHIPPING_API_LEVEL_34` is evaluated, when its value has changed.\n\nAll PRODUCT_* variables are supposed to be cleared between each product makefile so that inheritance works correctly, I think the problem is that `PRODUCT_PACKAGES_SHIPPING_API_LEVEL_34` is not listed in `build/make/core/product.mk`.",
      "parentUuid": "6f4cf7df_0999873c",
      "range": {
        "startLine": 302,
        "startChar": 39,
        "endLine": 302,
        "endChar": 41
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fab69388_41de97d3",
        "filename": "target/product/base_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-06-02T19:40:45Z",
      "side": 1,
      "message": "Thank you Colin!\nAdding it to _product_list_vars will cause it to be cleared between the files? And we can keep appending instead of assigning anything to it?",
      "parentUuid": "49044992_7fe2e944",
      "range": {
        "startLine": 302,
        "startChar": 39,
        "endLine": 302,
        "endChar": 41
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45109ae9_b1adc12e",
        "filename": "target/product/base_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-06-02T20:54:56Z",
      "side": 1,
      "message": "Yes, and appending and assigning will have the same semantics.  All of the variables are captured between inheriting each product makefile, and the lists provided by all the product makefiles are appended together. `:\u003d` vs. `+\u003d` only matters if you have multiple assignments in the same product makefile, as obviously a `:\u003d` would overwrite any previous value from that makefile.",
      "parentUuid": "fab69388_41de97d3",
      "range": {
        "startLine": 302,
        "startChar": 39,
        "endLine": 302,
        "endChar": 41
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2408bcb_07df4954",
        "filename": "target/product/base_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 303,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-06-01T00:27:02Z",
      "side": 1,
      "message": "spaces",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 303,
        "endChar": 1
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2fd3307_4fc1ef84",
        "filename": "target/product/base_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 303,
      "author": {
        "id": 1318142
      },
      "writtenOn": "2023-06-01T22:40:11Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "c2408bcb_07df4954",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 303,
        "endChar": 1
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83fa2421_c1e8f7f6",
        "filename": "target/product/base_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 303,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-06-02T15:11:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2fd3307_4fc1ef84",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 303,
        "endChar": 1
      },
      "revId": "8fa7ebcfe07da052c592dc759cc5d4ecb4be1e0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}