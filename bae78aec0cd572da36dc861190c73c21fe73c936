{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f786617f_caa1790f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2023-01-09T08:46:42Z",
      "side": 1,
      "message": "Sorry, neither the linked bug nor the change helped me understand why we need a new variable. Is this fixing a build semantic that is not possible to be done today?",
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49b3b9a6_74dd7bb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-09T09:02:06Z",
      "side": 1,
      "message": "For now, for /vendor/etc/linker.config.pb, we need a single copy of .json file which declares linker configuration of the vendor partition.\n\nBut in most cases, vendor modules are distributed in many different locations and provide its own .mk files so that the top device.mk can include them as needed.\n\nWhen there\u0027s two vendor modules which has its own linker configuration requirements it\u0027s not convenient to prepare the vendor linker configuration with the current \"single .json\" approach.\n\nFor example, path/to/foo/device.mk might want to add an entry like `provideLibs: [\"libfoo.so\"]` to /vendor/etc/linker.config.pb and path/to/bar/device.mk might want to add another entry like `requireLibs: [\"libbar.so\"]` to /vendor/etc/linker.config.pb.\n\nWhen there\u0027s three different targets:\n- target_A: include both .mk files\n- target_B: include path/to/foo/device.mk\n- target_C: include path/to/bar/device.mk\nwe need three combinations of linker.config.json.\n\nWith the new variable introduced in this change, each .mk file can add its own linker configuration fragment.\n\nThat being said, it\u0027s not possible as of today, but quite difficult to maintain combinations of linker configuration.",
      "parentUuid": "f786617f_caa1790f",
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e4206aa_1f256a13",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-09T09:12:24Z",
      "side": 1,
      "message": "\u003e it\u0027s not possible as of today, \n\nI meant, it\u0027s NOT not possible. ;-)",
      "parentUuid": "49b3b9a6_74dd7bb2",
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2810f44d_61a7b3fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2023-01-09T12:02:51Z",
      "side": 1,
      "message": "Thank you, appreciate it. Do I understand correctly that the alternative is that each lunch target has its own fully flattened/explicit vendor linker configuration (a single json file)? \n\nI worry that this will make it hard to trace and debug unintended contributions to a final configuration for a particular build target. Do you think that\u0027s a valid concern?",
      "parentUuid": "1e4206aa_1f256a13",
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd777ed2_fead1c96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-10T02:58:41Z",
      "side": 1,
      "message": "Yes you\u0027re right. And your concern seems to be valid point. It would be nice if we could leave some clues in the build-time-flattened artifacts (e.g. pointers to the input fragments). Not sure it\u0027s possible.\n\nThis is kind of a trade-off, but IMO \"manually flattening\" tends to make maintenance worse (e.g. out of sync, dangling entries...)",
      "parentUuid": "2810f44d_61a7b3fb",
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f0de115_d56f95d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-11T07:33:41Z",
      "side": 1,
      "message": "Jingwen, a gentle ping.",
      "parentUuid": "fd777ed2_fead1c96",
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78400524_cbdff677",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 3495,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-01-09T08:32:18Z",
      "side": 1,
      "message": "There are some partners who generated vendor/etc/linker.config.pb from Soong. Is there any way to cover existing definitions?",
      "range": {
        "startLine": 3495,
        "startChar": 43,
        "endLine": 3495,
        "endChar": 81
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab40f073_bbaa750b",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 3495,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-09T08:37:49Z",
      "side": 1,
      "message": "They can stay the current implementation (using `linker_config` module) or migrate it to use this new variable in the future when it\u0027s necessary.\n\nThey can simply remove the current linker_config module definition and add the .json file to the product variable.\n\nThey might have, \n```\n// path/to/Android.bp\nlinker_config {\n  name: \"vendor.linker.config\",\n  src: \"linker_config.json\",\n  vendor: true,\n}\n```\n```\n// device.mk\nPRODUCT_PACKAGES +\u003d vendor.linker.confing\n```\n\nThen, the migration would be simple as ..\n```\n// path/to/Android.bp\n/* remove the old definition */\n```\n```\n// device.mk\nPRODUCT_VENDOR_LINKER_CONFIG_FRAGMENTS +\u003d path/to/linker_config.json\n```",
      "parentUuid": "78400524_cbdff677",
      "range": {
        "startLine": 3495,
        "startChar": 43,
        "endLine": 3495,
        "endChar": 81
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b91ab60_a1fe6b0d",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 3495,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-11T07:33:41Z",
      "side": 1,
      "message": "Kiyoung, a gentle ping.",
      "parentUuid": "ab40f073_bbaa750b",
      "range": {
        "startLine": 3495,
        "startChar": 43,
        "endLine": 3495,
        "endChar": 81
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81cccaf4_affb7620",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 3495,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-01-11T07:53:29Z",
      "side": 1,
      "message": "It makes sense, but it is a bit weird to move definition in the soong to the makefile. Can we migrate this into soong, or just use both - generate from soong and update from makefile?",
      "parentUuid": "5b91ab60_a1fe6b0d",
      "range": {
        "startLine": 3495,
        "startChar": 43,
        "endLine": 3495,
        "endChar": 81
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "958c0ea4_cf55c42b",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 3497,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2023-01-09T12:02:51Z",
      "side": 1,
      "message": "lowercase",
      "range": {
        "startLine": 3497,
        "startChar": 0,
        "endLine": 3497,
        "endChar": 20
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "358ce057_4df69915",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 3497,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-10T02:58:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "958c0ea4_cf55c42b",
      "range": {
        "startLine": 3497,
        "startChar": 0,
        "endLine": 3497,
        "endChar": 20
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b07b5d2_3ff59f93",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 3498,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2023-01-09T12:02:51Z",
      "side": 1,
      "message": "lowercase",
      "range": {
        "startLine": 3498,
        "startChar": 25,
        "endLine": 3498,
        "endChar": 56
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1963bd4e_e3bf40e1",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 3498,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-10T02:58:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b07b5d2_3ff59f93",
      "range": {
        "startLine": 3498,
        "startChar": 25,
        "endLine": 3498,
        "endChar": 56
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd865eda_a21d1c93",
        "filename": "core/product.mk",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2023-01-09T12:02:51Z",
      "side": 1,
      "message": "nit: consider using \"PRODUCT_VENDOR_LINKER_CONFIG_CONTRIBUTION\" instead of \"FRAGMENT\"",
      "range": {
        "startLine": 377,
        "startChar": 22,
        "endLine": 377,
        "endChar": 60
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94751fb4_d8836ec0",
        "filename": "core/product.mk",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-01-10T02:58:41Z",
      "side": 1,
      "message": "\"fragments\" might be familiar via \"VINTF fragments\"",
      "parentUuid": "bd865eda_a21d1c93",
      "range": {
        "startLine": 377,
        "startChar": 22,
        "endLine": 377,
        "endChar": 60
      },
      "revId": "bae78aec0cd572da36dc861190c73c21fe73c936",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}