{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3674e37e_24f0b242",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 938,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-12-14T06:19:20Z",
      "side": 1,
      "message": "name in (\"boot\", \"init_boot\")",
      "range": {
        "startLine": 938,
        "startChar": 7,
        "endLine": 938,
        "endChar": 44
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77a10b21_145d9380",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 938,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-12-14T23:57:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3674e37e_24f0b242",
      "range": {
        "startLine": 938,
        "startChar": 7,
        "endLine": 938,
        "endChar": 44
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf38e116_6cd77ade",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1548,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-12-14T06:19:20Z",
      "side": 1,
      "message": "I guess this is causing the presubmit error (no init_boot.img built in *-img-*.zip). We can add a |has_kernel| flag to _BuildBootableImage(), and use it to explicitly tell it to not look for a kernel image when building init_boot.img.",
      "range": {
        "startLine": 1546,
        "startChar": 0,
        "endLine": 1548,
        "endChar": 0
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc55ab23_2afd4a3f",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1548,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-12-14T23:57:41Z",
      "side": 1,
      "message": "This was the problem since I stopped adding the full image in IMAGES/!\nSince we are already checking \"recovery\" explicitly right here at L1538 to skip the kernel, does it make sense to explicitly check \"init_boot\" and not look for the kernel instead of passing a new has_kernel?",
      "parentUuid": "cf38e116_6cd77ade",
      "range": {
        "startLine": 1546,
        "startChar": 0,
        "endLine": 1548,
        "endChar": 0
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3150e1a_b8a42ea3",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1548,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-12-15T15:52:26Z",
      "side": 1,
      "message": "Like a said in the other change, both would work for me. I suggested |has_kernel| because there is already a |has_ramdisk|, and I\u0027d like to keep the number of magic strings (\u003d\u003d \u0027init_boot\u0027) down. But this is really a matter of taste and I\u0027m fine with both approaches.",
      "parentUuid": "cc55ab23_2afd4a3f",
      "range": {
        "startLine": 1546,
        "startChar": 0,
        "endLine": 1548,
        "endChar": 0
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b911a571_2e6c768e",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1586,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-12-14T06:19:20Z",
      "side": 1,
      "message": "we need to populate the GKI pagesize from the Makefile side too",
      "range": {
        "startLine": 1586,
        "startChar": 14,
        "endLine": 1586,
        "endChar": 42
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6763f5b1_f24c9b79",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1586,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-12-15T16:16:09Z",
      "side": 1,
      "message": "i mean like (https://cs.android.com/android/platform/superproject/+/master:build/make/core/Makefile;l\u003d5066;drc\u003d1f9408b2b2d2eba9e18c08f2ef52e52c3533d88c) we should define |INIT_BOOT/pagesize| so the |pagesize| of the generic ramdisk image is well-defined.",
      "parentUuid": "b911a571_2e6c768e",
      "range": {
        "startLine": 1586,
        "startChar": 14,
        "endLine": 1586,
        "endChar": 42
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37581abf_b2274b3a",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1586,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-12-15T19:55:36Z",
      "side": 1,
      "message": "Got it. It looks like all of the images use BOARD_KERNEL_PAGESIZE for their pagesize, so I\u0027ll stick with that.\nAnd it looks like it\u0027s only needed when building, not when using a prebuilt init_boot.img, so I\u0027ll only add it for that case.",
      "parentUuid": "6763f5b1_f24c9b79",
      "range": {
        "startLine": 1586,
        "startChar": 14,
        "endLine": 1586,
        "endChar": 42
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0345e9ba_0206f94c",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1598,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-12-14T06:19:20Z",
      "side": 1,
      "message": "load info_dict.get(\"mkbootimg_init_args\") if partition name is \"ini_boot\"",
      "range": {
        "startLine": 1598,
        "startChar": 4,
        "endLine": 1598,
        "endChar": 42
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47a8ce79_7092dd8a",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1598,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-12-14T23:57:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0345e9ba_0206f94c",
      "range": {
        "startLine": 1598,
        "startChar": 4,
        "endLine": 1598,
        "endChar": 42
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3609bd16_d6c1c347",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1756,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-12-14T06:19:20Z",
      "side": 1,
      "message": "The misc_info flag is \u0027init_boot\u0027",
      "range": {
        "startLine": 1756,
        "startChar": 9,
        "endLine": 1756,
        "endChar": 22
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e87357f_f83922a1",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1756,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-12-14T23:57:41Z",
      "side": 1,
      "message": "Nice catch! Done.",
      "parentUuid": "3609bd16_d6c1c347",
      "range": {
        "startLine": 1756,
        "startChar": 9,
        "endLine": 1756,
        "endChar": 22
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d42fbaa5_b2ecc701",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1760,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-12-14T06:19:20Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 1760,
        "startChar": 33,
        "endLine": 1760,
        "endChar": 46
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73bbf1d1_4813711d",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 1
      },
      "lineNbr": 1760,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-12-14T23:57:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d42fbaa5_b2ecc701",
      "range": {
        "startLine": 1760,
        "startChar": 33,
        "endLine": 1760,
        "endChar": 46
      },
      "revId": "4d6597a7c65d08897c4a42b90441bb71bb4cca31",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}