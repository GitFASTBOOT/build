{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5b3667d9_df9324e6",
        "filename": "tools/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-01-28T20:32:50Z",
      "side": 1,
      "message": "xunchang@ this causes the following build error:\n\n  build/make/core/base_rules.mk:335: error: build/make/tools: MODULE.linux.EXECUTABLES.extract_kernel already defined by build/make/tools.\n\nSo to test python 2 and 3 compatibility, maybe a python_library_host named \"libextract_kernel\" should be created?",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 69,
        "endChar": 6
      },
      "revId": "447f6424f2f285104b8f3521833f4058db1c2e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0161ea3_dc61dc6b",
        "filename": "tools/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-01-28T23:05:31Z",
      "side": 1,
      "message": "hmm, I remembered you cannot enable python 2 and 3 at the same time for python_binary_host. But you can do that for python_library_host, and create two separate binary files; e.g. extract_kernel \u0026 extract_kernel_py3",
      "parentUuid": "5b3667d9_df9324e6",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 69,
        "endChar": 6
      },
      "revId": "447f6424f2f285104b8f3521833f4058db1c2e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f56575_606d77e9",
        "filename": "tools/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-01-28T23:06:44Z",
      "side": 1,
      "message": "yuyezhong@gmail.com please modify the build rules accordingly.",
      "parentUuid": "a0161ea3_dc61dc6b",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 69,
        "endChar": 6
      },
      "revId": "447f6424f2f285104b8f3521833f4058db1c2e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cd543e8_f903abbe",
        "filename": "tools/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-01-28T23:08:21Z",
      "side": 1,
      "message": "You may either create a libextract_kernel python_library_host that enables both py2 and py3, or create a new python_binary_host named extract_kernel_py3. However, the rules for extract_kernel should not change.",
      "parentUuid": "77f56575_606d77e9",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 69,
        "endChar": 6
      },
      "revId": "447f6424f2f285104b8f3521833f4058db1c2e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c6401ea_c974db24",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-01-28T02:21:45Z",
      "side": 1,
      "message": "Why not raise StopIteration?",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 12
      },
      "revId": "447f6424f2f285104b8f3521833f4058db1c2e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e9cd668_43e7e7a4",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2021-01-28T16:34:24Z",
      "side": 1,
      "message": "The \"raise StopIteration()\" in py3(\u003e\u003d3.7) will cause RuntimeError, but in py2 it will not.\nSo I changed it to \"return\" as stated in https://www.python.org/dev/peps/pep-0479/#writing-backwards-and-forwards-compatible-code.\n\nChange history of \"StopIteration\" is described here:\nhttps://docs.python.org/3/library/exceptions.html#StopIteration",
      "parentUuid": "4c6401ea_c974db24",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 12
      },
      "revId": "447f6424f2f285104b8f3521833f4058db1c2e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c39ee276_f459d99f",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-01-28T20:33:04Z",
      "side": 1,
      "message": "Ack, thanks for the explanation!",
      "parentUuid": "5e9cd668_43e7e7a4",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 12
      },
      "revId": "447f6424f2f285104b8f3521833f4058db1c2e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}