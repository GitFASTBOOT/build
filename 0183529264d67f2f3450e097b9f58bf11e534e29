{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "30aba8a7_2d7a8a3e",
        "filename": "tools/releasetools/validate_target_files.py",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-03-09T07:26:15Z",
      "side": 1,
      "message": "how about check \u0027IMAGES/system.img\u0027 in zip?",
      "range": {
        "startLine": 136,
        "startChar": 5,
        "endLine": 137,
        "endChar": 64
      },
      "revId": "0183529264d67f2f3450e097b9f58bf11e534e29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f93f8852_a7bf2214",
        "filename": "tools/releasetools/validate_target_files.py",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-03-09T07:58:07Z",
      "side": 1,
      "message": "Nice, seems more clean.\n\nHowever, I have two questions:\n\n1) Should we also also check \u0027IMAGES/vendor.img\u0027 at L145 below? (just to make it consistent)\n\n2) If so, will it be a concern? e.g., should validate_target_files raise an error if \u0027IMAGES/vendor.img\u0027 doesn\u0027t exist but \u0027VENDOR/\u0027 exists.",
      "parentUuid": "30aba8a7_2d7a8a3e",
      "range": {
        "startLine": 136,
        "startChar": 5,
        "endLine": 137,
        "endChar": 64
      },
      "revId": "0183529264d67f2f3450e097b9f58bf11e534e29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28059d4a_52f9402c",
        "filename": "tools/releasetools/validate_target_files.py",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-03-09T08:10:51Z",
      "side": 1,
      "message": "From L22 of this file, using \u0027IMAGES/vendor.img\u0027 or \u0027IMAGES/system.img\u0027 is probably fine.\nBecause it just wanted to ensure the \"file consistency\".\n\n   - It verifies the file consistency between the ones in IMAGES/system.img (read                                                                                            \n     via IMAGES/system.map) and the ones under unpacked folder of SYSTEM/. The                                                                                               \n     same check also applies to the vendor image if present.  \n     \nI\u0027ll change this in next PS!",
      "parentUuid": "f93f8852_a7bf2214",
      "range": {
        "startLine": 136,
        "startChar": 5,
        "endLine": 137,
        "endChar": 64
      },
      "revId": "0183529264d67f2f3450e097b9f58bf11e534e29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf548fb7_d66f082b",
        "filename": "tools/releasetools/validate_target_files.py",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-03-09T08:14:39Z",
      "side": 1,
      "message": "Re question 1, yeah I think the check can be the same for vendor.img. (The check can be in CheckAllFiles()), but I don\u0027t know if it would be a problem as mentioned in question 2.\n\nQuestion 2, I don\u0027t know... I don\u0027t even know what these checks are doing to begin with. I\u0027d say just change the minimal surface that could fix your use case.",
      "parentUuid": "f93f8852_a7bf2214",
      "range": {
        "startLine": 136,
        "startChar": 5,
        "endLine": 137,
        "endChar": 64
      },
      "revId": "0183529264d67f2f3450e097b9f58bf11e534e29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d75c17dd_29acf872",
        "filename": "tools/releasetools/validate_target_files.py",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-03-09T08:31:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28059d4a_52f9402c",
      "range": {
        "startLine": 136,
        "startChar": 5,
        "endLine": 137,
        "endChar": 64
      },
      "revId": "0183529264d67f2f3450e097b9f58bf11e534e29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1d11c77_97b406eb",
        "filename": "tools/releasetools/validate_target_files.py",
        "patchSetId": 2
      },
      "lineNbr": 412,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-03-09T07:23:48Z",
      "side": 1,
      "message": "This function won\u0027t be invoked if the condition at L405 isn\u0027t true.",
      "range": {
        "startLine": 412,
        "startChar": 4,
        "endLine": 412,
        "endChar": 33
      },
      "revId": "0183529264d67f2f3450e097b9f58bf11e534e29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}