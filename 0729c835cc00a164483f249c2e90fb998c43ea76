{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc570d51_2d8b71b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-11-27T15:59:09Z",
      "side": 1,
      "message": "The thought is that the choice of architectures (for APEX modules) lies with the mainline program. \"Unbundled\" seems vague - how is that motivated?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 59
      },
      "revId": "0729c835cc00a164483f249c2e90fb998c43ea76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8343d5fb_007209fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-11-27T16:36:21Z",
      "side": 1,
      "message": "\u003e \"Unbundled\" seems vague - how is that motivated?\n\nThe thinking was that these are the archs that practically all the unbundled apps apps ship (which is the same reason they were chosen in the first place). If you want to ship \"unbundled\", these are the archs you need.",
      "parentUuid": "cc570d51_2d8b71b4",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 59
      },
      "revId": "0729c835cc00a164483f249c2e90fb998c43ea76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0446c3a3_6409ed03",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-11-27T17:40:28Z",
      "side": 1,
      "message": "\"Unbundled\" is a method here - it doesn\u0027t characterise a set of artifacts that clearly need to have the same set of architectures. One can e.g. imagine similar \"unbundled\" building for Wear and Auto where the requirements would be different.\n\n\"Aml\" is specific in that regard. Maybe it\u0027s too narrow; it was intended to cover only APEXes, not apps. I\u0027m not sure it\u0027s wise to extend the scope because it ties together different domains that we may want to handle differently. So it was intentional to err on the side of being too narrow rather than too wide, and imo that still applies.\n\nIf what you\u0027re trying to do isn\u0027t limited to APEXes then it may be better to introduce a separate flag both here and in Soong for it, although with such a proliferation we should probably consider replacing the boolean flags with an enum-like variable, i.e. having something like TARGET_MULTI_ARCH in Soong too.",
      "parentUuid": "8343d5fb_007209fd",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 59
      },
      "revId": "0729c835cc00a164483f249c2e90fb998c43ea76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84b551f3_909b4b9c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-11-27T18:31:23Z",
      "side": 1,
      "message": "\"unbundled\" on its own is probably a bad name. I named the product unbundled_all, because it\u0027s \"all the relevant archs for an unbundled build\". Does that make  sense here too?",
      "parentUuid": "0446c3a3_6409ed03",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 59
      },
      "revId": "0729c835cc00a164483f249c2e90fb998c43ea76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d7e9f8c_371f3065",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-11-27T19:33:05Z",
      "side": 1,
      "message": "Well, my concern applies to \"unbundled build\" as well. What specific products being built unbundled are you addressing?\n\nAml_abis is defined as \"ABIs supported by mainline modules\" (https://cs.android.com/android/platform/superproject/+/master:build/soong/android/arch.go;l\u003d1497;drc\u003de9fe2949b887deba2b46b2a8c043f228a95e99e3) - I\u0027d be happiest if it stayed that way and wasn\u0027t used for neither more nor less. If that\u0027s your use case then why not stay with it? Or perhaps rename it to \"mainline\" to make it a bit more clear (trying to introduce \"AML\" as an acronym admittedly looks like a dud now).\n\nIf you\u0027re addressing apps in general then you may be better off with something like an Apps_native_abis() function in Soong to keep it separate from Aml_abis. They may not be identical: notice e.g. the \"neon\" difference between Aml_abis and Ndk_abis. It\u0027s the way it is for good reason and neither can change to the other. In case of apps it\u0027s not obvious (to me at least) whether they should enable neon or not - the answer may even be different for different apps. And that\u0027s just an example.\n\n(Ideally we should lift the whole list of arches from Soong to product variables and solve it all there, but that requires more engineering work.)",
      "parentUuid": "84b551f3_909b4b9c",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 59
      },
      "revId": "0729c835cc00a164483f249c2e90fb998c43ea76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e861c991_b73b6623",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-11-30T10:31:52Z",
      "side": 1,
      "message": "I think aml_abis \u003d\u003d apps_native_abis (and I thought we agreed in the chat that the list for \"aml_abis\" is actually incorrect/dangerous as-is?)\n\nLet\u0027s discuss this on Thursday",
      "parentUuid": "7d7e9f8c_371f3065",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 59
      },
      "revId": "0729c835cc00a164483f249c2e90fb998c43ea76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}