{
  "comments": [
    {
      "key": {
        "uuid": "ab45eb72_baa030af",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2442,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2019-07-11T18:19:58Z",
      "side": 1,
      "message": "You should just be able to rely on BOARD_USES_VENDORIMAGE, it will always be set if BOARD_VENDORIMAGE_FILE_SYSTEM_TYPE is set",
      "range": {
        "startLine": 2442,
        "startChar": 63,
        "endLine": 2442,
        "endChar": 97
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2171d2a9_90d94213",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2442,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-07-11T20:37:14Z",
      "side": 1,
      "message": "Ack; Will swap.",
      "parentUuid": "ab45eb72_baa030af",
      "range": {
        "startLine": 2442,
        "startChar": 63,
        "endLine": 2442,
        "endChar": 97
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8febc8da_5df281bc",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2444,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2019-07-11T18:19:58Z",
      "side": 1,
      "message": "What\u0027s the intent of these -- I assume they should only be set if we\u0027re actually building them, since if we\u0027re not building them, they\u0027re not guaranteed to be valid? In which case you should be using BUILDING_*_IMAGE to check.",
      "range": {
        "startLine": 2444,
        "startChar": 6,
        "endLine": 2444,
        "endChar": 28
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66b42e7d_3f0dc520",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2444,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-07-11T20:37:14Z",
      "side": 1,
      "message": "Ack, I\u0027ll swap to that.",
      "parentUuid": "8febc8da_5df281bc",
      "range": {
        "startLine": 2444,
        "startChar": 6,
        "endLine": 2444,
        "endChar": 28
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b640ced_957629e3",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2450,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2019-07-11T18:19:58Z",
      "side": 1,
      "message": "Similarly, we may not be building the system image, right? (For vendor-only builds)",
      "range": {
        "startLine": 2450,
        "startChar": 0,
        "endLine": 2450,
        "endChar": 64
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc4c8ffb_485d8d9d",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2450,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-07-11T20:37:14Z",
      "side": 1,
      "message": "Ack; I didn\u0027t think of that.",
      "parentUuid": "3b640ced_957629e3",
      "range": {
        "startLine": 2450,
        "startChar": 0,
        "endLine": 2450,
        "endChar": 64
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad8a13ef_7d64642f",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2451,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2019-07-11T18:19:58Z",
      "side": 1,
      "message": "IIRC, you can\u0027t use PRIVATE_ variables here, but you can check the ninja file to make sure",
      "range": {
        "startLine": 2451,
        "startChar": 3,
        "endLine": 2451,
        "endChar": 24
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6c7b5b3_c9c6999d",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2451,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-07-11T20:37:14Z",
      "side": 1,
      "message": "Is it the PRIVATE_ prefix that\u0027s the problem or can I not define variables ahead of the dependencies at all?\n\nI\u0027m guessing it\u0027s that I can\u0027t do this at all, since I only see /dev/null when this gets called.",
      "parentUuid": "ad8a13ef_7d64642f",
      "range": {
        "startLine": 2451,
        "startChar": 3,
        "endLine": 2451,
        "endChar": 24
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79665579_19970675",
        "filename": "core/definitions.mk",
        "patchSetId": 4
      },
      "lineNbr": 2451,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2019-07-11T21:12:01Z",
      "side": 1,
      "message": "target-specific variables (the \"$(2): \" prefix), which we start with PRIVATE_ by convention",
      "parentUuid": "a6c7b5b3_c9c6999d",
      "range": {
        "startLine": 2451,
        "startChar": 3,
        "endLine": 2451,
        "endChar": 24
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1e0135c_d8cb5d47",
        "filename": "tools/fs_config/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 422,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2019-07-11T18:19:58Z",
      "side": 1,
      "message": "These should probably always be defined",
      "range": {
        "startLine": 422,
        "startChar": 0,
        "endLine": 422,
        "endChar": 68
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85790150_2076fc5f",
        "filename": "tools/fs_config/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 422,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-07-11T20:37:14Z",
      "side": 1,
      "message": "Without these, I end up with\n\nbuild/make/core/base_rules.mk:481: error: writing to readonly directory: \"/etc/group\"\n\nPresumably due to TARGET_OUT_\u003csomething\u003e not being defined.",
      "parentUuid": "d1e0135c_d8cb5d47",
      "range": {
        "startLine": 422,
        "startChar": 0,
        "endLine": 422,
        "endChar": 68
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebb6968d_2755ace3",
        "filename": "tools/fs_config/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 422,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-07-11T21:02:14Z",
      "side": 1,
      "message": "Nevermind there, the system_ext group file was specified wrong.",
      "parentUuid": "85790150_2076fc5f",
      "range": {
        "startLine": 422,
        "startChar": 0,
        "endLine": 422,
        "endChar": 68
      },
      "revId": "4cc9faf30a9367ff0453a3ba8273aa3a13860d55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}