{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a7d7fb50_0e38609c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-01-19T21:40:47Z",
      "side": 1,
      "message": "Between this and `TRACE_BEGIN_SOONG` in soong_ui.bash? _wrap_build doesn\u0027t do all that much.",
      "range": {
        "startLine": 10,
        "startChar": 30,
        "endLine": 10,
        "endChar": 51
      },
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0a38089_32c0d034",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1948227
      },
      "writtenOn": "2023-01-19T21:50:37Z",
      "side": 1,
      "message": "I\u0027m referencing the `buildStarted` var in soong_ui/main.go\n\nPrevious timing showed that this could different from the shell-script by 5s on a clean build and ~71ms on a null-build.",
      "parentUuid": "a7d7fb50_0e38609c",
      "range": {
        "startLine": 10,
        "startChar": 30,
        "endLine": 10,
        "endChar": 51
      },
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "227aa71c_deaccfd8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-01-19T22:01:47Z",
      "side": 1,
      "message": "Yeah, that\u0027s what `TRACE_BEGIN_SOONG` is meant to measure, and it\u0027ll actually work in CI builds too, unlike this implementation. (CI does not use envsetup.sh)\n\nSeparately, that time is likely almost entirely in these three compile actions: https://cs.android.com/android/platform/superproject/+/master:build/soong/soong_ui.bash;drc\u003dfa5fc26ce279299ba116cdd968ff207daba201c4;l\u003d29 -- I have no idea why we\u0027re building mk2rbc and rbcrun there instead of doing them in parallel later on if necessary\n\nThe build.trace file used to include the soong_ui microfactory trace build, I don\u0027t know if it\u0027s properly including the other two now.",
      "parentUuid": "f0a38089_32c0d034",
      "range": {
        "startLine": 10,
        "startChar": 30,
        "endLine": 10,
        "endChar": 51
      },
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59977245_6698f265",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1948227
      },
      "writtenOn": "2023-01-20T00:19:41Z",
      "side": 1,
      "message": "Context: we\u0027re trying to measure how long a typical workflow is for developers. We want an apples-to-apples comparison of b to m. CI isn\u0027t as important for this.\n\nIs there a preferred approach you have?",
      "parentUuid": "227aa71c_deaccfd8",
      "range": {
        "startLine": 10,
        "startChar": 30,
        "endLine": 10,
        "endChar": 51
      },
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74acae3d_8c491802",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-01-24T20:35:02Z",
      "side": 1,
      "message": "My main complaint is that we have two separate ways for this to happen now, both only working in certain circumstances.",
      "parentUuid": "59977245_6698f265",
      "range": {
        "startLine": 10,
        "startChar": 30,
        "endLine": 10,
        "endChar": 51
      },
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52c921f0_17c53fbb",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 1897,
      "author": {
        "id": 1903985
      },
      "writtenOn": "2023-01-24T20:13:53Z",
      "side": 1,
      "message": "not sure what \"darwin friendly means here\"\nand the retention of 13 digits is to get rid of microseconds/nanoseconds?",
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fee3f2c1_793bcbe0",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 1897,
      "author": {
        "id": 1948227
      },
      "writtenOn": "2023-01-24T20:27:48Z",
      "side": 1,
      "message": "the other script uses `date +%s%3N` which isn\u0027t Darwin-friendly.\n\nThe cut gives the equivalent format. \nIf nanos is a better approach, we can refactor later but that would be a bigger operation.",
      "parentUuid": "52c921f0_17c53fbb",
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4c5ac3c_abe498ac",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 1897,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-01-24T20:35:02Z",
      "side": 1,
      "message": "This still isn\u0027t darwin compatible though:\n\n```\n$ date +%s%N | cut -b1-13\n1674592353N\n```",
      "parentUuid": "fee3f2c1_793bcbe0",
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43b35122_06e4e5b4",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 1897,
      "author": {
        "id": 1948227
      },
      "writtenOn": "2023-01-24T20:37:42Z",
      "side": 1,
      "message": "Major oof - thanks for pointing this out.",
      "parentUuid": "c4c5ac3c_abe498ac",
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21d28fcf_1d6db5d8",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 1897,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-01-24T20:47:07Z",
      "side": 1,
      "message": "If it helps, it looks like our toybox date prebuilt does work:\n\n```\n$ prebuilts/build-tools/path/darwin-x86/date +%s%3N\n1674593193570\n```",
      "parentUuid": "43b35122_06e4e5b4",
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c9ffc50_b835f3b4",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 1897,
      "author": {
        "id": 1903985
      },
      "writtenOn": "2023-01-24T21:29:19Z",
      "side": 1,
      "message": "@dacek@google.com\n\nDo we have an existing example of choosing the write binary in envsetup.sh?\n(or is this something already taken care of by putting the write toybox and/or other binaries in PATH)?\n\naprt from envsetyp.sh, does this also work for direct invocation of `soong_ui.bash`?",
      "parentUuid": "21d28fcf_1d6db5d8",
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0966ab21_575ab1f1",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 1897,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-01-24T21:35:48Z",
      "side": 1,
      "message": "It won\u0027t be in PATH, since we don\u0027t expect user\u0027s shells to be migrated to toybox.",
      "parentUuid": "3c9ffc50_b835f3b4",
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1cff666_8f4cddfa",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 1897,
      "author": {
        "id": 1948227
      },
      "writtenOn": "2023-01-27T20:35:16Z",
      "side": 1,
      "message": "I think we can intuit this from $TOP, no? \n\nDan, how did you test this with Darwin?\nI also feel sort of bad submitting this without at least hearing a differing proposal from you. I get that it seems awfully duplicated - but given that we want to compare like-to-like to see how `b` compares to `m`, I think it\u0027s worthy.",
      "parentUuid": "0966ab21_575ab1f1",
      "revId": "d6209e5d695ae55c3c558caca894de71d34a7be9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}