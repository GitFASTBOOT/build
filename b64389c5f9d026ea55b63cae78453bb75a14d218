{
  "comments": [
    {
      "key": {
        "uuid": "fb75bfb9_5c1cccf4",
        "filename": "core/java.mk",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-18T22:18:59Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 530,
        "endChar": 25
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56278298_efcaf11f",
        "filename": "core/java.mk",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 1023201
      },
      "writtenOn": "2015-11-19T11:09:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb75bfb9_5c1cccf4",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 530,
        "endChar": 25
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb75bfb9_3fa8e29a",
        "filename": "core/java.mk",
        "patchSetId": 3
      },
      "lineNbr": 533,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-18T22:18:59Z",
      "side": 1,
      "message": "In the previous implementation, we don\u0027t have proguard_dictionary as a dependency target. Instead we establish the dependency directly on $(link_instr_intermediates_dir.COMMON)/proguard.classes.jar.\n\nJack can also go that way.",
      "range": {
        "startLine": 533,
        "startChar": 0,
        "endLine": 533,
        "endChar": 72
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "569062ca_07363c91",
        "filename": "core/java.mk",
        "patchSetId": 3
      },
      "lineNbr": 533,
      "author": {
        "id": 1023201
      },
      "writtenOn": "2015-11-19T11:09:55Z",
      "side": 1,
      "message": "Ok I see the lack of coherency there. I feel more comfortable to depend on the used file instead of depending on the file known to be built at the same time. So maybe I could modify the legacy rules to align them on that. What do you think?",
      "parentUuid": "fb75bfb9_3fa8e29a",
      "range": {
        "startLine": 533,
        "startChar": 0,
        "endLine": 533,
        "endChar": 72
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b816bc7_2cd8bc45",
        "filename": "core/java.mk",
        "patchSetId": 3
      },
      "lineNbr": 533,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-20T00:28:54Z",
      "side": 1,
      "message": "I don\u0027t have strong opinion. I prefer the legacy setup: it\u0027s simpler.",
      "parentUuid": "569062ca_07363c91",
      "range": {
        "startLine": 533,
        "startChar": 0,
        "endLine": 533,
        "endChar": 72
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b25eb9e_5ecc973a",
        "filename": "core/java.mk",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-18T22:18:59Z",
      "side": 1,
      "message": "see here.",
      "range": {
        "startLine": 540,
        "startChar": 0,
        "endLine": 541,
        "endChar": 89
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db847bce_b0c2da81",
        "filename": "core/java.mk",
        "patchSetId": 3
      },
      "lineNbr": 645,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-18T22:18:59Z",
      "side": 1,
      "message": "Though I don\u0027t think we have any such cases in the source tree for now, but if it\u0027s a static Java library, it should be\n$(jack_dictionary) : $(full_classes_jack)\n\nFollowing the existing approach, we can also establish the dependency as: \n$(built_dex_intermediate) : $(link_instr_intermediates_dir.COMMON)/classes.dex",
      "range": {
        "startLine": 645,
        "startChar": 20,
        "endLine": 645,
        "endChar": 45
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b4e7783_2ef66bbc",
        "filename": "core/java.mk",
        "patchSetId": 3
      },
      "lineNbr": 645,
      "author": {
        "id": 1023201
      },
      "writtenOn": "2015-11-19T11:09:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db847bce_b0c2da81",
      "range": {
        "startLine": 645,
        "startChar": 20,
        "endLine": 645,
        "endChar": 45
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b816bc7_8bf9bdec",
        "filename": "core/java_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-18T22:18:59Z",
      "side": 1,
      "message": "I found a problem here:\nfull_shared_jack_libs are the proguarded .jack files.\nWon\u0027t that cause compilation error if a library is obfuscated? because the symbol references in the current module\u0027s source are original unobfuscated one.\nThat\u0027s why when jack is disabled, we link against the classes.jar, the file before Proguard processing.",
      "range": {
        "startLine": 284,
        "startChar": 0,
        "endLine": 285,
        "endChar": 87
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b4e7783_8e543f4b",
        "filename": "core/java_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 1023201
      },
      "writtenOn": "2015-11-19T11:09:55Z",
      "side": 1,
      "message": "I agree, obfuscated library will cause compilation error here. But won\u0027t they cause runtime failure if we compile against the unobfuscated .jack? I mean we handle no other mapping/dictionary than the one given by LOCAL_INSTRUMENTATION_FOR, so nothing to handle an eventual obfuscated LOCAL_JAVA_LIBRARIES.",
      "parentUuid": "5b816bc7_8bf9bdec",
      "range": {
        "startLine": 284,
        "startChar": 0,
        "endLine": 285,
        "endChar": 87
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b25eb9e_a44a7556",
        "filename": "core/java_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-19T23:55:53Z",
      "side": 1,
      "message": "Yes, we need to make sure the dependent uses the library\u0027s dictionary, not hard by setting up the dependency and LOCAL_PROGUARD_FLAGS in the dependent\u0027s Android.mk.\nNo existing use case for now. But I remember Narayan asked me for this kind of thing not long time ago.\n\nIf we have dependency on classes.noshrob.jack, that means we\u0027ll be also building all library\u0027s classes.noshrob.jack, which we don\u0027t build previously, in addition to classes.jack.\n\nIt\u0027s fine to leave it as is now. But probably put a note here.",
      "parentUuid": "3b4e7783_8e543f4b",
      "range": {
        "startLine": 284,
        "startChar": 0,
        "endLine": 285,
        "endChar": 87
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56278298_9a59bd43",
        "filename": "core/java_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 1023201
      },
      "writtenOn": "2015-11-20T17:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b25eb9e_a44a7556",
      "range": {
        "startLine": 284,
        "startChar": 0,
        "endLine": 285,
        "endChar": 87
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b816bc7_2bfe69d3",
        "filename": "core/java_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 302,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-18T22:18:59Z",
      "side": 1,
      "message": "similar here.",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 302,
        "endChar": 48
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b6aafda_966a3d94",
        "filename": "core/java_common.mk",
        "patchSetId": 3
      },
      "lineNbr": 315,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-11-18T22:18:59Z",
      "side": 1,
      "message": "this is correct.",
      "range": {
        "startLine": 315,
        "startChar": 3,
        "endLine": 315,
        "endChar": 89
      },
      "revId": "b64389c5f9d026ea55b63cae78453bb75a14d218",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}