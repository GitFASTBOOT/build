{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ab2351f5_371e5273",
        "filename": "target/product/gsi/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-06-28T11:20:23Z",
      "side": 1,
      "message": "could we exclude only prebuilt-APEX-exported libraries here?",
      "range": {
        "startLine": 121,
        "startChar": 64,
        "endLine": 122,
        "endChar": 75
      },
      "revId": "00c2976571c7766fd40ae36f333491616ac047b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d3f9c04_9a560736",
        "filename": "target/product/gsi/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-06-28T11:30:38Z",
      "side": 1,
      "message": "Or just remove the reference lsdumps of prebuilt APEXes on master if they are going to be prebuilt APEXes",
      "parentUuid": "ab2351f5_371e5273",
      "range": {
        "startLine": 121,
        "startChar": 64,
        "endLine": 122,
        "endChar": 75
      },
      "revId": "00c2976571c7766fd40ae36f333491616ac047b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f4a34b3_a39ffb2c",
        "filename": "target/product/gsi/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-06-28T13:49:45Z",
      "side": 1,
      "message": "Note that building from source or prebuilts is an aspect of the build, not the source in the APEX module. There will be builds with the same sources building from either sources or prebuilts.\n\nIsn\u0027t the intention with https://r.android.com/1513138 to check APEXes? I\u0027m definitely in favour of having ABI checks for APEX APIs, also for modules like ART aiming for unbundling. Although this place doesn\u0027t fit unbundled modules very well, it fills a purpose in at least SC since there still are builds where they are built from source.\n\nAlso, for partners I believe the plan is to enable prebuilts for essentially all module SDKs, which means they all would need to be disabled.\n\nHence I prefer to keep the abidump checks and just relax the check for superfluous files. If we instead go for disabling the libraries that may be built from prebuilts and remove their lsdump files, doesn\u0027t that mean we\u0027ll have to identify and return false from them in shouldCreateSourceAbiDumpForLibrary in sabi.go as well?",
      "parentUuid": "1d3f9c04_9a560736",
      "range": {
        "startLine": 121,
        "startChar": 64,
        "endLine": 122,
        "endChar": 75
      },
      "revId": "00c2976571c7766fd40ae36f333491616ac047b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2ca780f_d37e1911",
        "filename": "target/product/gsi/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-06-28T14:14:12Z",
      "side": 1,
      "message": "I thought the intention of this change was to eventually remove the source of ART APEX from master and build the ART APEX from the mainline branch, so I suggested removing the reference dump from master, as the APEX ABI is checked in the mainline branch already.\n\n\u003e Note that building from source or prebuilts is an aspect of the build, not the source in the APEX module. *There will be builds with the same sources building from either sources or prebuilts.*\n\nACK. I think this seals the deal. We shouldn\u0027t remove the reference dumps for (ART) APEX libraries, because other build configs would need them.\n\n\u003e Isn\u0027t the intention with https://r.android.com/1513138 to check APEXes? I\u0027m definitely in favour of having ABI checks for APEX APIs, also for modules like ART aiming for unbundling. \n\nYes and Yes.\n\n\u003e Hence I prefer to keep the abidump checks and just relax the check for superfluous files.\n\nYes let\u0027s do this. In this case can you export a list libraries from soong that contains libraries that are \"exported by an APEX and such APEX is prebuilt_apex\", and here we should only exclude these libraries when checking \"added_platform_abi_dumps\".",
      "parentUuid": "0f4a34b3_a39ffb2c",
      "range": {
        "startLine": 121,
        "startChar": 64,
        "endLine": 122,
        "endChar": 75
      },
      "revId": "00c2976571c7766fd40ae36f333491616ac047b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40b88ac6_225643fc",
        "filename": "target/product/gsi/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-06-28T14:16:20Z",
      "side": 1,
      "message": "And maybe \"added_ndk_abi_dumps\" too. I\u0027m not really sure about NDK... Are NDKs provided (or going to be provided) by APEXes?",
      "parentUuid": "a2ca780f_d37e1911",
      "range": {
        "startLine": 121,
        "startChar": 64,
        "endLine": 122,
        "endChar": 75
      },
      "revId": "00c2976571c7766fd40ae36f333491616ac047b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9961bfcd_982a429f",
        "filename": "target/product/gsi/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-06-28T15:21:38Z",
      "side": 1,
      "message": "\u003e In this case can you export a list libraries from soong that contains libraries that are \"exported by an APEX and such APEX is prebuilt_apex\"\n\nUnfortunately that\u0027s nontrivial, because we don\u0027t have any notion of which APEXes correspond to which prebuilt libraries in Soong. It would be possible to export a list of the prebuilt libraries with stubs, but given that a lot of (all?) current module SDKs are getting prebuilts in b/188427719 (also in AOSP and git_master), the difference from STUB_LIBRARIES would be small or nonexistent in practice.\n\n\u003e Are NDKs provided (or going to be provided) by APEXes?\n\nYes, e.g. the ART module provides the NDK library libnativehelper. Of the three checks below the only one I don\u0027t have issues with atm is the first for LLNDK, VNDK-SP, VNDK-core. I\u0027ve excluded that one.",
      "parentUuid": "40b88ac6_225643fc",
      "range": {
        "startLine": 121,
        "startChar": 64,
        "endLine": 122,
        "endChar": 75
      },
      "revId": "00c2976571c7766fd40ae36f333491616ac047b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "badb1e9b_4617e851",
        "filename": "target/product/gsi/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-06-28T15:38:52Z",
      "side": 1,
      "message": "Sounds fair to me. Let\u0027s see if Hsin-Yi has any input?",
      "parentUuid": "9961bfcd_982a429f",
      "range": {
        "startLine": 121,
        "startChar": 64,
        "endLine": 122,
        "endChar": 75
      },
      "revId": "00c2976571c7766fd40ae36f333491616ac047b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5d1ba46_900f6df0",
        "filename": "target/product/gsi/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1130827
      },
      "writtenOn": "2021-06-29T08:59:43Z",
      "side": 1,
      "message": "\u003e given that a lot of (all?) current module SDKs are getting prebuilts in b/188427719 (also in AOSP and git_master)\n\nDoes that mean some libraries in AOSP and in T branch will be prebuilt?\nIf so, we have to adjust the ABI freeze process. Is there a branch where we can build all libraries and their ABI dumps from source?",
      "parentUuid": "badb1e9b_4617e851",
      "range": {
        "startLine": 121,
        "startChar": 64,
        "endLine": 122,
        "endChar": 75
      },
      "revId": "00c2976571c7766fd40ae36f333491616ac047b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}