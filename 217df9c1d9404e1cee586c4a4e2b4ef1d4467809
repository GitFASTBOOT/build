{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa85c0b1_7d73a1a7",
        "filename": "tools/aconfig/src/codegen_java.rs",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1981530
      },
      "writtenOn": "2023-05-10T15:07:40Z",
      "side": 1,
      "message": "Here, instead of writing `return files;`, you can simply write the expression `files`, which is usually preferred in Rust.",
      "revId": "217df9c1d9404e1cee586c4a4e2b4ef1d4467809",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7b13f0c_01e9b10c",
        "filename": "tools/aconfig/src/codegen_java.rs",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1944425
      },
      "writtenOn": "2023-05-10T15:39:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa85c0b1_7d73a1a7",
      "revId": "217df9c1d9404e1cee586c4a4e2b4ef1d4467809",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e5c0d07_652468ad",
        "filename": "tools/aconfig/src/commands.rs",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1981530
      },
      "writtenOn": "2023-05-10T15:12:06Z",
      "side": 1,
      "message": "Unless there\u0027s a good reason, you might want to take a `\u0026Cache` instead of a `Cache` here, that lets this API be a little more flexible. Otherwise, once you call `generate_code` with a `Cache` passed in, you can\u0027t use that `Cache` again without `clone`ing it.",
      "revId": "217df9c1d9404e1cee586c4a4e2b4ef1d4467809",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5785e5d4_4e92dc45",
        "filename": "tools/aconfig/src/commands.rs",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1944425
      },
      "writtenOn": "2023-05-10T15:39:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e5c0d07_652468ad",
      "revId": "217df9c1d9404e1cee586c4a4e2b4ef1d4467809",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "243aabd9_c6bd2e45",
        "filename": "tools/aconfig/src/commands.rs",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-05-10T15:43:49Z",
      "side": 1,
      "message": "A word on how ownership is used in aconfig: main calls various methods in commands.rs; these all take parameters by value, and take ownership, the idea being that the commands are free to do what they want with the data and main should explicitly not use it once the command returns.\n\nBut the commands.rs layer is a bit special and for the rest of the code I think it makes sense to be as restrictive as possible, i.e. read-only where write access is not needed. So yeah, generated_code should take \u0026Cache as input.",
      "parentUuid": "9e5c0d07_652468ad",
      "revId": "217df9c1d9404e1cee586c4a4e2b4ef1d4467809",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06cc79b8_9df7a500",
        "filename": "tools/aconfig/src/commands.rs",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1944425
      },
      "writtenOn": "2023-05-11T01:39:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "243aabd9_c6bd2e45",
      "revId": "217df9c1d9404e1cee586c4a4e2b4ef1d4467809",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}