{
  "comments": [
    {
      "key": {
        "uuid": "81f00126_c17258c7",
        "filename": "core/envsetup.mk",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-05-18T17:55:50Z",
      "side": 1,
      "message": "Won\u0027t this cause all of the app packages, etc. to rebuild into obj_asan?  It seems like you would only want to change this for modules that have asan enabled, but that would break the way make finds files from other modules.",
      "revId": "d8eabaa6c7975e59380bf2b6f9ef3af068ae2d2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "829badf8_4a10d4c2",
        "filename": "core/envsetup.mk",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1068404
      },
      "writtenOn": "2017-05-18T18:06:51Z",
      "side": 1,
      "message": "Yeah - I need to find a way to do this more selectively (without breaking other things). I think this is still a good first step though. There\u0027s the increased cost of rebuilding  extra components, but it speeds up incremental builds overall - and makes TreeHugger presubmit tests using ASAN targets more viable. \n\nI\u0027m still going to continue to look at better ways of doing this, but maybe we can have it be this way for now?",
      "parentUuid": "81f00126_c17258c7",
      "revId": "d8eabaa6c7975e59380bf2b6f9ef3af068ae2d2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89e8c466_7de76c75",
        "filename": "core/envsetup.mk",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-05-18T18:13:28Z",
      "side": 1,
      "message": "Treehugger doesn\u0027t do incremental builds, and I don\u0027t think it will any time soon, although there is a design doc for it.  Won\u0027t this increase the time for doing clean asan builds?",
      "parentUuid": "829badf8_4a10d4c2",
      "revId": "d8eabaa6c7975e59380bf2b6f9ef3af068ae2d2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b783b77_f4777053",
        "filename": "core/envsetup.mk",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2017-05-18T18:38:18Z",
      "side": 1,
      "message": "Good point. What are the numbers for clean build with and without this change?\nWhat if we only do this for the soong half of the build? The make half is supposed to shrink over time.",
      "parentUuid": "89e8c466_7de76c75",
      "revId": "d8eabaa6c7975e59380bf2b6f9ef3af068ae2d2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bf15831_ac8c75d7",
        "filename": "core/envsetup.mk",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1068404
      },
      "writtenOn": "2017-05-19T01:33:58Z",
      "side": 1,
      "message": "Ok ran the numbers:\nWithout this CL:\nClean build\n  --\u003e 7039.93s user 1334.72s system 374% cpu 37:18.64 total\nIncremental build\n  --\u003e  2530.01s user 783.00s system 228% cpu 24:07.16 total\n  --\u003e  2513.28s user 733.22s system 251% cpu 21:33.11 total\n\nWith this CL:\nClean build\n  ---\u003e 11494.76s user 1546.72s system 603% cpu 36:01.79 total\nIncremental build\n  --\u003e  3795.44s user 658.36s system 587% cpu 12:37.66 total\n  --\u003e 3907.25s user 558.55s system 678% cpu 10:58.11 total\n\nSo looks like clean builds are almost unaffected, but incremental is roughly halved. I think this is worth landing (also confirmed that incremental build support for TH is expected soon-ish).",
      "parentUuid": "2b783b77_f4777053",
      "revId": "d8eabaa6c7975e59380bf2b6f9ef3af068ae2d2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af787c33_1ab80d01",
        "filename": "core/envsetup.mk",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2017-05-19T17:27:24Z",
      "side": 1,
      "message": "Interesting, it means there are parts of the build with very little parallelism, so building basically twice as much stuff barely affects the total wall time.\n\nThis sounds like the right trade-off.",
      "parentUuid": "6bf15831_ac8c75d7",
      "revId": "d8eabaa6c7975e59380bf2b6f9ef3af068ae2d2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}