{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "84e524ce_7b4b3f79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1040443
      },
      "writtenOn": "2024-03-19T16:36:24Z",
      "side": 1,
      "message": "+vdonnefort to check if trace_probes (which gives perfetto ftrace data) is expected to be there or not in microdroid.\n\nRegardless of the above, can you help me understand this change a bit more?\nWhere is traced_probes.android declared? How do we make traced_probes be there on Android but not on microdroid?\nI guess this is done in some related CL, but I coudln\u0027t immediately find any in the \"Submitted together\" listead by gerrit",
      "revId": "d1bebd88c8ba78b620b217e6ef1a497dbd8ceaeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dfac942_c774c543",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-20T05:52:48Z",
      "side": 1,
      "message": "The perfetto side change is aosp/3003165. traced_probes.android.is defined there.\n\nI was able to not have traced_probes.android in Microdroid by simply not listing it in the `deps` property [1].\n\n\n[1] https://cs.android.com/android/platform/superproject/main/+/main:packages/modules/Virtualization/microdroid/Android.bp;drc\u003d9da7b2d391bbbd707ef2856f93539aef96879db5;l\u003d108",
      "parentUuid": "84e524ce_7b4b3f79",
      "revId": "d1bebd88c8ba78b620b217e6ef1a497dbd8ceaeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dab5e5b3_50d77310",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1040443
      },
      "writtenOn": "2024-03-21T12:13:56Z",
      "side": 1,
      "message": "I see. BUt you are still listing both here in base_system.mk you are not removing traced_probes, how does it remove the dependency??",
      "parentUuid": "4dfac942_c774c543",
      "revId": "d1bebd88c8ba78b620b217e6ef1a497dbd8ceaeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9f6d17d_c0178082",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-21T13:53:03Z",
      "side": 1,
      "message": "Currently, Android and Microdroid are built quite differently. The Android system image is built by Make (though individual files are built by Soong), and what to include in the filesystem image is determined by `PRODUCT_PACKAGES` and their `required` dependencies. To be specific, what\u0027s written in `required` is translated into `LOCAL_REQUIRED_MODULES` and handled by Make.\n\nOn the other hand, Microdroid system image is entirely built by Soong [1]. What to included is termined by the `deps` property, but so far it didn\u0027t track `required` dependencies. As a result, `libperfetto_android_internal` (and its dependencies) were not included in Microdroid.\n\nNow, with my change in Soong, it can correctly track the `required` dependencies. However, that means we have much more files in Microdroid system image than before. For example, we will have `android.hardware.health@2.0` and more [2] there. This will come as a huge regression in size, and it\u0027s a waste actually because Microdroid doesn\u0027t have the health HAL (actully any HAL).\n\nFor the correct behavior of perfetto, we may need all or some of those additional dependencies also in Microdroid. But that\u0027s a different issue that don\u0027t have to be fixed in this topic. I don\u0027t want to make any regression in size here.\n\n\n[1] https://cs.android.com/android/platform/superproject/main/+/main:packages/modules/Virtualization/microdroid/Android.bp;drc\u003d9da7b2d391bbbd707ef2856f93539aef96879db5;l\u003d62\n[2] https://cs.android.com/android/platform/superproject/main/+/main:external/perfetto/Android.bp;drc\u003d8f2b24418b1037ad977c538d97b51e17375e2b89;l\u003d704",
      "parentUuid": "dab5e5b3_50d77310",
      "revId": "d1bebd88c8ba78b620b217e6ef1a497dbd8ceaeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0f84d13_234c3e6b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-22T03:56:50Z",
      "side": 1,
      "message": "Ping. Does above answer your question/concerns?",
      "parentUuid": "c9f6d17d_c0178082",
      "revId": "d1bebd88c8ba78b620b217e6ef1a497dbd8ceaeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5034e232_be055df3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1040443
      },
      "writtenOn": "2024-03-22T11:56:05Z",
      "side": 1,
      "message": "ACK on your point \"for now I want to keep things as they are\" makes sense\n\nwhat I don\u0027t understand is the following: today the dependency graph from a buildsystem viewpoint is\n\n```\n[base_system.mk] -\u003e [traced_probes] -\u003e {libperfetto_android_internal, mm_events, ...}\n```\n\n\nnow, my expectation was that you\u0027d break the dependency at the root, i.e. break the dep between [microdroid] and [traced_probes]\ninstead now you have\n\n```\n[base_system.mk]  -\u003e [traced_probes]\n                     [traced_probes.android] -\u003e  {libperfetto_android_internal, mm_events, ...}\n```\n\nand I don\u0027t understand how it helps with microdroid. What\u0027s the resulting dep graph for microdroid?\nbecause:\n\ncase 1) If you end up depending only on one of the targets, either of them will pull stuff you don\u0027t want (either traced_probes alone, or mm_event and the rest)\n\ncase 2) if you end up depending on neither of them... what\u0027s the point of splitting in two\n\n\nLet me ask a different question, maybe it\u0027s easier: which targets from external/perfetto (if any) do you want for microdroif?",
      "parentUuid": "e0f84d13_234c3e6b",
      "revId": "d1bebd88c8ba78b620b217e6ef1a497dbd8ceaeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "907fe81b_6ae09670",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-22T13:25:48Z",
      "side": 1,
      "message": "We had a chat. And I changed the phony module name to perfetto-extras as suggested.",
      "parentUuid": "5034e232_be055df3",
      "revId": "d1bebd88c8ba78b620b217e6ef1a497dbd8ceaeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}