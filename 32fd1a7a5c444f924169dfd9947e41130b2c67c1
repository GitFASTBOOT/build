{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bfe1c4ce_08bc7720",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-01-23T19:24:08Z",
      "side": 1,
      "message": "These tools should all be hermetic, and I see various other fixes mentioned in the bug.  Is this necessary?",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63f48d85_f8fe52a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-01-23T19:27:13Z",
      "side": 1,
      "message": "The other fixes just disable imgdiff across the whole ecosystem. I didn\u0027t want to make decisions for other OEMs, so I uploaded this CL to give OEMs an option to disable imgdiff. Yes these tools are hermetic, but different OEMs might have different versions of zlib, so they might not see the same issue we are seeing.",
      "parentUuid": "bfe1c4ce_08bc7720",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab560967_58706615",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-01-23T19:28:23Z",
      "side": 1,
      "message": "Hermetic means they don\u0027t have a different version of zlib, they use the one from the tree.",
      "parentUuid": "63f48d85_f8fe52a2",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c264c1f_c4f91faf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-01-23T19:31:42Z",
      "side": 1,
      "message": "In that sense, then no, it\u0027s not hermetic. Even if OEMs use zlib from the tree, we have no guarantee that they are on the same commit as we are, right?",
      "parentUuid": "ab560967_58706615",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86599258_53854728",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-01-23T19:34:04Z",
      "side": 1,
      "message": "Isn\u0027t aosp/1548316 supposed to mitigate that by using the stable libz?",
      "parentUuid": "1c264c1f_c4f91faf",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b71f6b7_4ea3a38e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-01-23T19:41:29Z",
      "side": 1,
      "message": "Yes, we attempted to exclude platform specific assembly source files from stable version of zlib so that zlib would produce identical output across different platforms. According to product owners, that fix is already merged to tm branches. But we are still seeing zlib output mismatch issues. That means there\u0027s probably platform specific code in .c files as well. It would be difficult for us to maintain a \"forked\" version of zlib that always produce same output on host/device. So hence an option to disable imgdiff is the most straightforward solution I can think of.",
      "parentUuid": "86599258_53854728",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39ddc0db_4a9ea9ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-01-23T19:49:40Z",
      "side": 1,
      "message": "What kind of platform differences are you referring to here?\n\nRelying on zlib to be stable sounds like there may be a fundamental design issue with this feature.  Which two zlib outputs are required to be identical?",
      "parentUuid": "6b71f6b7_4ea3a38e",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdfa0ab8_9c1d688b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-01-23T20:11:14Z",
      "side": 1,
      "message": "Version A of zlib running on host needs to produce identical output as version B of zlib running on device. (Version A is zlib used in ota_from_target_files, version B is zlib used on device\u0027s recovery binary)",
      "parentUuid": "39ddc0db_4a9ea9ba",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77d0c1c8_0eef3f15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T20:28:09Z",
      "side": 1,
      "message": "but this is why we have a copy of zlib specifically for that... https://source.corp.google.com/android/external/zlib/Android.bp;l\u003d190?q\u003dfile:zlib%20imgdiff\u0026sq\u003dpackage:%5Eandroid$%20-file:prebuilts%2Fvndk%2F%20-file:prebuilts%2Fruntime%2F",
      "parentUuid": "cdfa0ab8_9c1d688b",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0920fa4_c3f0aab8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-01-23T20:31:00Z",
      "side": 1,
      "message": "Turns out libz_stable isn\u0027t as stable as we need? Since we are deprecating non-AB(which includes imgdiff) soon, I think it\u0027s better to disable imgdiff when needed rather than digging through zlib to find out what causes tiny output changes.",
      "parentUuid": "77d0c1c8_0eef3f15",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a59ecb26_7bbde570",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T20:57:24Z",
      "side": 1,
      "message": "\u003e Turns out libz_stable isn\u0027t as stable as we need?\n\nthat seems like an even deeper error, though, if you\u0027re not using a matched pair? (aiui, they don\u0027t have to be _stable_ exactly; they just have to _match_?)\n\n\u003e Since we are deprecating non-AB (which includes imgdiff) soon...\n\ni\u0027ve been hearing that every year for a while now :-) (in fact: i thought it was already _deprecated_, just not removed?)\n\nshould we just _remove_ imgdiff as a fully unsupported way to do non-A/B? (this change, effectively adding another configuration to support, seems worse than either fixing it -- which i don\u0027t think anyone cares enough for -- or removing it -- which this change in effect does for some people anyway?)",
      "parentUuid": "e0920fa4_c3f0aab8",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73348d19_32025896",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T20:58:51Z",
      "side": 1,
      "message": "(aside: is the commenter on the bug who says this is a _brotli_ difference correct? that would certainly explain why our zlib work hasn\u0027t helped if so!)",
      "parentUuid": "a59ecb26_7bbde570",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7dccb7c_6f7ecf82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-23T21:12:41Z",
      "side": 1,
      "message": "(ah, you answer that question in https://b.corp.google.com/issues/265895599#comment17 --- so it really is that the folks hitting this just don\u0027t _have_ zlib_stable. cherrypicking those two changes seems like the less bad option until/unless we remove imgdiff completely?)",
      "parentUuid": "73348d19_32025896",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2456ab62_8ab58359",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-01-23T21:42:23Z",
      "side": 1,
      "message": "\u003e that seems like an even deeper error, though, if you\u0027re not using a matched pair? (aiui, they don\u0027t have to be stable exactly; they just have to match?)\n\n\nThey don\u0027t have to be the exact same version, just need to produce same output.\n\n\u003e I\u0027ve been hearing that every year for a while now :-) (in fact: i thought it was already deprecated, just not removed?)\n\nCorrect, it\u0027s deprecated in android T, just not removed.\n\n\u003e should we just remove imgdiff as a fully unsupported way to do non-A/B? \n\nThis will increase all non-AB OTA sizes. I was little worried that doing so w/o any head up is going to surprise vendors.\n\n\u003e (ah, you answer that question in https://b.corp.google.com/issues/265895599#comment17 --- so it really is that the folks hitting this just don\u0027t have zlib_stable. cherrypicking those two changes seems like the less bad option until/unless we remove imgdiff completely?)\n\n\nSee https://b.corp.google.com/issues/265895599#comment18 , bug report claim that these two changes are already cherry-picked.",
      "parentUuid": "a7dccb7c_6f7ecf82",
      "revId": "32fd1a7a5c444f924169dfd9947e41130b2c67c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}