{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a7bc3a45_39107dc3",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1861,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-25T08:29:17Z",
      "side": 1,
      "message": "what about these? :)",
      "range": {
        "startLine": 1842,
        "startChar": 0,
        "endLine": 1861,
        "endChar": 38
      },
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "115c228e_1fc56536",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1861,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-03-25T08:35:03Z",
      "side": 1,
      "message": "Most of these (except INSTALLED_FILES_FILE_ROOT) are conditionally empty if the corresponding partition is not built\n\nfor example, INSTALLED_FILES_FILE is defined iff BUILDING_SYSTEM_IMAGE is defined truthy.\n\n---\n\n`INSTALLED_FILES_FILE_ROOT` this is unconditionally always built. It is depended only system.img and recovery.img build rule (and maybe some other implicit dependencies), and I can\u0027t really wrap my head around how (or why) it should (or should not) be unconditionally always built, so I\u0027ll just leave it alone. \nI think `INSTALLED_FILES_FILE_ROOT` comes from before we have recovery-as-boot. Nowadays the \"ROOT\" structure is embeded in system.img and recovery .img ramdisk, so maybe we can remove `INSTALLED_FILES_FILE_ROOT` entirely...?",
      "parentUuid": "a7bc3a45_39107dc3",
      "range": {
        "startLine": 1842,
        "startChar": 0,
        "endLine": 1861,
        "endChar": 38
      },
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98529f1f_16d766d3",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1861,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-25T08:42:26Z",
      "side": 1,
      "message": "Ah, the files exist, but are empty.\n\n\u003e we can remove INSTALLED_FILES_FILE_ROOT entirely...?\n\nYes, I think so. It could be a follow-up change though.",
      "parentUuid": "115c228e_1fc56536",
      "range": {
        "startLine": 1842,
        "startChar": 0,
        "endLine": 1861,
        "endChar": 38
      },
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0c829ac_1243f6c2",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1861,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-03-25T08:53:59Z",
      "side": 1,
      "message": "files don\u0027t exist.\n\nif `BUILDING_SYSTEM_IMAGE` is truthy, `INSTALLED_FILES_FILE_ROOT` would be defined and its build rule would be defined. `m droidcore` would build `INSTALLED_FILES_FILE_ROOT`.\n\nif `BUILDING_SYSTEM_IMAGE` is falsy, `INSTALLED_FILES_FILE_ROOT` would be empty, and its build rule would not be generated. And these dist _targets_ would expand to empty.",
      "parentUuid": "98529f1f_16d766d3",
      "range": {
        "startLine": 1842,
        "startChar": 0,
        "endLine": 1861,
        "endChar": 38
      },
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59b97699_1d2ef7d4",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1861,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-03-27T01:55:34Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a0c829ac_1243f6c2",
      "range": {
        "startLine": 1842,
        "startChar": 0,
        "endLine": 1861,
        "endChar": 38
      },
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e8aafdd_b8065905",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1862,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-25T08:29:17Z",
      "side": 1,
      "message": "didn\u0027t know that we have these...",
      "range": {
        "startLine": 1862,
        "startChar": 11,
        "endLine": 1862,
        "endChar": 32
      },
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb25df84_fc414959",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1867,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-03-25T18:00:11Z",
      "side": 1,
      "message": "Could we also wrap the definitions of these files in `BUILDING_*_IMAGE` here? https://cs.android.com/android/platform/superproject/main/+/main:build/make/core/sysprop.mk;l\u003d342;drc\u003d53dd895407cf3d09c559f31240a1985005d8085d",
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f5a29fd_5d65afe1",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1867,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-03-26T02:06:03Z",
      "side": 1,
      "message": "I\u0027m worried that changing that could unintentionally alter the definition of other build rules. There are some build rules that assume `INSTALLED*_BUILD_PROP_TARGET` are always defined, thus depending on them unconditionally, example:\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:build/make/core/Makefile;l\u003d2627\nhttps://cs.android.com/android/platform/superproject/main/+/main:build/make/core/Makefile;l\u003d2652\nhttps://cs.android.com/android/platform/superproject/main/+/main:build/make/core/Makefile;l\u003d6545\n\n---\n\nOTOH droidcore dist goals are only used for exporting files for developers to pick up later. Since these are not depended on by other rules, it should be safe to wrap these in `BUILDING_*_IMAGE`",
      "parentUuid": "cb25df84_fc414959",
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a1ff55a_6bf35407",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 1867,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-03-26T17:39:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8f5a29fd_5d65afe1",
      "revId": "adaf1c6f119d8c075fbb476102f23b3c98d28ed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}