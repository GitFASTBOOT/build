{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d568709b_56c6245e",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-02-03T02:45:51Z",
      "side": 1,
      "message": "I\u0027ve run some experiments, and I think you can keep this to be:\n\n   f.write(o)\n\n... with the changes below.",
      "range": {
        "startLine": 180,
        "startChar": 6,
        "endLine": 180,
        "endChar": 85
      },
      "revId": "0672d27fe9083643889af7e659447b419c66f96f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45f632b3_66e3b273",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2021-02-05T05:43:01Z",
      "side": 1,
      "message": "Done.\nFor py2, f.write(o) is enough.\nFor py3, the type combination of f and o gets a little complicated:\n#py3: --output-configs \u003e config.txt     TextIOWrapper, byts\n#py3: --output-version   release.txt    BufferedWriter, str\n#py3: others, f.write(o) is fine.",
      "parentUuid": "d568709b_56c6245e",
      "range": {
        "startLine": 180,
        "startChar": 6,
        "endLine": 180,
        "endChar": 85
      },
      "revId": "0672d27fe9083643889af7e659447b419c66f96f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3707f92f_50582a6b",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-02-06T02:39:53Z",
      "side": 1,
      "message": "You can avoid this complicated conditional by always making f.write() receive bytes.\n\nAlso, the conditional won\u0027t work if f is some unrecognized writer, e.g. when the implementation of the libraries changes. Poking into the implementation details is discouraged.",
      "parentUuid": "45f632b3_66e3b273",
      "range": {
        "startLine": 180,
        "startChar": 6,
        "endLine": 180,
        "endChar": 85
      },
      "revId": "0672d27fe9083643889af7e659447b419c66f96f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ff0d6f7_9d62cbed",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-02-06T02:54:29Z",
      "side": 1,
      "message": "(please let me know if it doesn\u0027t work)",
      "parentUuid": "3707f92f_50582a6b",
      "range": {
        "startLine": 180,
        "startChar": 6,
        "endLine": 180,
        "endChar": 85
      },
      "revId": "0672d27fe9083643889af7e659447b419c66f96f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c19fad1_90a5dd8f",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2021-02-07T11:02:03Z",
      "side": 1,
      "message": "It works!",
      "parentUuid": "8ff0d6f7_9d62cbed",
      "range": {
        "startLine": 180,
        "startChar": 6,
        "endLine": 180,
        "endChar": 85
      },
      "revId": "0672d27fe9083643889af7e659447b419c66f96f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96cda81e_f5ccb3e1",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-02-03T02:45:51Z",
      "side": 1,
      "message": "this should be\n\n  sys.stdin.buffer\n\nFrom https://docs.python.org/3/library/sys.html#sys.stdin\n\n\u003e Note: To write or read binary data from/to the standard streams, use the underlying binary buffer object. For example, to write bytes to stdout, use sys.stdout.buffer.write(b\u0027abc\u0027).\n\nSame for sys.stdout below; they should be\n\n  sys.stdout.buffer\n\nNote that the `buffer` field is only available on Python 3, so you might want some version checks. e.g.\n\n  sys.stdin.buffer if sys.version_info.major \u003d\u003d 3 else sys.stdin",
      "range": {
        "startLine": 198,
        "startChar": 30,
        "endLine": 198,
        "endChar": 39
      },
      "revId": "0672d27fe9083643889af7e659447b419c66f96f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3618aa2d_b0d0631d",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2021-02-03T03:02:39Z",
      "side": 1,
      "message": "Thanks a lot for the kind comments. Sorry I was working on some other tasks yesterday. I will have a try according to your suggestions.",
      "parentUuid": "96cda81e_f5ccb3e1",
      "range": {
        "startLine": 198,
        "startChar": 30,
        "endLine": 198,
        "endChar": 39
      },
      "revId": "0672d27fe9083643889af7e659447b419c66f96f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eda654a0_f9950bf8",
        "filename": "tools/extract_kernel.py",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2021-02-05T05:43:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3618aa2d_b0d0631d",
      "range": {
        "startLine": 198,
        "startChar": 30,
        "endLine": 198,
        "endChar": 39
      },
      "revId": "0672d27fe9083643889af7e659447b419c66f96f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}