{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cb9f1e4c_be4350b1",
        "filename": "target/product/default_art_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-18T16:04:23Z",
      "side": 0,
      "message": "I think it\u0027s still good to keep this line, as an example to show partners how to configure the GC. To avoid overwriting, you can replace `:\u003d` with `?\u003d`.",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 33
      },
      "revId": "5b6b40e037de0264cff1f8122af0bb521f5efca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64c2fbf0_fe80b69f",
        "filename": "target/product/default_art_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1064003
      },
      "writtenOn": "2024-09-18T16:05:23Z",
      "side": 0,
      "message": "+1 to `?\u003d`",
      "parentUuid": "cb9f1e4c_be4350b1",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 33
      },
      "revId": "5b6b40e037de0264cff1f8122af0bb521f5efca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9604fb60_068ddaab",
        "filename": "target/product/default_art_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-09-18T16:14:39Z",
      "side": 0,
      "message": "I tried multiple things here, like replacing this line with:\n\n```\nPRODUCT_ENABLE_UFFD_GC ?\u003d default\n```\n\nor with:\n\n```\nifndef PRODUCT_ENABLE_UFFD_GC\n  PRODUCT_ENABLE_UFFD_GC :\u003d default\nendif\n```\n\nbut neither worked: some products defining `PRODUCT_ENABLE_UFFD_GC :\u003d false` in their configuration where still showing `PRODUCT_ENABLE_UFFD_GC\u003d\u0027default\u0027` as a result of `build/soong/soong_ui.bash --dumpvars-mode --vars\u003dPRODUCT_ENABLE_UFFD_GC`. Somehow this variable had already been defined somewhere else. (I wonder if the [`_product_single_value_vars +\u003d PRODUCT_ENABLE_UFFD_GC` assignment in `core/product.mk`](https://cs.android.com/android/platform/superproject/main/+/main:build/make/core/product.mk;l\u003d453;drc\u003d8d2c3f399be6e09e9f925a77961b6e26f613d672) defines an empty `PRODUCT_ENABLE_UFFD_GC` as a side effect.)",
      "parentUuid": "cb9f1e4c_be4350b1",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 33
      },
      "revId": "5b6b40e037de0264cff1f8122af0bb521f5efca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb3f512_1044fa31",
        "filename": "target/product/default_art_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-18T16:19:49Z",
      "side": 0,
      "message": "Hmm... This is weird. If the variable was assigned an empty string as you said, and we assume Make treats an empty string as defined (which I\u0027m not sure), then `?\u003d` would take no effect and you would get `PRODUCT_ENABLE_UFFD_GC\u003d\u0027\u0027` rather than `PRODUCT_ENABLE_UFFD_GC\u003d\u0027default\u0027`.",
      "parentUuid": "9604fb60_068ddaab",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 33
      },
      "revId": "5b6b40e037de0264cff1f8122af0bb521f5efca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65168fe0_4c8abe59",
        "filename": "target/product/default_art_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-09-18T17:32:59Z",
      "side": 0,
      "message": "\u003e\u003e some products defining `PRODUCT_ENABLE_UFFD_GC :\u003d false` in their configuration where still showing `PRODUCT_ENABLE_UFFD_GC\u003d\u0027default\u0027` as a result of `build/soong/soong_ui.bash --dumpvars-mode --vars\u003dPRODUCT_ENABLE_UFFD_GC`. Somehow this variable had already been defined somewhere else.\n\n\u003e Hmm... This is weird. If the variable was assigned an empty string as you said, and we assume Make treats an empty string as defined (which I\u0027m not sure), then `?\u003d` would take no effect and you would get `PRODUCT_ENABLE_UFFD_GC\u003d\u0027\u0027` rather than `PRODUCT_ENABLE_UFFD_GC\u003d\u0027default\u0027`.\n\nRight â€“ I tried again and my example above was incorrect (I probably mixed up different local tests).\n\nHowever, it seems `PRODUCT_ENABLE_UFFD_GC ?\u003d default` is not that useful. See the following example in top-of-tree AOSP when setting `PRODUCT_ENABLE_UFFD_GC ?\u003d default` in `target/product/default_art_config.mk`:\n\n```\n$ . build/envsetup.sh\nincluding vendor/google/build/vendorsetup.sh\nincluding vendor/google/misc/metrics_uploader_prebuilt/vendorsetup.sh\nincluding vendor/google/tools/atest/vendorsetup.sh\nincluding vendor/google/tools/vendorsetup.sh\n$ lunch aosp_cf_x86_64_phone-trunk_staging-userdebug\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nPLATFORM_VERSION_CODENAME\u003dVanillaIceCream\nPLATFORM_VERSION\u003dVanillaIceCream\nTARGET_PRODUCT\u003daosp_cf_x86_64_phone\nTARGET_BUILD_VARIANT\u003duserdebug\nTARGET_ARCH\u003dx86_64\nTARGET_ARCH_VARIANT\u003dsilvermont\nTARGET_2ND_ARCH\u003dx86\nTARGET_2ND_ARCH_VARIANT\u003dsilvermont\nHOST_OS\u003dlinux\nHOST_OS_EXTRA\u003dLinux-6.9.10-1rodete5-amd64-x86_64-Debian-GNU/Linux-rodete\nHOST_CROSS_OS\u003dwindows\nBUILD_ID\u003dMAIN\nOUT_DIR\u003dout\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  Wondering whether to use user, userdebug or eng?\n\n  user        The builds that ship to users. Reduced debugability.\n  userdebug   High fidelity to user builds but with some debugging options\n              enabled. Best suited for performance testing or day-to-day use\n              with debugging enabled.\n  eng         More debugging options enabled and faster build times, but\n              runtime performance tradeoffs. Best suited for day-to-day\n              local development when not doing performance testing.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n$ build/soong/soong_ui.bash --dumpvars-mode --vars\u003d\"PRODUCT_ENABLE_UFFD_GC ENABLE_UFFD_GC\"\nPRODUCT_ENABLE_UFFD_GC\u003d\u0027\u0027\nENABLE_UFFD_GC\u003d\u0027default\u0027\n```\n\n@ccross@android.com, do you understand why `PRODUCT_ENABLE_UFFD_GC ?\u003d default` seems to be ineffective here?",
      "parentUuid": "9cb3f512_1044fa31",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 33
      },
      "revId": "5b6b40e037de0264cff1f8122af0bb521f5efca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98112514_103005d4",
        "filename": "target/product/default_art_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2024-09-18T17:37:36Z",
      "side": 0,
      "message": "All registered product variables are stored and cleared between inheriting product makefiles, so it is expected to be empty.  Also, Make conditionals are weird, `?\u003d` will be skipped if the variable was ever assigned to (which it will always have been in this case), but `ifdef` considers empty to be undefined.",
      "parentUuid": "65168fe0_4c8abe59",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 33
      },
      "revId": "5b6b40e037de0264cff1f8122af0bb521f5efca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1844fc00_2a02e186",
        "filename": "target/product/default_art_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-09-18T17:42:56Z",
      "side": 0,
      "message": "Thanks for these explanations, Colin. In that case, I don\u0027t think having `PRODUCT_ENABLE_UFFD_GC ?\u003d default` in `target/product/default_art_config.mk` provides much value.",
      "parentUuid": "98112514_103005d4",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 33
      },
      "revId": "5b6b40e037de0264cff1f8122af0bb521f5efca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}