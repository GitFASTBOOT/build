{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "68679456_1438616e",
        "filename": "envsetup.sh",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2022-08-01T18:17:18Z",
      "side": 1,
      "message": "nit: Replacing this with the following makes it more consistent with other instances of similar checks in `envsetup.sh`. It is also more readable imo\n```\nlocal T\u003d$(multitree_gettop)\nif [ ! \"$T\" ]; then\n```",
      "range": {
        "startLine": 460,
        "startChar": 4,
        "endLine": 460,
        "endChar": 30
      },
      "revId": "bf0a64284dac7faa747c15866616aec83164d764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc386123_daee40d8",
        "filename": "envsetup.sh",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2022-08-01T18:54:15Z",
      "side": 1,
      "message": "Or to keep the same if-else flow\n```\nlocal T\u003d$(multitree_gettop)\nif [ \"$T\" ]; then\n```",
      "parentUuid": "68679456_1438616e",
      "range": {
        "startLine": 460,
        "startChar": 4,
        "endLine": 460,
        "endChar": 30
      },
      "revId": "bf0a64284dac7faa747c15866616aec83164d764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65183188_2252ab68",
        "filename": "envsetup.sh",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1583551
      },
      "writtenOn": "2022-08-03T20:07:28Z",
      "side": 1,
      "message": "I copied it from multitree_build() around line 1884. I\u0027ll change both of them to match the more common form.",
      "parentUuid": "bc386123_daee40d8",
      "range": {
        "startLine": 460,
        "startChar": 4,
        "endLine": 460,
        "endChar": 30
      },
      "revId": "bf0a64284dac7faa747c15866616aec83164d764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcdc9889_9981fea5",
        "filename": "orchestrator/core/inner_tree.py",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2022-08-01T18:17:18Z",
      "side": 1,
      "message": "In this mcombo schema, my understanding is that the shared trees are entries [1:...] in `inner_trees` attribute.\n\nWDYT about making `melds` a separate attribute in mcombo file altogether? That way we do not need an if-else check in several places. \n\nThis separation _might_ also help in Automerger? (though I am not completely sure)",
      "range": {
        "startLine": 33,
        "startChar": 8,
        "endLine": 37,
        "endChar": 27
      },
      "revId": "bf0a64284dac7faa747c15866616aec83164d764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebd982d2_4e83f43c",
        "filename": "orchestrator/core/inner_tree.py",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2022-08-01T19:01:25Z",
      "side": 1,
      "message": "I like the simplicity of the format for the mcombo file, by just having one place to list them.\n\nBut also, thisis just a simple data structure for a key which might not come directly from the mcombo file (even if that\u0027s all we do now). I think the melding parameter  parsing should be somewhere else, but I like how you\u0027re keeping the tree identity as root[0].",
      "parentUuid": "fcdc9889_9981fea5",
      "range": {
        "startLine": 33,
        "startChar": 8,
        "endLine": 37,
        "endChar": 27
      },
      "revId": "bf0a64284dac7faa747c15866616aec83164d764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01b94b84_a5cc346f",
        "filename": "orchestrator/core/inner_tree.py",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2022-08-02T21:00:07Z",
      "side": 1,
      "message": "discussed offline -- the main point is that this lets us have multiple inner trees with the same first element.",
      "parentUuid": "ebd982d2_4e83f43c",
      "range": {
        "startLine": 33,
        "startChar": 8,
        "endLine": 37,
        "endChar": 27
      },
      "revId": "bf0a64284dac7faa747c15866616aec83164d764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}