{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cc11e03a_6f446379",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2020-11-04T10:05:19Z",
      "side": 1,
      "message": "This is *delightful*. I can\u0027t compare this to the semantics of the existing product configuration system, but it looks so nice and clean.\n\n(I wanted to also add Alan to the Cc list but it looks like Gerrit doesn\u0027t allow me to?)",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08626f39_c284dbbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2020-11-04T17:36:22Z",
      "side": 1,
      "message": "I think Alan (Donovan, right?) needs to log in to Gerrit by visiting https://android-review.googlesource.com/ in order to participate.",
      "parentUuid": "cc11e03a_6f446379",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f109697_8a339b68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1799100
      },
      "writtenOn": "2020-11-11T22:08:19Z",
      "side": 1,
      "message": "Oh, that was easy. Thanks.",
      "parentUuid": "08626f39_c284dbbc",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6081b0b8_590c5a8c",
        "filename": "target/product/aosp_product.star",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1799100
      },
      "writtenOn": "2020-11-11T22:08:19Z",
      "side": 1,
      "message": "As I commented on the doc: how does label-\u003efile resolution work?\nIn Bazel it is quite complex. Are you mimicking it exactly?\nIs it necessary? Are @repo prefixes allowed?",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b65dc209_c7f61e9c",
        "filename": "target/product/aosp_product.star",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2020-11-12T09:04:50Z",
      "side": 1,
      "message": "I have replied in the document. It\u0027s somewhat in flux at the moment.",
      "parentUuid": "6081b0b8_590c5a8c",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eb68656_d8a041e6",
        "filename": "target/product/aosp_product.star",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1799100
      },
      "writtenOn": "2020-11-11T22:08:19Z",
      "side": 1,
      "message": "Don\u0027t use .star for the file extension. That means \"generic core Starlark\". Pick an extension specific to your dialect.",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a498e75_3bed4834",
        "filename": "target/product/aosp_product.star",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2020-11-12T09:04:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3eb68656_d8a041e6",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0472e1a9_ac8f758f",
        "filename": "target/product/aosp_product.star",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1799100
      },
      "writtenOn": "2020-11-11T22:08:19Z",
      "side": 1,
      "message": "Why are the parameter names UPPERCASE?",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0e43c58_29948c16",
        "filename": "target/product/aosp_product.star",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2020-11-12T09:04:50Z",
      "side": 1,
      "message": "Because that\u0027s what they are currently in the makefiles. Is it against all Starlark conventions?",
      "parentUuid": "0472e1a9_ac8f758f",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e567ed3b_be603db0",
        "filename": "target/product/aosp_product.star",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1799100
      },
      "writtenOn": "2020-11-13T15:22:34Z",
      "side": 1,
      "message": "I would say it\u0027s against all programming language conventions: the names of variables follow the style of the language, which for Starlark, like Python, means lower_case. You wouldn\u0027t name a variable in C++ or Java in ALL_CAPS just because its value happened to be passed into the environment or a Makefile.",
      "parentUuid": "a0e43c58_29948c16",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c0fec6e_79120f49",
        "filename": "target/product/base_vendor.star",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2020-11-04T10:05:19Z",
      "side": 1,
      "message": "How about sticking to the Bazel syntax of //pac/kage:name.bzl so that it\u0027s one less refactoring later? (there are two differences: a mandatory colon before the file name and the extension that should be .bzl instead of .star)",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "583480fd_9e276b19",
        "filename": "target/product/handheld_product.star",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1799100
      },
      "writtenOn": "2020-11-13T15:22:34Z",
      "side": 1,
      "message": "Consider requiring names for the first two parameters. It makes the role of the argument value much clearer to the reader.",
      "range": {
        "startLine": 11,
        "startChar": 4,
        "endLine": 11,
        "endChar": 5
      },
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "770f4481_f348b9ef",
        "filename": "target/product/product_config.star",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1799100
      },
      "writtenOn": "2020-11-11T22:08:19Z",
      "side": 1,
      "message": "This undocumented function dives right into reflection over types. I can\u0027t tell what it does or what it is supposed to do, nor how closely they match.",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14f20982_8adf7d18",
        "filename": "target/product/product_config.star",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2020-11-12T09:04:50Z",
      "side": 1,
      "message": "I am not sure what you mean here. The documentation is above the function. I suspect this is against convention. I\u0027ll fix this at the next iteration.\nI am not sure how the reflection can be avoided while trying to achieve this specific goal.",
      "parentUuid": "770f4481_f348b9ef",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1065096b_4b996016",
        "filename": "target/product/product_config.star",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1799100
      },
      "writtenOn": "2020-11-13T15:22:34Z",
      "side": 1,
      "message": "Function documentation should explain the parameters, the preconditions on their values, the effects of the call, and the results, if any. I can\u0027t extract any of that information from the comment above.\n\n\u003e I am not sure how the reflection can be avoided while trying to achieve this specific goal.\n\nYou may be right, but let\u0027s start by defining the goal.",
      "parentUuid": "14f20982_8adf7d18",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9c5666e_d1677ea5",
        "filename": "target/product/product_config.star",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2020-11-04T10:05:19Z",
      "side": 1,
      "message": "nit: it looks like you can extract the update/merging logic (lines 22-29 and lines 33-40) into a separate function for less repetitiveness",
      "revId": "69f3147ddd86164e620c2738f71683d3cb2debeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}