{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "61dcf5f7_709e24a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1018026
      },
      "writtenOn": "2021-10-27T04:08:13Z",
      "side": 1,
      "message": "These are changes in otatools and need xunchang@ review.",
      "revId": "6b799cb60074c4a99d061b2a16f0ae6382070496",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73cf0b20_0678840e",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 3
      },
      "lineNbr": 2110,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-10-27T05:24:57Z",
      "side": 1,
      "message": "can you give an example why this needs change? Seems the caller only supply a sign_tool and won\u0027t mess up with the keys.",
      "range": {
        "startLine": 2110,
        "startChar": 36,
        "endLine": 2110,
        "endChar": 45
      },
      "revId": "6b799cb60074c4a99d061b2a16f0ae6382070496",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19c6bcfa_d32485fc",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 3
      },
      "lineNbr": 2110,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-10-27T05:39:58Z",
      "side": 1,
      "message": "apex_keys is now a dictionary of tuples (payload_key, container_key, sign_tool). Calling site passes all these values as a set and many apexes don\u0027t have assoicated sign_tool(hence, None).\n\nI can change the callsite so that it gathers payload_key and container_key from apex_keys. But this change itself seems to make sense.",
      "parentUuid": "73cf0b20_0678840e",
      "range": {
        "startLine": 2110,
        "startChar": 36,
        "endLine": 2110,
        "endChar": 45
      },
      "revId": "6b799cb60074c4a99d061b2a16f0ae6382070496",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb378ae8_96c38b4b",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 3
      },
      "lineNbr": 2110,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-10-27T05:52:57Z",
      "side": 1,
      "message": "ack. I assume None k is replaced with PRESIGNED though",
      "parentUuid": "19c6bcfa_d32485fc",
      "range": {
        "startLine": 2110,
        "startChar": 36,
        "endLine": 2110,
        "endChar": 45
      },
      "revId": "6b799cb60074c4a99d061b2a16f0ae6382070496",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24fa07de_3dbe98c6",
        "filename": "tools/releasetools/sign_target_files_apks.py",
        "patchSetId": 3
      },
      "lineNbr": 1203,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-10-27T05:24:57Z",
      "side": 1,
      "message": "Is this SIGN_TOOL specific to one apex; or all apex files use the same SIGN_TOOL in otatools?\n\nIf it\u0027s apex specific, then I wonder where do you get different versions of the SIGN_TOOL?",
      "range": {
        "startLine": 1203,
        "startChar": 31,
        "endLine": 1203,
        "endChar": 40
      },
      "revId": "6b799cb60074c4a99d061b2a16f0ae6382070496",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab5bc89f_1e9c82bf",
        "filename": "tools/releasetools/sign_target_files_apks.py",
        "patchSetId": 3
      },
      "lineNbr": 1203,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-10-27T05:39:58Z",
      "side": 1,
      "message": "It\u0027s apex specific. If an apex needs a special handling regarding the signing process, the author can make a new executable binary (as host binary) and then associate it with the apex in Android.bp. (see the other change in this topic). The tool should be available via as OTATOOL. (I added sign_virt_apex to the list)\n\nHowever, for now, the virt apex is the only one using the custom signer because it needs to sign filesystem images in it.\n\nAlternatively, we can just hard-code the association in apex_util (e.g. com.android.virt \u003d\u003e sign_virt_apex). But I wanted to avoid hard-coding.",
      "parentUuid": "24fa07de_3dbe98c6",
      "range": {
        "startLine": 1203,
        "startChar": 31,
        "endLine": 1203,
        "endChar": 40
      },
      "revId": "6b799cb60074c4a99d061b2a16f0ae6382070496",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eb57300_e642475b",
        "filename": "tools/releasetools/sign_target_files_apks.py",
        "patchSetId": 3
      },
      "lineNbr": 1203,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-10-27T05:52:57Z",
      "side": 1,
      "message": "Do you have other candidates in mind... Seems weird to give it such flexibility by call different signing tools, because the other apex specific variable are merely signing keys. Does it make more sense to have one post-processing helper sign-tool that handles all apexes?",
      "parentUuid": "ab5bc89f_1e9c82bf",
      "range": {
        "startLine": 1203,
        "startChar": 31,
        "endLine": 1203,
        "endChar": 40
      },
      "revId": "6b799cb60074c4a99d061b2a16f0ae6382070496",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3359d58_506177b8",
        "filename": "tools/releasetools/sign_target_files_apks.py",
        "patchSetId": 3
      },
      "lineNbr": 1203,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-10-27T07:35:18Z",
      "side": 1,
      "message": "For now, sign_virt_apex is very specific to the virt apex and it\u0027s highly coupled with the contents of the apex. For now I don\u0027t have candidates other than the virt apex, but there might be the case. For example, CompOS apex has several ideas regarding how to handle oemcerts and one of ideas could require post-processing I guess.",
      "parentUuid": "1eb57300_e642475b",
      "range": {
        "startLine": 1203,
        "startChar": 31,
        "endLine": 1203,
        "endChar": 40
      },
      "revId": "6b799cb60074c4a99d061b2a16f0ae6382070496",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}