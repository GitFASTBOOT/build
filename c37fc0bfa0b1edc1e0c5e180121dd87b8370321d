{
  "comments": [
    {
      "key": {
        "uuid": "a4fb1585_21ee2a2a",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 635,
      "author": {
        "id": 1076344
      },
      "writtenOn": "2015-08-19T14:24:59Z",
      "side": 1,
      "message": "For clarity, this could just be \u0027proxies\u0027 (see below).",
      "range": {
        "startLine": 635,
        "startChar": 35,
        "endLine": 635,
        "endChar": 42
      },
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04806112_e90fcce8",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 635,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-08-19T17:19:56Z",
      "side": 1,
      "message": "I kind of like calling this directory include, because it clearly communicates that this is the root of the include path.",
      "parentUuid": "a4fb1585_21ee2a2a",
      "range": {
        "startLine": 635,
        "startChar": 35,
        "endLine": 635,
        "endChar": 42
      },
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4aeed64_3419f204",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 638,
      "author": {
        "id": 1076344
      },
      "writtenOn": "2015-08-19T14:24:59Z",
      "side": 1,
      "message": "We might want to append another directory to $(dbus_gen_dir) in this case to ensure there\u0027s no possible overlap between the two cases, e.g. $(dbus_gen_dir)/adaptors .",
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64591d73_dc4d8f94",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 638,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-08-19T17:19:56Z",
      "side": 1,
      "message": "Right now, a given target cannot generate both adaptors and proxies.  I don\u0027t see how we could end up with overlap.",
      "parentUuid": "e4aeed64_3419f204",
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4a8755c_9f3b1d86",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 639,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-08-18T22:38:26Z",
      "side": 1,
      "message": "To use static pattern rule, I added the source path (relative to LOCAL_PATH) to the generated headers in this case.",
      "range": {
        "startLine": 639,
        "startChar": 16,
        "endLine": 639,
        "endChar": 61
      },
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4aeed64_b7596462",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 639,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-08-19T17:19:56Z",
      "side": 1,
      "message": "I wish I had thought of this, but hey, now I have a basic understanding of call/eval. :/",
      "parentUuid": "a4a8755c_9f3b1d86",
      "range": {
        "startLine": 639,
        "startChar": 16,
        "endLine": 639,
        "endChar": 61
      },
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4aeed64_9408e6b8",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 649,
      "author": {
        "id": 1076344
      },
      "writtenOn": "2015-08-19T14:24:59Z",
      "side": 1,
      "message": "Is there a reason for the different spacing around \u0027:\u0027 between variable assignment and dependencies?",
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c471e91c_2eac86f7",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 649,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-08-19T17:19:56Z",
      "side": 1,
      "message": "My rough reading of the file is that \": \" is used for scoping the next statement to a set of targets.  \" : \" is used to express dependencies.  But that\u0027s just a guess.",
      "parentUuid": "e4aeed64_9408e6b8",
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c471e91c_3f52f7b6",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 661,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-08-18T22:38:26Z",
      "side": 1,
      "message": "then added their dir to the include path here.\nDoes this work for you?",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 661,
        "endChar": 49
      },
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "243ac5f6_56dfa985",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 661,
      "author": {
        "id": 1076344
      },
      "writtenOn": "2015-08-19T14:24:59Z",
      "side": 1,
      "message": "I think this would work (but curious what wiley says ;-) ).\n\nWe should probably add these to my_export_c_include_dirs as well, in case these get generated in a separate rule.",
      "parentUuid": "c471e91c_3f52f7b6",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 661,
        "endChar": 49
      },
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4a9e95f_fcc6dfad",
        "filename": "core/binary.mk",
        "patchSetId": 7
      },
      "lineNbr": 661,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-08-19T17:19:56Z",
      "side": 1,
      "message": "I think I\u0027d like to include the folder structure inside the repository as part of the header namespacing.  So if a project had sources dbus_bindings/example/org.chromium.Example.dbus.xml, they would write\n\n#include \u003cdbus_bindings/example/org.chromium.Example.h\u003e\n\nI think that this gives better hints to authors where the code is coming from than:\n\n#include \u003corg.chromium.Example.h\u003e\n\nIn practice, most projects keep their binding definitions in a directory called dbus_bindings in the root of their project, so the include statement would look like:\n\n#include \u003cdbus_bindings/org.chromium.Buffet.Manager.h\u003e\n\nWe should be able to massage the gyp files to match this pattern.",
      "parentUuid": "243ac5f6_56dfa985",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 661,
        "endChar": 49
      },
      "revId": "c37fc0bfa0b1edc1e0c5e180121dd87b8370321d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}