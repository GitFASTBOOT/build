{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "784c5108_62f035fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2021-02-19T06:33:12Z",
      "side": 1,
      "message": "PTAL",
      "revId": "7dbe46c768432c85d9af4ac2f1e3309afdfe95b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b953e83b_3b9804d5",
        "filename": "core/definitions.mk",
        "patchSetId": 5
      },
      "lineNbr": 615,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-02-19T18:46:55Z",
      "side": 1,
      "message": "This isn\u0027t necessary, you aren\u0027t doing anything with the result, and I don\u0027t think the results of $(sort) need stripping if you meant to put it inside the assignment.",
      "range": {
        "startLine": 615,
        "startChar": 0,
        "endLine": 615,
        "endChar": 8
      },
      "revId": "7dbe46c768432c85d9af4ac2f1e3309afdfe95b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fa46ad5_61c325fd",
        "filename": "core/definitions.mk",
        "patchSetId": 5
      },
      "lineNbr": 615,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2021-02-19T22:52:49Z",
      "side": 1,
      "message": "The \u0027eval\u0027 function leaves behind some spaces and junk which causes make to complain about a recipe not starting with a tab.",
      "parentUuid": "b953e83b_3b9804d5",
      "range": {
        "startLine": 615,
        "startChar": 0,
        "endLine": 615,
        "endChar": 8
      },
      "revId": "7dbe46c768432c85d9af4ac2f1e3309afdfe95b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e4c5ece_636023bb",
        "filename": "core/definitions.mk",
        "patchSetId": 5
      },
      "lineNbr": 632,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-02-19T18:46:55Z",
      "side": 1,
      "message": "This seems pretty expensive, could you instead clear ALL_MODULES.$(1).INSTALLED_NOTICE_FILE after handling it, or add an extra ALL_MODULES.$(1).CREATED_NOTICE_FILE_RULES?",
      "revId": "7dbe46c768432c85d9af4ac2f1e3309afdfe95b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d49ff4b_178b5c5c",
        "filename": "core/definitions.mk",
        "patchSetId": 5
      },
      "lineNbr": 632,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2021-02-19T22:52:49Z",
      "side": 1,
      "message": "It is expensive, but sadly unavoidable. The ALL_INSTALLED_NOTICE_FILES is used to skip later appearances of the exact same filename for other my_register_name values. i.e. when $(1) is different--principally for other architecture variants.\n\nMaking a change to anything referring to $(1) will have no effect on those later iterations.",
      "parentUuid": "9e4c5ece_636023bb",
      "revId": "7dbe46c768432c85d9af4ac2f1e3309afdfe95b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f998b693_9f352146",
        "filename": "core/definitions.mk",
        "patchSetId": 5
      },
      "lineNbr": 632,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-02-19T23:46:10Z",
      "side": 1,
      "message": "This causes a 5x increase in `m nothing` time (1:22 to 7:03) when it reruns Kati.  That adds up to a lot of wasted developer time.  I think we need a more efficient solution before checking this in.\n\nSome options to consider:\n* Invert the map, something like NOTICES.$(inf).INSTALLED, to determine if the notice file has been handled.\n* Use colon separated pairs of $(inf):$(m) in ALL_INSTALLED_NOTICE_FILES.\n* Prevent duplicates in ALL_INSTALLED_NOTICE_FILES by putting more uniqueness into the filename, for example including $(LOCAL_MODULE_CLASS) and $(LOCAL_2ND_ARCH_VAR_PREFIX).  See $(module_id) in base_rules.mk, which is enforced to be unique for .a and .so files, multiple architectures, or host and device modules with the same module name, or $(intermediates-dir-for).",
      "parentUuid": "1d49ff4b_178b5c5c",
      "revId": "7dbe46c768432c85d9af4ac2f1e3309afdfe95b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}