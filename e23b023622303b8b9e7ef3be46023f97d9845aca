{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "77762283_7b4e5d4c",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1990655
      },
      "writtenOn": "2024-08-27T17:51:04Z",
      "side": 1,
      "message": "who reads self.modules_to_build?",
      "range": {
        "startLine": 49,
        "startChar": 11,
        "endLine": 49,
        "endChar": 27
      },
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "326d4ea5_a26c8276",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-08-27T18:16:23Z",
      "side": 1,
      "message": "Nobody right now, but it will be necessary in the next part of the implementation where the packaging code needs to know what modules were built in order to package them. This is also likely to be useful in any other suite optimizations which is why I put them at the base class level (and also to make it more guaranteed that the value will be available at package time).",
      "parentUuid": "77762283_7b4e5d4c",
      "range": {
        "startLine": 49,
        "startChar": 11,
        "endLine": 49,
        "endChar": 27
      },
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87f3bb64_1a6afb9d",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1990655
      },
      "writtenOn": "2024-08-27T18:36:43Z",
      "side": 1,
      "message": "It\u0027s confusing to have a \"get\" function change an object\u0027s state. Consider i reference obj.modules_to_build without calling get_build_targets first.\n\nMay consider adding a function if you must cache it.",
      "parentUuid": "326d4ea5_a26c8276",
      "range": {
        "startLine": 49,
        "startChar": 11,
        "endLine": 49,
        "endChar": 27
      },
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d95b64a5_d1eb5429",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-08-27T18:51:10Z",
      "side": 1,
      "message": "it\u0027s not really a getter per se, I could rename it to reflect that, but i\u0027m met with the issue that these functions do way too much work to be called in the constructor, but package_outputs depends on what is found in get_build_targets. package_outputs should never be called before get_build_targets. I could initialize `self._modules_to_build` to something at init then change it later in get_build_targets and maybe check that in package_outputs and call get_build_targets if it hasn\u0027t been initialized yet but I\u0027m not sure how else I would handle it.",
      "parentUuid": "87f3bb64_1a6afb9d",
      "range": {
        "startLine": 49,
        "startChar": 11,
        "endLine": 49,
        "endChar": 27
      },
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90345754_26fbf1f1",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-08-28T19:54:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d95b64a5_d1eb5429",
      "range": {
        "startLine": 49,
        "startChar": 11,
        "endLine": 49,
        "endChar": 27
      },
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c924438_9980fb39",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1990655
      },
      "writtenOn": "2024-08-27T17:51:04Z",
      "side": 1,
      "message": "nit: revise comment. not all modules are required in general-tests.zip.",
      "range": {
        "startLine": 129,
        "startChar": 20,
        "endLine": 129,
        "endChar": 44
      },
      "fixSuggestions": [
        {
          "fixId": "f236faa3_5c7bc61a",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "ci/optimized_targets.py",
              "range": {
                "startLine": 129,
                "startChar": 0,
                "endLine": 132,
                "endChar": 0
              },
              "replacement": "  # List of modules that are always required to be in general-tests.zip. This\n  # list does not include soong_zip, which is required to zip up the modules at\n  # the end.\n"
            }
          ]
        }
      ],
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ef71ede_aaee7360",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-08-27T18:16:23Z",
      "side": 1,
      "message": "Actually you know what soong_zip is in prebuilts so we don\u0027t have to build it at all.",
      "parentUuid": "7c924438_9980fb39",
      "range": {
        "startLine": 129,
        "startChar": 20,
        "endLine": 129,
        "endChar": 44
      },
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0399861c_df951f7b",
        "filename": "ci/test_mapping_module_retriever.py",
        "patchSetId": 9
      },
      "lineNbr": 130,
      "author": {
        "id": 1990655
      },
      "writtenOn": "2024-08-27T17:51:04Z",
      "side": 1,
      "message": "don\u0027t we already have such logic somewhere?",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 130,
        "endChar": 23
      },
      "fixSuggestions": [
        {
          "fixId": "b200adbb_caabd66b",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "ci/test_mapping_module_retriever.py",
              "range": {
                "startLine": 130,
                "startChar": 0,
                "endLine": 180,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b061141a_9cbf63b2",
        "filename": "ci/test_mapping_module_retriever.py",
        "patchSetId": 9
      },
      "lineNbr": 130,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-08-27T18:16:23Z",
      "side": 1,
      "message": "There is somewhat similar logic in the original file but it\u0027s very different from what we have here as it uses a lot of different parameters etc. that we don\u0027t have access to here. Because of this I don\u0027t think it makes sense to try to bring that logic in and heavily edit it to work with what we have. Eventually we want to merge this logic though.",
      "parentUuid": "0399861c_df951f7b",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 130,
        "endChar": 23
      },
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bc13299_32b7d7b8",
        "filename": "ci/test_mapping_module_retriever.py",
        "patchSetId": 9
      },
      "lineNbr": 130,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-08-28T19:54:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b061141a_9cbf63b2",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 130,
        "endChar": 23
      },
      "revId": "e23b023622303b8b9e7ef3be46023f97d9845aca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}