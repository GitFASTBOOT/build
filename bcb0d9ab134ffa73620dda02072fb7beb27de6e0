{
  "comments": [
    {
      "key": {
        "uuid": "2d80bdc3_a544e863",
        "filename": "core/binary.mk",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-01-06T20:20:25Z",
      "side": 1,
      "message": "We don\u0027t need the PRIVATE_HOST_* variables for target modules; and no PRIVATE_TARGET_* for the host modules. I think we can use \"ifdef LOCAL_IS_HOST_MODULE\" to conditionally include the above 2 blocks.",
      "revId": "bcb0d9ab134ffa73620dda02072fb7beb27de6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd100198_23992a66",
        "filename": "core/binary.mk",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1032077
      },
      "writtenOn": "2014-01-07T06:50:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d80bdc3_a544e863",
      "revId": "bcb0d9ab134ffa73620dda02072fb7beb27de6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d7db99f_6980ed74",
        "filename": "core/executable.mk",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-01-06T20:18:05Z",
      "side": 1,
      "message": "the same here.",
      "revId": "bcb0d9ab134ffa73620dda02072fb7beb27de6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dd0c910_a1a6ded7",
        "filename": "core/executable.mk",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1032077
      },
      "writtenOn": "2014-01-07T06:50:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d7db99f_6980ed74",
      "revId": "bcb0d9ab134ffa73620dda02072fb7beb27de6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d80bdc3_a512a86b",
        "filename": "core/shared_library.mk",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-01-06T20:18:05Z",
      "side": 1,
      "message": "It seems unnecessary to me: you already set it to $(CLANG_TARGET_GLOBAL_LDFLAGS) in the above lines.",
      "revId": "bcb0d9ab134ffa73620dda02072fb7beb27de6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd100198_c3cad654",
        "filename": "core/shared_library.mk",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1032077
      },
      "writtenOn": "2014-01-07T06:50:44Z",
      "side": 1,
      "message": "I will remove these in next patch set.  BTW, I wrote this because I was afraid that the value of $(my_target_global_ldflags) will be updated when $(LOCAL_SDK_VERSION) is defined.  After further investigation, I\u0027ve found that $(my_ndk_stl_shared_lib) is clang compatible.  Thanks.",
      "parentUuid": "2d80bdc3_a512a86b",
      "revId": "bcb0d9ab134ffa73620dda02072fb7beb27de6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}