{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2d0b1bd_6365aa10",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1216,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-05-05T07:05:23Z",
      "side": 1,
      "message": "I don\u0027t think this is correct. Please see r.android.com/1151462\n\nget-product-var gets either the value for the current product -- or a different product. The way this artifact path requirement logic works is that we parse multiple product makefiles separately to figure out what each makefile produces on its own.",
      "range": {
        "startLine": 1213,
        "startChar": 24,
        "endLine": 1216,
        "endChar": 13
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71293de1_388e5d61",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1216,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2021-05-06T20:36:05Z",
      "side": 1,
      "message": "I have reworded the comment to explain the approach.",
      "parentUuid": "b2d0b1bd_6365aa10",
      "range": {
        "startLine": 1213,
        "startChar": 24,
        "endLine": 1216,
        "endChar": 13
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8aa86297_ae63e484",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1216,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-05-07T13:23:40Z",
      "side": 1,
      "message": "makes sense to me, but we shouldn\u0027t copy/paste the logic",
      "parentUuid": "71293de1_388e5d61",
      "range": {
        "startLine": 1213,
        "startChar": 24,
        "endLine": 1216,
        "endChar": 13
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5e780c6_43fcdf37",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-05-05T07:05:23Z",
      "side": 1,
      "message": "why are we duplicating the logic?",
      "range": {
        "startLine": 1268,
        "startChar": 4,
        "endLine": 1269,
        "endChar": 30
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9299f0e4_4dc257c4",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2021-05-06T20:36:05Z",
      "side": 1,
      "message": "In this case we filter from $(PRODUCT_PACKAGES_ENG) instead of filtering from $(call get-product-var,$(1),PRODUCT_PACKAGES_ENG)",
      "parentUuid": "e5e780c6_43fcdf37",
      "range": {
        "startLine": 1268,
        "startChar": 4,
        "endLine": 1269,
        "endChar": 30
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49c6af39_2255046e",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-05-07T13:23:40Z",
      "side": 1,
      "message": "can you either\n- redefine get-product-var to be a passthrough for RBC_PRODUCT_CONFIG\n- keep this one macro (or make a new shared one) that either uses get-product-var or doesn\u0027t, based on RBC_PRODUCT_CONFIG?",
      "parentUuid": "9299f0e4_4dc257c4",
      "range": {
        "startLine": 1268,
        "startChar": 4,
        "endLine": 1269,
        "endChar": 30
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e935a01_e57794c6",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2021-05-13T20:21:02Z",
      "side": 1,
      "message": "I am wary of redefining get-product-var.\nI tried to have a single `define` with conditional bodies (i.e.\ndefine host-installed-files\n ifndef RBC_PRODUCT_CONFIG\n  ...\n else\n  ...\n endif\nendef\n)\nbut that doesn\u0027t work.\nI have rearranged the code slightly, perhaps it\u0027s more readable.",
      "parentUuid": "49c6af39_2255046e",
      "range": {
        "startLine": 1268,
        "startChar": 4,
        "endLine": 1269,
        "endChar": 30
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac19abd9_9595e975",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-05-17T10:27:13Z",
      "side": 1,
      "message": "- what\u0027s wrong with redefining get-product-var?\n- I\u0027m not sure what you\u0027re saying \"doesn\u0027t work\", can you clarify? do you have a WIP somewhere?\n- I don\u0027t think duplicating this whole macro is reasonable. Besides, not having the artifact path check makes the starlark thing unusable for anything that matters. Why not make this work instead of working around it?",
      "parentUuid": "2e935a01_e57794c6",
      "range": {
        "startLine": 1268,
        "startChar": 4,
        "endLine": 1269,
        "endChar": 30
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c9d5151_7133ec85",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2021-05-17T22:16:35Z",
      "side": 1,
      "message": "\u003e - what\u0027s wrong with redefining get-product-var?\nIt should return the value of a configuration variable as set by a specific makefile. Starlark configuration does not have it at the moment.\n\u003e - I\u0027m not sure what you\u0027re saying \"doesn\u0027t work\", can you clarify? do you have a WIP somewhere?\nIf I define it as I have described above, Make (actually, Kati) spits out the following message:\nbuild/make/core/Makefile:1465: error: real file \"out/host/linux-x86/obj/NOTICE.txt\" depends on PHONY target \"RBC_PRODUCT_CONFIG\"\nI don\u0027t know of any simple way of investigating what is happening. I can find out exactly what is happening by browsing Kati source code and  probably discovering that inside the body of `define` block `ifndef` directive is not processed, but this will not make it work.\n\u003e - I don\u0027t think duplicating this whole macro is reasonable. Besides, not having the artifact path check makes the starlark thing unusable for anything that matters. Why not make this work instead of working around it?\nThe immediate goal of this set of CLs is to be verify that Starlark-based product configuration generates the same Ninja files aside from product graph generation and artifact path checking. AFAIK the absence of the artifact path checking does not prevent building an image, and the target directory looks very similar. \nAs to duplicating the whole macro, the only alternative I see is to have the value assigned to _pif_modules / _hif_modules as a separate macro. Is that what you are proposing?",
      "parentUuid": "ac19abd9_9595e975",
      "range": {
        "startLine": 1268,
        "startChar": 4,
        "endLine": 1269,
        "endChar": 30
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "517f91fd_2d020413",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-05-18T09:39:49Z",
      "side": 1,
      "message": "\u003e Starlark configuration does not have it at the moment.\n\nRight, so that\u0027s why you would re-define it only for the experimental starlark builds, with the condition to fix the hack before it\u0027s used for anything important.\n\n\u003e If I define it as I have described above [..]\n\nTBH that error sounds like there\u0027s a mistake in the definition, and it\u0027s impossible to help without seeing the code.\n\n\u003e As to duplicating the whole macro, the only alternative I see is to have the value assigned to _pif_modules / _hif_modules as a separate macro. Is that what you are proposing?\n\nRe-defining get-product-var seems simplest. If you want something more complicated, you could share the bulk of this define in a new define X, and then conditionally define product-installed-files to pass different variables to X",
      "parentUuid": "8c9d5151_7133ec85",
      "range": {
        "startLine": 1268,
        "startChar": 4,
        "endLine": 1269,
        "endChar": 30
      },
      "revId": "9e0b42fc957859891a1fe22f6253b6f18d12e9c0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}