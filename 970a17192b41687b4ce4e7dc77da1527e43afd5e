{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "facfa0a8_f5d23954",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-20T16:52:21Z",
      "side": 1,
      "message": "need to fix some downstream branches",
      "revId": "970a17192b41687b4ce4e7dc77da1527e43afd5e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56df50f3_eb3c0b89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-20T18:02:32Z",
      "side": 1,
      "message": "Hey Justin, the error here was:\n\n\u003e build/make/core/config.mk:832: error: BOARD_SYSTEMSDK_VERSIONS (35) must all be greater than or equal to BOARD_API_LEVEL, BOARD_SHIPPING_API_LEVEL or PRODUCT_SHIPPING_API_LEVEL (10000).\n\nDo you think defining PRODUCT_SHIPPING_API_LEVEL in this case to be equal to BOARD_SYSTEMSDK_VERSIONS is okay, or can I remove this requirement on BOARD_SYSTEMSDK_VERSIONS?",
      "revId": "970a17192b41687b4ce4e7dc77da1527e43afd5e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73a184bf_fa298c25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-06-21T11:50:31Z",
      "side": 1,
      "message": "As the vendor sdk version is limited to 34, `BOARD_API_LEVEL` is no longer a valid check for `BOARD_SYSTEMSDK_VERSIONS`. Also, `BOARD_SYSTEMSDK_VERSIONS` is set by the build system, so we don\u0027t need to worry about having old sdk versions in `BOARD_SYSTEMSDK_VERSIONS`. Let\u0027s remove the `BOARD_SYSTEMSDK_VERSIONS` verification.",
      "parentUuid": "56df50f3_eb3c0b89",
      "revId": "970a17192b41687b4ce4e7dc77da1527e43afd5e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deca1c7d_7869ccce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-26T17:19:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73a184bf_fa298c25",
      "revId": "970a17192b41687b4ce4e7dc77da1527e43afd5e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1151796c_90552294",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-26T19:56:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facfa0a8_f5d23954",
      "revId": "970a17192b41687b4ce4e7dc77da1527e43afd5e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f90f743_4dd49312",
        "filename": "core/product_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-06-21T11:50:31Z",
      "side": 1,
      "message": "Can we ignore this line when `PRODUCT_SHIPPING_API_LEVEL` equals 10000, instead of extending the math.mk?\n`sdk-to-vendor-api-level` cannot interpret the future api level and it will generate invalid version when `PRODUCT_SHIPPING_API_LEVEL` is 10000.\n```suggestion\n    ifneq ($(PRODUCT_SHIPPING_API_LEVEL),10000)\n      VSR_VENDOR_API_LEVEL :\u003d $(call sdk-to-vendor-api-level,$(PRODUCT_SHIPPING_API_LEVEL))\n    endif\n```",
      "range": {
        "startLine": 597,
        "startChar": 4,
        "endLine": 597,
        "endChar": 89
      },
      "revId": "970a17192b41687b4ce4e7dc77da1527e43afd5e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd26f3f5_5267bcc1",
        "filename": "core/product_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-26T17:19:15Z",
      "side": 1,
      "message": "It\u0027s good to have the generic support. It may be used elsewhere as well.\n\nThe same argument I use in the CL (we want the newer, higher version) applies to VSR_VENDOR_API_LEVEL as well. If we do anything, we should make sure VSR_VENDOR_API_LEVEL also returns 10000 here.\n\nPlease approve! :D",
      "parentUuid": "3f90f743_4dd49312",
      "range": {
        "startLine": 597,
        "startChar": 4,
        "endLine": 597,
        "endChar": 89
      },
      "revId": "970a17192b41687b4ce4e7dc77da1527e43afd5e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7606690_75622553",
        "filename": "core/product_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-26T18:18:15Z",
      "side": 1,
      "message": "Yeah - you might want to fix up VSR_VENDOR_API_LEVEL separately, but if it returns a larger number here (instead of empty) it\u0027s great",
      "parentUuid": "bd26f3f5_5267bcc1",
      "range": {
        "startLine": 597,
        "startChar": 4,
        "endLine": 597,
        "endChar": 89
      },
      "revId": "970a17192b41687b4ce4e7dc77da1527e43afd5e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}