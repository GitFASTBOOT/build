{
  "comments": [
    {
      "key": {
        "uuid": "ea22fc11_2b7af671",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2019-05-02T23:25:42Z",
      "side": 1,
      "message": "It makes sense to handle \"fuzzer\" value here by appending to fsanitize_arg instead of above.",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d93f0cdd_22f64547",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-05-14T20:04:41Z",
      "side": 1,
      "message": "Given that the above \"fuzzer\" handling now includes additional operations (disabling CFI, lto) - is this okay with you?",
      "parentUuid": "ea22fc11_2b7af671",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd80ba58_92168837",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2019-05-14T20:17:57Z",
      "side": 1,
      "message": "it\u0027s also fuzzer-no-link instead of fuzzer\nlet\u0027s drop this",
      "parentUuid": "d93f0cdd_22f64547",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9f7473c_31b4a6b9",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-05-14T20:52:44Z",
      "side": 1,
      "message": "my_sanitize is from SANITIZE_TARGET. We use SANITIZE_TARGET\u003d\u0027fuzzer\u0027 to add fuzzer-no-link. It\u0027s a little confusing from the build system rules, but I think it makes sense in the context of users, where they use SANITIZE_TARGET\u003d\u0027fuzzer\u0027 to mean \"build with fuzzer support\", and their fuzzers just need to use core/fuzz_test.mk (or -fsanitize\u003dfuzzer explicitly) in order to link the fuzzer mainfile.\n\nI\u0027ve move the filtering up into the above check, where it transforms my_sanitize\u003dfuzzer to my_sanitize\u003dfuzzer-no-link, which should make it a little easier to parse what happens down here.",
      "parentUuid": "fd80ba58_92168837",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86a3c36b_f011cfdb",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2019-05-02T23:25:42Z",
      "side": 1,
      "message": "I\u0027d rather end ifeq(fuzzer) block here (before starting the address thread block).\nI don\u0027t remember why libdl is here, but it should not be affected by fuzzer.",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fa98fbd_8c387732",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-05-14T20:04:41Z",
      "side": 1,
      "message": "Changed it to be logically consistent with cc.go.",
      "parentUuid": "86a3c36b_f011cfdb",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce0182b4_76757b00",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2019-05-02T23:32:31Z",
      "side": 1,
      "message": "Does -fno-sanitize-trap\u003daddress,thread even do anything? These sanitizers do not support trap mode.",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "575ba140_8031fb47",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-05-14T20:04:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ce0182b4_76757b00",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a7c8bdd_31e9f3b8",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2019-05-02T23:25:42Z",
      "side": 1,
      "message": "Is this necessary? I don\u0027t think we want minimal runtime when fuzzing (we want full runtime), and trapping should already be disabled above.",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2c78f1c_e1142a86",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-05-14T20:04:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a7c8bdd_31e9f3b8",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "824d92cb_5f5aa0b6",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-05-15T01:32:37Z",
      "side": 1,
      "message": "After cherrypicking this for my own testing, it is necessary. It\u0027s guarding to ensure that we don\u0027t get minimal runtime, which can happen here if you have SANITIZE_TARGET\u003d\u0027fuzzer\u0027 and an Android.mk file with \"LOCAL_SANITIZE :\u003d integer\".",
      "parentUuid": "f2c78f1c_e1142a86",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfe7f2a_8fe81107",
        "filename": "core/fuzz_test.mk",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2019-05-02T23:25:42Z",
      "side": 1,
      "message": "why not LOCAL_SANITIZE +\u003d fuzzer ?",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a0fdd49_d81908ca",
        "filename": "core/fuzz_test.mk",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-05-14T20:04:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbfe7f2a_8fe81107",
      "revId": "3180bc25ad7126b11fd3ad28ca799e7f7f2398fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}