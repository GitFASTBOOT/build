{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b55e45a7_e25f0c4d",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2022-10-23T21:26:01Z",
      "side": 1,
      "message": "I would make these both positional arguments (remove the \"--\") so that the script has the same interface as before. And then you can remove the `nargs\u003d\"?\"` from board_info_txt so it will be a required argument without you having to check for it manually after.",
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58256797_318ef710",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2022-10-23T21:29:38Z",
      "side": 1,
      "message": "You can move the make code that runs the script into the `ifdef board_info_check` to resolve that issue.",
      "parentUuid": "b55e45a7_e25f0c4d",
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e2f8439_158995f2",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2022-10-24T19:10:12Z",
      "side": 1,
      "message": "Won\u0027t using positional args cause issues if `$(board_info_txt)` from the corresponding makefile is empty?\n\nAs an example, if we use positional args,\n```\n$ (INFO\u003dinfo.txt CHECK\u003dcheck1.txt check2.txt \n\u0026\u0026 check_radio_versions.py $INFO $CHECK)\n\n# Inside check_radio_versions.py\n# board_info_txt \u003d info.txt # OK\n# check_files \u003d check1.txt check2.txt # OK\n```\n\nBut, if INFO is empty\n```\n# Inside check_radio_versions.py\n# board_info_txt \u003d check1.txt # NOT OK\n# check_files \u003d check2.txt # NOT OK\n```\n\nWe could use `ifdef board_info_check`, and that would resolve it for actions that run within the build, but its behavior will be incorrect/unpredictable when run standalone",
      "parentUuid": "58256797_318ef710",
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "887c2bcc_c4b15020",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2022-10-24T19:17:45Z",
      "side": 1,
      "message": "hmm... I suppose you\u0027re right that this could be used mistakenly. I guess in that case, just make `--board_info_txt` a required flag? (remove `nargs`, add `required\u003dTrue`)\n\nAlso change the `nargs` of `--board_info_check` to `+`, which I believe still allows not passing the flag, but requires at least one argument if you do pass it.",
      "parentUuid": "7e2f8439_158995f2",
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c61fa1f_f199c128",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2022-10-24T19:44:33Z",
      "side": 1,
      "message": "\u003e hmm... I suppose you\u0027re right that this could be used mistakenly. I guess in that case, just make --board_info_txt a required flag? (remove nargs, add required\u003dTrue)\n\nI think this might be a breaking change. Currently, the exit code is 0 if the script is run if a relevant `board_info_txt` could not be found (The generic aosp_arm product does not have this file)\n \n\n\u003e Also change the nargs of --board_info_check to +, which I believe still allows not passing the flag, but requires at least one argument if you do pass it.\n\nI think this might be a breaking change as well, since we do not make any assertions on the number of files that should be checked",
      "parentUuid": "887c2bcc_c4b15020",
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3caa00e9_c9927cf8",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2022-10-24T19:47:03Z",
      "side": 1,
      "message": "The cl is already a breaking change because you\u0027re adding these flags. If we\u0027re making breaking changes, shouldn\u0027t we also do the right thing while we\u0027re at it? Exiting with status code 0 and not doing anything is not the right thing to do.",
      "parentUuid": "2c61fa1f_f199c128",
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3253a02d_61758696",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2022-10-24T20:34:50Z",
      "side": 1,
      "message": "Breaking the CLI is not the same as breaking the business logic. In its current state, this CL does the former but not the latter.\n\n\u003e Exiting with status code 0 and not doing anything is not the right thing to do.\n\nimo this really depends on how the author intends the script to be used. e.g. I could see a script `./my_script /dev/null` return an exit code of 0 without doing anything",
      "parentUuid": "3caa00e9_c9927cf8",
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea6d9c50_5b284d19",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2022-10-23T21:26:01Z",
      "side": 1,
      "message": "Nit: remove the space after the prints for style reasons, and it makes it easier to search for python 2 style prints later.",
      "range": {
        "startLine": 63,
        "startChar": 9,
        "endLine": 63,
        "endChar": 10
      },
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fce6920d_70d56091",
        "filename": "tools/check_radio_versions.py",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2022-10-24T19:10:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea6d9c50_5b284d19",
      "range": {
        "startLine": 63,
        "startChar": 9,
        "endLine": 63,
        "endChar": 10
      },
      "revId": "00243001ca645bdd128c3caeb74810478aebc5ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}