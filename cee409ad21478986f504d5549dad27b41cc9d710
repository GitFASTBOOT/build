{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6aee8eb9_c613e3bf",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 864,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-09-02T18:26:23Z",
      "side": 1,
      "message": "sigh, I guess I should refactor it into a loop.",
      "range": {
        "startLine": 864,
        "startChar": 5,
        "endLine": 864,
        "endChar": 15
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22c4a43b_c6186a65",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 864,
      "author": {
        "id": 1455782
      },
      "writtenOn": "2021-09-09T17:29:09Z",
      "side": 1,
      "message": "I tried to reduce some duplicated code, what do you think?",
      "parentUuid": "6aee8eb9_c613e3bf",
      "range": {
        "startLine": 864,
        "startChar": 5,
        "endLine": 864,
        "endChar": 15
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3205897_187512db",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-09-02T18:26:23Z",
      "side": 1,
      "message": "should we have a hard coded list to restrict what partitions can be skipped? I imagine the skip list can only apply to boot, product, system, vendor, etc; and the userdata/cache/bootloader/vbmeta/super_empty should always be rebuilt.",
      "range": {
        "startLine": 901,
        "startChar": 24,
        "endLine": 901,
        "endChar": 42
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3159664_7b7fcba6",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1455782
      },
      "writtenOn": "2021-09-09T17:29:09Z",
      "side": 1,
      "message": "We do need the ability to skip some of these other images when they depend on another skipped image.\n\nFor example, if a user is skipping vendor (e.g. in b/188491126) and they don\u0027t use a vbmeta_vendor, then since the regular vbmeta.img needs vendor.img available to regenerate itself, it would fail unable to find that vendor.img.\nSo, this user would skip both vbmeta.img and vendor.img, then use the older otatools.zip package to regenerate those two images.\n\nDo you think we should add those images to an allowlist of skippable partitions? Or not enforce the skippable list at all? I\u0027m fine either way.",
      "parentUuid": "d3205897_187512db",
      "range": {
        "startLine": 901,
        "startChar": 24,
        "endLine": 901,
        "endChar": 42
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4b68dda_d858161f",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-09-09T18:08:46Z",
      "side": 1,
      "message": "Hmm, that would rely on the caller to pass the partitions correctly. Is it better to keep the skip list simple as [boot, vendor, product, odm]\n\nAll of a sudden I think we should just skip building super_empty, vbmeta, caremap etc if skip_list is not empty... Because all of them rely on files in skip_list. While the vbmeta_system|vendor reply on if \"avb_vbmeta_system|vendor\" intersects with skip_list\n\n\nyikes, now I believe we should do the other way around. i.e. we want to build the vendor images first, then build the normal images with add_missing. Therefore, we always use the latest logic to build files like super, caremap. \n\nMaybe instead of a skip_list, we have a build_list for vendor partitions, and return early in L905. What do you think?",
      "parentUuid": "b3159664_7b7fcba6",
      "range": {
        "startLine": 901,
        "startChar": 24,
        "endLine": 901,
        "endChar": 42
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b8455d0_2e2feeb7",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1455782
      },
      "writtenOn": "2021-09-14T20:08:13Z",
      "side": 1,
      "message": "Addressed in https://r.android.com/1826615",
      "parentUuid": "f4b68dda_d858161f",
      "range": {
        "startLine": 901,
        "startChar": 24,
        "endLine": 901,
        "endChar": 42
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1f8257c_4297d82b",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 955,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-09-02T18:26:23Z",
      "side": 1,
      "message": "nit: wrap the line",
      "range": {
        "startLine": 955,
        "startChar": 82,
        "endLine": 955,
        "endChar": 99
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbc90d04_0ce48a68",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 955,
      "author": {
        "id": 1455782
      },
      "writtenOn": "2021-09-09T17:29:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1f8257c_4297d82b",
      "range": {
        "startLine": 955,
        "startChar": 82,
        "endLine": 955,
        "endChar": 99
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "633a43eb_2748a495",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 968,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-09-02T18:26:23Z",
      "side": 1,
      "message": "beware of this option, I think building super will fail if we skip the vendor partitions. (Though it might not be fatal)",
      "range": {
        "startLine": 968,
        "startChar": 6,
        "endLine": 968,
        "endChar": 19
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3a971af_0bf7ca5b",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 6
      },
      "lineNbr": 968,
      "author": {
        "id": 1455782
      },
      "writtenOn": "2021-09-09T17:29:09Z",
      "side": 1,
      "message": "Done, added check on skip list for \u0027super\u0027",
      "parentUuid": "633a43eb_2748a495",
      "range": {
        "startLine": 968,
        "startChar": 6,
        "endLine": 968,
        "endChar": 19
      },
      "revId": "cee409ad21478986f504d5549dad27b41cc9d710",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}