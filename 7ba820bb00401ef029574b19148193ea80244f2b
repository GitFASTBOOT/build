{
  "comments": [
    {
      "key": {
        "uuid": "5495803f_715c1b6c",
        "filename": "core/product.mk",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-11-22T17:24:22Z",
      "side": 1,
      "message": "Is there a reason the new prop isn\u0027t consistent with the BCP-equivalent? (i.e. not pairing them up in a single prop).",
      "range": {
        "startLine": 228,
        "startChar": 55,
        "endLine": 230,
        "endChar": 48
      },
      "revId": "7ba820bb00401ef029574b19148193ea80244f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aec26cdd_4e811277",
        "filename": "core/product.mk",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2019-11-22T17:31:39Z",
      "side": 1,
      "message": "In case of BCP it is always the ART apex: com.android.art, but here jars come from different apexes. See e.g. how the pair (apex, jar) is used in the related CL in Soong.\n\nAnton, perhaps you know a better way to construct JSON list of pairs in Make instead of a list of colon-separated strings?",
      "parentUuid": "5495803f_715c1b6c",
      "range": {
        "startLine": 228,
        "startChar": 55,
        "endLine": 230,
        "endChar": 48
      },
      "revId": "7ba820bb00401ef029574b19148193ea80244f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4992396_50c40744",
        "filename": "core/product.mk",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-11-22T17:41:18Z",
      "side": 1,
      "message": "I highlighted the wrong strings, I meant these ones:\nPRODUCT_UPDATABLE_BOOT_MODULES\nPRODUCT_UPDATABLE_BOOT_LOCATIONS",
      "parentUuid": "aec26cdd_4e811277",
      "range": {
        "startLine": 228,
        "startChar": 55,
        "endLine": 230,
        "endChar": 48
      },
      "revId": "7ba820bb00401ef029574b19148193ea80244f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6246bd98_3155e7ea",
        "filename": "core/product.mk",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1074459
      },
      "writtenOn": "2019-11-22T17:51:47Z",
      "side": 1,
      "message": "Hmm. I could do this. Is the 2 variables better than a single variable?",
      "parentUuid": "e4992396_50c40744",
      "range": {
        "startLine": 228,
        "startChar": 55,
        "endLine": 230,
        "endChar": 48
      },
      "revId": "7ba820bb00401ef029574b19148193ea80244f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da85ef29_8b34e450",
        "filename": "core/product.mk",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-11-22T17:53:37Z",
      "side": 1,
      "message": "I think the 2 variables is probably more error prone, but it\u0027d be nice to have consistency. If you\u0027re feeling particularly helpful you could refactor the 2-vars thing :)",
      "parentUuid": "6246bd98_3155e7ea",
      "range": {
        "startLine": 228,
        "startChar": 55,
        "endLine": 230,
        "endChar": 48
      },
      "revId": "7ba820bb00401ef029574b19148193ea80244f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b721da82_6d0f9551",
        "filename": "core/product.mk",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2019-11-22T17:56:58Z",
      "side": 1,
      "message": "2 variables are more efficient as no string splitting is necessary in Soong (it is probably ok to omit bonds checking and use the same index for both lists).",
      "parentUuid": "da85ef29_8b34e450",
      "range": {
        "startLine": 228,
        "startChar": 55,
        "endLine": 230,
        "endChar": 48
      },
      "revId": "7ba820bb00401ef029574b19148193ea80244f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1de8aa74_4461390f",
        "filename": "core/product.mk",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-11-22T17:24:22Z",
      "side": 1,
      "message": "please add documentation for how this variable is used here",
      "range": {
        "startLine": 230,
        "startChar": 48,
        "endLine": 231,
        "endChar": 53
      },
      "revId": "7ba820bb00401ef029574b19148193ea80244f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}