{
  "comments": [
    {
      "key": {
        "uuid": "8e59ec47_28ec2b6b",
        "filename": "core/definitions.mk",
        "patchSetId": 1
      },
      "lineNbr": 2568,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2016-03-31T01:52:07Z",
      "side": 1,
      "message": "Looks like this $(shell) is executed before generating the ninja file, while the ones I replaced are deferred to when the build recipe is executed. We can do this only if this $(shell) doesn\u0027t depend on any build output. What\u0027s the Kati magic here?\nI don\u0027t think we can replace this $(shell).\n\nDan, does assert-max-image-size still make sense given that we have moved to ext4fs and beyond?\n\n(I would write the whole assert-max-image-size using a python script in the first place instead of the mixed makefile and shell scripts.)",
      "range": {
        "startLine": 2568,
        "startChar": 34,
        "endLine": 2568,
        "endChar": 46
      },
      "revId": "a6a9ab07ed7bdd60d8183894738cd5d06518d5f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e59ec47_28342b8e",
        "filename": "core/definitions.mk",
        "patchSetId": 1
      },
      "lineNbr": 2568,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2016-03-31T02:16:49Z",
      "side": 1,
      "message": "This is running into the whitelist for pure math shell commands: https://github.com/google/kati/blob/master/func.cc#L481\n\nI\u0027m pretty sure this function isn\u0027t necessary with eMMC, but I don\u0027t know if we\u0027re saying no to NAND in the build system.",
      "parentUuid": "8e59ec47_28ec2b6b",
      "range": {
        "startLine": 2568,
        "startChar": 34,
        "endLine": 2568,
        "endChar": 46
      },
      "revId": "a6a9ab07ed7bdd60d8183894738cd5d06518d5f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}