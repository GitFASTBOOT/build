{
  "comments": [
    {
      "key": {
        "uuid": "79ea1b0c_4fedcb3f",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-11-06T00:41:56Z",
      "side": 1,
      "message": "I don\u0027t think we actually need libdl_android.so during bootstrap, but without this we won\u0027t get the symlinks from /system to the Runtime APEX either.\n\nI\u0027m open to suggestions how to solve it in other ways, but it\u0027ll probably require more special cases in cc.go then. With this I opted to keep it consistent with the other Bionic libs.",
      "revId": "41204f8b49c6297e1ba78ee085fc78622cb4b4ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b70b53e6_48ce317a",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-11-06T01:02:24Z",
      "side": 1,
      "message": "Hmm, what about just adding /apex/com.android.runtime/${LIB}/bionic to the search paths for the default platform namespace? libc.so et al would occur two times in the search path then, but that shouldn\u0027t matter, right?\n\nThat would also have the benefit of allowing the Runtime APEX to add more libraries that go into the default namespace in the future.",
      "parentUuid": "79ea1b0c_4fedcb3f",
      "revId": "41204f8b49c6297e1ba78ee085fc78622cb4b4ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85396203_43244c3e",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2019-11-06T01:33:23Z",
      "side": 1,
      "message": "I think that will work. AFAIK the linker shouldn\u0027t care that both libc.so DSOs are on the search path. It checks for already-loaded libraries using the soname first and the device/inode numbers second. When it reports a path, it uses soinfo::get_realpath, which will consistently use the /apex/.../libc.so path.",
      "parentUuid": "b70b53e6_48ce317a",
      "revId": "41204f8b49c6297e1ba78ee085fc78622cb4b4ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8ecd8df_e54d1ffb",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-11-06T01:41:08Z",
      "side": 1,
      "message": "Yes, that would work. note that you shouldn\u0027t add /apex/com.android.runtime/${LIB} to the search paths, because the directory has libraries that are incompatible \nwith the libraries in the default namespace. ${LIB}/bionic should be fine.",
      "parentUuid": "85396203_43244c3e",
      "revId": "41204f8b49c6297e1ba78ee085fc78622cb4b4ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82940750_cafddaf8",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-11-06T20:37:16Z",
      "side": 1,
      "message": "Tried it, but turns out there are plenty of boot time dependencies on libdl_android.so, e.g. from libvulkan.so, libvndksupport.so and libgraphicsenv.so that are used in bootanimation. So we do actually need to treat it as a bootstrap library, and hence this topic stays as-is.\n\nColin, PTAL for owners approval.",
      "parentUuid": "d8ecd8df_e54d1ffb",
      "revId": "41204f8b49c6297e1ba78ee085fc78622cb4b4ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}