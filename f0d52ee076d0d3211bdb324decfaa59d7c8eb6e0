{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3f874ef2_d2e06653",
        "filename": "tools/compliance/lib/noticeindex.go",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-01-11T04:28:49Z",
      "side": 1,
      "message": "Go expects all files in a single package to be in the same directory.  If you want this in a different directory it has to be a different package.",
      "revId": "f0d52ee076d0d3211bdb324decfaa59d7c8eb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6ffdf27_c1560906",
        "filename": "tools/compliance/lib/noticeindex.go",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-01-25T21:19:58Z",
      "side": 1,
      "message": "Not sure where you are getting that from. It doesn\u0027t seem to cause a problem for compliance/policy/ as long as the subdirectories don\u0027t have their own build files, but get built from the parent directory.\n\nhttps://go.dev/blog/package-names#package-paths",
      "parentUuid": "3f874ef2_d2e06653",
      "revId": "f0d52ee076d0d3211bdb324decfaa59d7c8eb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af78ddd0_6ccc6f33",
        "filename": "tools/compliance/lib/noticeindex.go",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-01-25T22:47:38Z",
      "side": 1,
      "message": "That\u0027s because we don\u0027t use go\u0027s build system within Soong, we call the go compiler directly, so we give it the exact list of files that Soong thinks are part of the package.  When you run \"go test\" or use a test runner built into a go-aware IDE like intellij it will fail.  From your link, \"Build tools map package paths onto directories\".  \"go build\" or \"go test\" or intellij will map \"compliance\" to \"build/make/tools/compliance\", and will not look at files in the \"policy\" subdirectory, which causes failures:\n\n $ go test .\n # compliance [compliance.test]\n ./test_util.go:126:8: undefined: LicenseConditionSetFromNames\n ./test_util.go:140:8: undefined: LicenseConditionSetFromNames\n ./test_util.go:460:55: undefined: SourceSharePrivacyConflict\n ./test_util.go:461:19: undefined: SourceSharePrivacyConflict\n ./test_util.go:469:27: undefined: SourceSharePrivacyConflict\n ./readgraph.go:154:27: undefined: LicenseConditionSetFromNames\n ./readgraph.go:205:18: undefined: RecognizedAnnotations\n ./condition_test.go:22:18: undefined: ImpliesShared\n FAIL\tcompliance [build failed]\n FAIL\n \nImpliesShared is defined in policy/policy.go.\n\nIt would be nice if Blueprint enforced the same rules as \"go build\", but it does not.",
      "parentUuid": "e6ffdf27_c1560906",
      "revId": "f0d52ee076d0d3211bdb324decfaa59d7c8eb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f2d2a22_6eeaeb81",
        "filename": "tools/compliance/lib/noticeindex.go",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-01-26T01:26:49Z",
      "side": 1,
      "message": "If it works in Soong, how important is the rest?\n\nThe code in policy refers to the code in compliance and vice-versa. They are part of the same abstraction boundary but the ownership is different.\n\nIf we try to put them in separate packages, cycles ensue.",
      "parentUuid": "af78ddd0_6ccc6f33",
      "revId": "f0d52ee076d0d3211bdb324decfaa59d7c8eb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e211f19_fdd1524a",
        "filename": "tools/compliance/lib/noticeindex.go",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-01-26T01:39:30Z",
      "side": 1,
      "message": "It is important that Go-aware IDEs can parse the code, otherwise they will show syntax errors and won\u0027t be able to run or debug tests.\n\nWhat do you mean by \"ownership is different\"?  If you literally mean OWNERS files, you can use per-file entries in the OWNERS file to require specific owners reviewers for the policy files.\n\nOtherwise you may need a 3rd package for the code that is shared between policy and compliance, or sometimes there are tricks you can use where only one package has references to the other package, but initializes some global values in it to allow it to call back in without direct references.",
      "parentUuid": "4f2d2a22_6eeaeb81",
      "revId": "f0d52ee076d0d3211bdb324decfaa59d7c8eb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b61c4e2_7cb06410",
        "filename": "tools/compliance/lib/noticeindex.go",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-01-26T01:43:03Z",
      "side": 1,
      "message": "policy/ has been this way for 3 months and nobody seemed to notice...\n\nI don\u0027t think you can do the equivalent of a \"set noparent\" using per-file entries. Can you?",
      "parentUuid": "8e211f19_fdd1524a",
      "revId": "f0d52ee076d0d3211bdb324decfaa59d7c8eb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19d40dfd_06a32533",
        "filename": "tools/compliance/lib/noticeindex.go",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-01-26T01:45:30Z",
      "side": 1,
      "message": "The preexisting split between compliance and policy seems harder to deal with immediately, how about just moving this new file into compliance to avoid creating any new splits?",
      "parentUuid": "8e211f19_fdd1524a",
      "revId": "f0d52ee076d0d3211bdb324decfaa59d7c8eb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdc226c0_d5526127",
        "filename": "tools/compliance/lib/noticeindex.go",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-01-26T01:48:22Z",
      "side": 1,
      "message": "Yes, per-file supports no-parent: https://android-review.googlesource.com/plugins/code-owners/Documentation/backend-find-owners.html#per-file",
      "parentUuid": "19d40dfd_06a32533",
      "revId": "f0d52ee076d0d3211bdb324decfaa59d7c8eb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}