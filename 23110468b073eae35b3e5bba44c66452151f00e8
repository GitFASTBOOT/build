{
  "comments": [
    {
      "key": {
        "uuid": "edbef6fc_91517929",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5206,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-10-30T19:44:28Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 5206,
        "startChar": 55,
        "endLine": 5206,
        "endChar": 66
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a847b372_641e0d1d",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5206,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-11-04T22:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edbef6fc_91517929",
      "range": {
        "startLine": 5206,
        "startChar": 55,
        "endLine": 5206,
        "endChar": 66
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec25befc_a749125b",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-10-30T19:44:07Z",
      "side": 1,
      "message": "This is never referenced",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb93b466_bbcfc28a",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-11-04T22:42:06Z",
      "side": 1,
      "message": "The copy-many-files here is actually the thing that\u0027s responsible for generating the rules. The result doesn\u0027t actually need to be saved anywhere (as you\u0027re right, it\u0027s not referenced), but I couldn\u0027t find a better way to discard the result of the call. If we don\u0027t assign it here (and just make the $(call ...)), make complains as it expands the string.\n\nAny ideas?",
      "parentUuid": "ec25befc_a749125b",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "058de29f_5d8bb25c",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-11-04T22:50:23Z",
      "side": 1,
      "message": "copy-many-files produces a list of the destination files, so I think ALL_FUZZ_TARGETS :\u003d $(call copy-many-files,...) and remove the ALL_FUZZ_TARGETS generation from Soong.",
      "parentUuid": "cb93b466_bbcfc28a",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d7c2f1a_2e0da2f3",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-11-04T23:05:53Z",
      "side": 1,
      "message": "FUZZ_SHARED_DEPS is for the fuzz targets\u0027 shared library dependencies though, not for the modules themselves.",
      "parentUuid": "058de29f_5d8bb25c",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb267203_268f3782",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-11-04T23:39:06Z",
      "side": 1,
      "message": "I see, this is a little strange because Soong is depending the target path of each copy, but then using Make to do the copies.  Why not do the install inside Soong?",
      "parentUuid": "6d7c2f1a_2e0da2f3",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "510522b9_294c95a7",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-11-05T00:45:12Z",
      "side": 1,
      "message": "I couldn\u0027t figure out a way to generate the device/host specific installation paths inside of Soong, as GenerateBuildActions only provides us a SingletonContext, with no (obvious) way to get a ModuleInstallPathContext for PathForModuleInstall.\n\nAlso, nothing in Soong should depend on the target path of the copy, just the modules down the line in Make context.",
      "parentUuid": "fb267203_268f3782",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e275a401_c2bce92f",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-11-06T23:22:23Z",
      "side": 1,
      "message": "I\u0027m confused, can you give a concrete example of something that depends on the copy target?",
      "parentUuid": "510522b9_294c95a7",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ec0d43b_c61c730f",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2019-11-06T23:33:47Z",
      "side": 1,
      "message": "dtsframescanner_fuzzer has a shared_libs dependency on libaudiospdif.\n\nlibaudiospdif.so is detected during fuzzBinary::install(), and we generate the \"install location\":\n    $(PRODUCT_OUT)/data/fuzz/arm64/lib/libaudiospdif.so\n\nThis \"install location\" is saved to fuzz.installSharedDeps, and written by androidmk.go to LOCAL_FUZZ_INSTALLED_SHARED_DEPS, so we end up with:\n    LOCAL_FUZZ_INSTALLED_SHARED_DEPS :\u003d $(PRODUCT_OUT)/data/fuzz/arm64/lib/libaudiospdif.so\n(for LOCAL_MODULE :\u003d dtsframescanner_fuzzer).\n\nbase_rules.mk adds a dependency to $(LOCAL_MODULE) on this \"install location\", e.g.:\n    $(LOCAL_INSTALLED_MODULE): $(PRODUCT_OUT)/data/fuzz/arm64/lib/libaudiospdif.so\n\n\n\nThe rule to actually create that file is generated by GenerateBuildActions and core/Makefile. GenerateBuildActions makes the same install location, but creates the pair between the new install location and the original install location of libadiospdif.so, so we get:\n    FUZZ_TARGET_SHARED_DEPS_INSTALL_PAIRS :\u003d \u003cpath_to_module_out\u003e/libaudiospdif.so:$(PRODUCT_OUT)/data/fuzz/arm64/lib/libaudiospdif.so\n\nThese pairs are interpreted in core/Makefile as copy-many-files over FUZZ_TARGET_SHARED_DEPS_INSTALL_PAIRS:\n    FUZZ_SHARED_DEPS :\u003d $(call copy-many-files,$(strip $(FUZZ_TARGET_SHARED_DEPS_INSTALL_PAIRS)))\n\nThis copy-many-files is the thing that actually generates the \"$(PRODUCT_OUT)/data/fuzz/arm64/lib/libaudiospdif.so\" rule, which was previously depended on by $(LOCAL_INSTALLED_MODULE) for dtsframescanner_fuzzer. When dtsframescanner_fuzzer builds, it calls the target created by the call to copy-many-files, and the shared library gets reinstalled to /data/fuzz.",
      "parentUuid": "e275a401_c2bce92f",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a70f723_25be39f2",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5208,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-11-06T23:43:27Z",
      "side": 1,
      "message": "I see.  I recommend replacing LOCAL_FUZZ_INSTALLED_SHARED_DEPS with LOCAL_FUZZ_SHARED_DEPS_INSTALL_PAIRS, and then:\n\nmy_fuzz_shared_deps :\u003d $(call copy-many-files,$(LOCAL_FUZZ_SHARED_DEPS_INSTALL_PAIRS))\n$(LOCAL_INSTALLED_MODULE): $(my_fuzz_shared_deps)",
      "parentUuid": "1ec0d43b_c61c730f",
      "range": {
        "startLine": 5208,
        "startChar": 0,
        "endLine": 5208,
        "endChar": 16
      },
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d4be6c_28d0c146",
        "filename": "core/base_rules.mk",
        "patchSetId": 1
      },
      "lineNbr": 578,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-11-06T23:43:27Z",
      "side": 1,
      "message": "This shouldn\u0027t go in base_rules.mk.  Either put it in soong_cc_prebuilt.mk, or add a new soong_fuzz_prebuilt.mk that includes soong_cc_prebuilt.mk and does this, or put it directly into the generated androidmk.go Make code (it would have to go after the include soong_cc_prebuilt.mk line).",
      "revId": "23110468b073eae35b3e5bba44c66452151f00e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}