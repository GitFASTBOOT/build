{
  "comments": [
    {
      "key": {
        "uuid": "bf505ca5_96b4fc0d",
        "filename": "target/board/generic_arm64/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-06-04T16:39:16Z",
      "side": 1,
      "message": "it seems strange these just don\u0027t agree with the TARGET_CPU above. Presumably we could build arm code (ie not 64-bit) with armv8 as a variant. There are instructions in armv8 beyond even what\u0027s in cortex-a15 iirc.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 33
      },
      "revId": "93694e63ee3d4fa3aec0d4246e25039414bca520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f1c24fb_e3b820d9",
        "filename": "target/board/generic_arm64/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-06-04T17:11:27Z",
      "side": 1,
      "message": "We wanted to use the exactly same configuration of 32-bit arm build for the second arch.",
      "parentUuid": "bf505ca5_96b4fc0d",
      "revId": "93694e63ee3d4fa3aec0d4246e25039414bca520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f162cdd_52d754cb",
        "filename": "target/board/generic_arm64/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-06-04T21:26:29Z",
      "side": 1,
      "message": "What is \"exactly same configuration\" ? The variant here has neon while the normal BoardConfig.mk doesn\u0027t. As Aarch64 implies Arm64 implies armv8 then I think the right options are:\nTARGET_2ND_ARCH_VARIANT :\u003d armv8-a\nTARGET_2ND_CPU_VARIANT :\u003d armv8-a",
      "parentUuid": "7f1c24fb_e3b820d9",
      "revId": "93694e63ee3d4fa3aec0d4246e25039414bca520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f1c24fb_8eb06b7a",
        "filename": "target/board/generic_arm64/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-06-04T21:39:25Z",
      "side": 1,
      "message": "The configurations in build/core/combo.\nWith armv8-a for the second arch, it won\u0027t bulid, for we don\u0027t have armv8-a.mk in build/core/combo/arch/arm/. Also I don\u0027t know if the 32-bit toolchain knows armv8-a as arch variant and cpu variant.",
      "parentUuid": "3f162cdd_52d754cb",
      "revId": "93694e63ee3d4fa3aec0d4246e25039414bca520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4350e0_10ef8dda",
        "filename": "target/board/generic_arm64/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-06-04T22:07:11Z",
      "side": 1,
      "message": "Our ARM 32-bit GCC supports armv8-a as a -march option:\n\n$ arm-eabi-gcc-4.8 -march\u003darmv8-a\narm-eabi-gcc-4.8: fatal error: no input files\ncompilation terminated.\n\nit seems like we should add a armv8-a.mk in build/core/combo/arch/arm/, looking at:\nhttps://gcc.gnu.org/onlinedocs/gcc-4.8.3/gcc/ARM-Options.html#ARM-Options\nThere are other options we can specify for potentially better neon support like:\n-mfpu\u003dneon-fp-armv8\nI defer to Ben and ARM on the best default combination. It seems wrong that we\u0027re not treating 32-bit ARMv8 as an improved instruction set in this patch but making it look like a cortex-a15 (although that\u0027s better than just generic).",
      "parentUuid": "7f1c24fb_8eb06b7a",
      "revId": "93694e63ee3d4fa3aec0d4246e25039414bca520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}