{
  "comments": [
    {
      "key": {
        "uuid": "4bc5c047_2d8ae9a5",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2019-06-25T14:29:35Z",
      "side": 1,
      "message": "nit: two blank lines above",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 457,
        "endChar": 3
      },
      "revId": "efbfc5017c4c62867d1d3e28fa89550937724744",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6237d1ff_00594509",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-06-26T04:12:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4bc5c047_2d8ae9a5",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 457,
        "endChar": 3
      },
      "revId": "efbfc5017c4c62867d1d3e28fa89550937724744",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3095358d_69a6b0a4",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 3
      },
      "lineNbr": 458,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2019-06-25T14:29:35Z",
      "side": 1,
      "message": "this \"read_helper\" doesn\u0027t help anything. just read directly",
      "range": {
        "startLine": 458,
        "startChar": 6,
        "endLine": 458,
        "endChar": 17
      },
      "revId": "efbfc5017c4c62867d1d3e28fa89550937724744",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54351b81_f0f228cd",
        "filename": "tools/releasetools/common.py",
        "patchSetId": 3
      },
      "lineNbr": 458,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-06-26T04:12:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3095358d_69a6b0a4",
      "range": {
        "startLine": 458,
        "startChar": 6,
        "endLine": 458,
        "endChar": 17
      },
      "revId": "efbfc5017c4c62867d1d3e28fa89550937724744",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3adfdd98_482cfde8",
        "filename": "tools/releasetools/merge_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 850,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2019-06-25T14:29:35Z",
      "side": 1,
      "message": "nit: two more space (run `pylint --rcfile\u003dpylintrc merge_target_files.py`)",
      "range": {
        "startLine": 850,
        "startChar": 2,
        "endLine": 850,
        "endChar": 4
      },
      "revId": "efbfc5017c4c62867d1d3e28fa89550937724744",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6645f4fe_b51eb047",
        "filename": "tools/releasetools/merge_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 850,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-06-26T04:12:17Z",
      "side": 1,
      "message": "Done, and I made a few more changes from pylint.\n\nI think it would be better if pylint is included in PREUPLOAD hook.\nIf it is ok then I will raise other CR to add pylint as preupload hook in build/make project",
      "parentUuid": "3adfdd98_482cfde8",
      "range": {
        "startLine": 850,
        "startChar": 2,
        "endLine": 850,
        "endChar": 4
      },
      "revId": "efbfc5017c4c62867d1d3e28fa89550937724744",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f592932_98884307",
        "filename": "tools/releasetools/merge_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 850,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2019-06-26T06:08:18Z",
      "side": 1,
      "message": "yeah, i fully agree that configuring the linter as repo hook would be helpful. but the following two items from https://android.googlesource.com/platform/tools/repohooks/+/refs/heads/master/README.md#todo_limitations seem to be the major blockers right now:\n\n * pylint should support per-directory pylintrc files.\n * We need to add pylint tool to the AOSP manifest and use that local copy instead of relying on the version that is in $PATH.\n\nplus only one PREUPLOAD is supported per project.\n\nSo having that PREUPLOAD hook will apply to all the py files under build/make (unless we fix per-dir support, which seems doable), and will require CL committers to install pylint locally until pulling the linter into AOSP (not sure about the right team to push this one forward).",
      "parentUuid": "6645f4fe_b51eb047",
      "range": {
        "startLine": 850,
        "startChar": 2,
        "endLine": 850,
        "endChar": 4
      },
      "revId": "efbfc5017c4c62867d1d3e28fa89550937724744",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c51dfb46_641c2d4c",
        "filename": "tools/releasetools/merge_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 850,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-06-26T07:35:13Z",
      "side": 1,
      "message": "Thanks for the information.\n\nI thought pylint works with own (not in $PATH) version from AOSP based on my experience, but maybe not perfect.\n\nFor now I cannot find any clear way to enforce pylint. I thought about include pylint or autopep8 in build time, but seems it would be not easy either.",
      "parentUuid": "6f592932_98884307",
      "range": {
        "startLine": 850,
        "startChar": 2,
        "endLine": 850,
        "endChar": 4
      },
      "revId": "efbfc5017c4c62867d1d3e28fa89550937724744",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}