{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b6e5d9fe_5a70ea03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-11-18T11:40:08Z",
      "side": 1,
      "message": "I am not sure if this is okay. If not, let me know what is the preferred way of doing this.",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "324055b1_17b2fec6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-11-18T14:43:19Z",
      "side": 1,
      "message": "Is adding a flag for the mke2fs path to mkuserimg_mke2fs an option?",
      "parentUuid": "b6e5d9fe_5a70ea03",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a38c391_8aaefa1f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-11-18T15:06:07Z",
      "side": 1,
      "message": "That should work, but I don\u0027t want to do that because\n\n1) the path has to passed twice: once in build_image, and then once again in mkuserimg_mke2fs\n2) 1) is not only cumbersome but also leaking the impl detail of mkuserimg_mke2fs to build_image\n3) mke2fs is not the only program that mkuserimg_mke2fs uses. e2fsdroid is the another one.",
      "parentUuid": "324055b1_17b2fec6",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df27e35c_d86f53b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-11-18T15:19:32Z",
      "side": 1,
      "message": "What I\u0027m worried about is the obscureness of this approach. It can lead to unpredictable results, and if that happens, it won\u0027t be easy to troubleshoot without you around.\n\n2) and 3) can be partly mitigated by supplying the host bin path instead.",
      "parentUuid": "5a38c391_8aaefa1f",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb0aeb22_01c4acd4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-11-19T04:00:28Z",
      "side": 1,
      "message": "This in effect is supplying host bin path, isn\u0027t it? PATH is already set to point there, and isn\u0027t pointing anywhere around /usr/bin, etc.",
      "parentUuid": "df27e35c_d86f53b0",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54ccf4d9_b1020062",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-11-19T05:41:43Z",
      "side": 1,
      "message": "Let\u0027s say something breaks it later, and none of us are around. It\u0027s either mkuserimg_mke2fs failing to find mke2fs and/or e2fsdroid or executing wrong ones. It\u0027ll be very tricky for someone who doesn\u0027t know about this trick to figure out that they should start from checking the PATH env var. Most wouldn\u0027t even think of looking into the build_image code.\n\nIn contrast, if there was an explicit path flag, troubleshooting is as simple as checking if the executables are at the expected place, and if so, if they\u0027re the correct ones. Plus, it\u0027s less error-prone.",
      "parentUuid": "fb0aeb22_01c4acd4",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e8a4608_ee8f955e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-11-19T16:30:14Z",
      "side": 1,
      "message": "That argument is difficult to accept. Lots of host tools (not just build_image) internally invoke other host tools. I don\u0027t think they all have to be with the absolute paths.",
      "parentUuid": "54ccf4d9_b1020062",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59cf2c3c_806ba924",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-11-19T16:44:44Z",
      "side": 1,
      "message": "Two points about other tools depending on another tool.\n- How do they address this PATH issue? Can you do the same to mkuserimg_mke2fs?\n- Even if they all are doing something really hacky to achieve what they want, it can\u0027t be an excuse to repeat the same mistake over and over.\n\nWhat\u0027s the problem with fixing this starting from the mkuserimg_mke2fs? If it\u0027s the right way, shouldn\u0027t we do it even if it involves some more work?",
      "parentUuid": "7e8a4608_ee8f955e",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d452fe7_cb93ecab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-11-19T17:17:50Z",
      "side": 1,
      "message": "For example, in case of apexer.py (which internally uses a lot of other host tools), the host tool dir path is given to the script as an argument. https://source.corp.google.com/android/build/soong/apex/builder.go;l\u003d113?q\u003dapexer_tool_path\u0026sq\u003dpackage:%5Eandroid$ \n\nThen it tries to find a tool in the directory. https://source.corp.google.com/android/system/apex/apexer/apexer.py;rcl\u003def641ba5fc5df1f17c68cb030487868409e26658;l\u003d184\n\nWhat I really want to avoid is putting the knowledge (name, path, etc.) about mke2fs and e2fsdroid in build_image. The reason is because they are internal details of mkuserimg_mke2fs that build_image should care about.\n\nIf you suggest adding an option like --tool_path in both build_image and mkuserimg_mke2fs and setting it to out/host/soong/linux-x86/bin in the Soong side. Then I think --tool_path is essentially PATH, which makes me to wonder what do we get by doing this.\n\n--------------------------\nAnother alternative is for letting mkuserimg_mke2fs to examine its own directory (which would be the host tool dir) when invoking its internal tools. If that sounds ok, I will do that.",
      "parentUuid": "59cf2c3c_806ba924",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76536acf_937fc427",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-11-19T18:26:45Z",
      "side": 1,
      "message": "https://android-review.googlesource.com/q/topic:%22packaging%22+(status:open%20OR%20status:merged) implements the latter idea. PTAL.",
      "parentUuid": "5d452fe7_cb93ecab",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87535e23_6d00e73c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-11-19T23:14:08Z",
      "side": 1,
      "message": "\u003e If you suggest adding an option like --tool_path in both build_image and mkuserimg_mke2fs and setting it to out/host/soong/linux-x86/bin in the Soong side. Then I think --tool_path is essentially PATH, which makes me to wonder what do we get by doing this.\n\nYes, this is the correct way, IMO. It provides clear visibility to the path where mkuserimg_mke2fs finds the tools, so it makes it much easier to troubleshoot issues if anything happens to this setup.\n\nYour alternative looks fine to me though. I still think the --tool_path approach is the way to go. But the alternative at least makes it clear which path can be used for tool searching, so I\u0027m not worried about potential debugging difficulties.",
      "parentUuid": "76536acf_937fc427",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75b7a511_71c2d07c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-11-19T23:50:07Z",
      "side": 1,
      "message": "The commit message in aosp/1505833 explains potential problems with the toolpath approach.\n\nAnyway, it\u0027s good to know that the alternative is also fine. Let me abandon this.",
      "parentUuid": "87535e23_6d00e73c",
      "revId": "903d9c6806a4eb558b8eb72e4da2777aa4868d11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}