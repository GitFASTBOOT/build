{
  "comments": [
    {
      "key": {
        "uuid": "36198fd7_f4ba7e8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368430
      },
      "writtenOn": "2020-08-31T23:26:18Z",
      "side": 1,
      "message": "Hi Anton,\n\nFriendly ping on this CL.\n\nJust as a reminder, the corresponding change in goog/master that disables this value landed with the following CL:\nhttps://googleplex-android-review.git.corp.google.com/c/platform/build/+/12353698",
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "406f9cf1_439952d6",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1368430
      },
      "writtenOn": "2020-08-13T15:51:05Z",
      "side": 1,
      "message": "ref",
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fe9c74d_666fc3c5",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-08-11T15:40:36Z",
      "side": 1,
      "message": "if we\u0027re adding this to base_system .. is there an argument to just default the getter to \"true\" and and instead only add it if it is false?",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 355,
        "endChar": 57
      },
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "681bbb8f_1a88addd",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1368430
      },
      "writtenOn": "2020-08-11T15:47:12Z",
      "side": 1,
      "message": "I\u0027m not familiar with how that would work.   Is there an example CL or property I can follow to try it out?",
      "parentUuid": "1fe9c74d_666fc3c5",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 355,
        "endChar": 57
      },
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "156708bd_d5ac297c",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-08-11T15:51:20Z",
      "side": 1,
      "message": "I don\u0027t see any references to this prop yet. What I mean is.. I expect you\u0027re planning on adding something like this:\n    if (getprop(ro.gfx.angle.supported) is true) { .. }\n\nYou could instead make it opt-out and not add the prop by default:\n    if (getprop(ro.gfx.angle.supported) is not false) { ... }\n\nIf you have other planned uses of the prop, it\u0027s fine to add this as-is too. Just wanted to check",
      "parentUuid": "681bbb8f_1a88addd",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 355,
        "endChar": 57
      },
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afdd0c40_341c0e5c",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1368430
      },
      "writtenOn": "2020-08-11T17:00:21Z",
      "side": 1,
      "message": "Oh, I see, I misunderstood what you meant.\n\nWe are currently using this in our CTS tests (cts/hostsidetests/angle/) just as you describe:\n\n    static final String PROPERTY_GFX_ANGLE_SUPPORTED \u003d \"ro.gfx.angle.supported\";\n    static boolean isAngleLoadable(ITestDevice device) throws Exception {\n        String angleSupported \u003d device.getProperty(PROPERTY_GFX_ANGLE_SUPPORTED);\n\n        return (angleSupported !\u003d null) \u0026\u0026 (angleSupported.equals(\"true\"));\n    }\n\nYour idea should actually make it easier to handle AOSP vs internal master.   Rather than enabling it here and then pulling it back out of goog/master, we can set the property to false in goog/master and update the CTS tests to look for that instead.\n\nI\u0027ll give that a shot and see how it looks.",
      "parentUuid": "156708bd_d5ac297c",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 355,
        "endChar": 57
      },
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d417e14_ebbca290",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1368430
      },
      "writtenOn": "2020-08-12T00:12:15Z",
      "side": 1,
      "message": "I\u0027ve taken a look at this from the goog/master perspective also, and I prefer enabling this property here while also disabling it in goog/master.\n\nThis should make it more explicit where it\u0027s enabled/disabled when attempting to chase down any CTS failures, rather than relying on undocumented behavior on either side (internal or AOSP).\n\nHere\u0027s the goog/master CL that I\u0027d like to land first, so the CTS tests continue to stay disabled there, and then deal with the merge conflict (by keeping it \u0027false\u0027) when this CL is auto-merged in:\nhttps://googleplex-android-review.git.corp.google.com/c/platform/build/+/12353698",
      "parentUuid": "afdd0c40_341c0e5c",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 355,
        "endChar": 57
      },
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f99b4a6_49bfa56b",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-08-12T09:07:45Z",
      "side": 1,
      "message": "What\u0027s the reason for disabling in internal? What about the other branches between this one and internal master?",
      "parentUuid": "3d417e14_ebbca290",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 355,
        "endChar": 57
      },
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "189b8b0c_fa0a46b3",
        "filename": "target/product/base_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1368430
      },
      "writtenOn": "2020-08-13T15:51:05Z",
      "side": 1,
      "message": "We want it disabled in internal, since we aren\u0027t ready to ship ANGLE to devices yet.   It will be enabled in internal eventually (we are targeting CF this quarter), but we aren\u0027t ready for it everywhere just yet.   Additionally, we are working on creating a \u0027main-angle-testing\u0027 branch off of internal to re-enable ANGLE for testing on devices running internal (the branch just got created yesterday) in preparation for enabling it further.\n\nAdmittedly, I don\u0027t know about the builds between AOSP and internal.   ANGLE was included in here so we can build/test it (see the ref on line 30 above), but we missed this property.   We haven\u0027t had any complaints yet, but maybe we\u0027ve just been lucky?\n\nCL that added \u0027ANGLE\u0027 here:\nhttps://android-review.googlesource.com/c/platform/build/+/1224079",
      "parentUuid": "9f99b4a6_49bfa56b",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 355,
        "endChar": 57
      },
      "revId": "f5e68d93280528b796582a5580302e3966fb1bfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}