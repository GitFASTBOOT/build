{
  "comments": [
    {
      "key": {
        "uuid": "f4c3d2bd_6cf53972",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-09-26T15:09:27Z",
      "side": 1,
      "message": "nit: should be \"add_hash_footer\" and \"add_hashtree_footer\"",
      "range": {
        "startLine": 152,
        "startChar": 53,
        "endLine": 153,
        "endChar": 39
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b1bff7_1b304d42",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-09-28T09:45:57Z",
      "side": 1,
      "message": "Done.\n\nSorry, I used to use single quote when I was in ChromeOS team.\nSometimes still forget to switch to \" :(",
      "parentUuid": "f4c3d2bd_6cf53972",
      "range": {
        "startLine": 152,
        "startChar": 53,
        "endLine": 153,
        "endChar": 39
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33d786f8_beea2123",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-09-26T15:09:27Z",
      "side": 1,
      "message": "Seems we don\u0027t have this path.\n\n(And if we did, it would be cleaner to raise on error.)",
      "range": {
        "startLine": 180,
        "startChar": 31,
        "endLine": 180,
        "endChar": 56
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98c6f2f6_274fae8a",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-09-28T09:45:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33d786f8_beea2123",
      "range": {
        "startLine": 180,
        "startChar": 31,
        "endLine": 180,
        "endChar": 56
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc8f0f16_0af2ff25",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-09-25T23:52:36Z",
      "side": 1,
      "message": "When we increased delta, it also increases the final footer size a bit (by footer_ratio).\nSo using * 2 to prevent it from entering the loop at L198 in most cases.",
      "range": {
        "startLine": 194,
        "startChar": 64,
        "endLine": 194,
        "endChar": 65
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4709cce1_8cc9dd19",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-09-26T15:09:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dc8f0f16_0af2ff25",
      "range": {
        "startLine": 194,
        "startChar": 64,
        "endLine": 194,
        "endChar": 65
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce03697f_87ce6aa7",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-09-28T09:45:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4709cce1_8cc9dd19",
      "range": {
        "startLine": 194,
        "startChar": 64,
        "endLine": 194,
        "endChar": 65
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "772f6fbd_432718f2",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-09-25T23:52:36Z",
      "side": 1,
      "message": "In my local test, we won\u0027t go into this loop.\nThe hi at L195 is large enough.\n\nAnyway, L198-L202 is to ensure hi is always big enough.",
      "range": {
        "startLine": 198,
        "startChar": 1,
        "endLine": 199,
        "endChar": 15
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f52e1f22_0c16708e",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-09-26T15:09:27Z",
      "side": 1,
      "message": "How about putting some sanity tests into test_build_image.py as a unit test for this function?\n\nThe function interface needs to be updated to take a func instead:\n\n  def AVBCalcMinPartitionSize(image_size, size_calculator):\n    ...\n  \nwhere size_calculator is a function that takes partition_size, and returns the max image size.\n\nAnd the caller passes something like:\n\n  size \u003d AVBCalcMinPartitionSize(\n      size,\n      lambda x: AVBCalcMaxImageSize(\n          avbtool, avb_footer_type, x, avb_signing_args))\n\n(or using functools.partial or a named function instead of lambda)\n\nThis way it allows passing a custom size_calculator (e.g. lambda x: int(x * 0.95)) in unit test. avbtool, avb_footer_type, avb_signing_args are less meaningful for AVBCalcMinPartitionSize() anyway.",
      "parentUuid": "772f6fbd_432718f2",
      "range": {
        "startLine": 198,
        "startChar": 1,
        "endLine": 199,
        "endChar": 15
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd1a70b8_246c3da1",
        "filename": "tools/releasetools/build_image.py",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-09-28T09:45:57Z",
      "side": 1,
      "message": "Great, nice suggestion!\n\nYup, I was thinking about the same thing, those avbtool, avb_signing_args are totally irrelevant to this function.\n\nIt\u0027s much cleaner now. Thanks a lot!",
      "parentUuid": "f52e1f22_0c16708e",
      "range": {
        "startLine": 198,
        "startChar": 1,
        "endLine": 199,
        "endChar": 15
      },
      "revId": "754b59b87ad74c37d5f1f11f714d1733b74b98d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}