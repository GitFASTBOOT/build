{
  "comments": [
    {
      "key": {
        "uuid": "f25d94fb_bf4209ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2018-07-18T08:20:26Z",
      "side": 1,
      "message": "The host version of bouncycastle doesn\u0027t run the jarjar rules -- that\u0027s generally what we want, as we don\u0027t want different \"host\" and \"device\" modules (it makes it harder to use host_supported).\n\nWhy is this actually needed?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "a92453d4428101e67a259b016e0be6fe95e92332",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a7fae1f_fe9ce125",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2018-07-18T08:25:54Z",
      "side": 1,
      "message": "Ah, I had missed the context comment -- the commit message should have some of that information.\n\nSince the APIs are already different, the host_support argument is a bit weaker. It seems like it would remain possible to expose the renamed source files to the device variant, and pass through bouncycastle-unbundled for host like we did before.",
      "parentUuid": "f25d94fb_bf4209ff",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "a92453d4428101e67a259b016e0be6fe95e92332",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dc6cae1_669f1b7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2018-07-18T10:01:07Z",
      "side": 1,
      "message": "I don\u0027t understand the final sentence [what is the \"host_support\" argument?]. Please can you be more explicit because I don\u0027t understand the build system as well as you. Perhaps an example would help.\n\nWe effectively want two targets for each \"thing\":\n\nA library containing compiled org.bouncycastle code and a library containing compiled com.android.org.bouncycastle code.\n\ncom.android.org.bouncycastle is for use on device.\norg.bouncycastle can be used in the unbundled apps case, or for host.\n\nPreviously there were 2 targets:\n\nOne that sometimes produced org.bouncycastle and sometimes com.android.org.bouncycastle depending on whether it was a host or a device library depending on it.\n\nOne that always produces org.bouncycastle.\n\nAFAICT my change here switches a host module to using the always-org.bouncycastle version because after my proposed follow-up change we can no longer have a target that conditionally produces different packages (which I also think is rather confusing).",
      "parentUuid": "5a7fae1f_fe9ce125",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "a92453d4428101e67a259b016e0be6fe95e92332",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "014f53ce_44ec1b50",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2018-07-20T05:05:10Z",
      "side": 1,
      "message": "We\u0027ve been using `host_supported: true` in Soong so that we define a single module that\u0027s supported on both device and host (instead of lib and lib-host that had been common). Even if it doesn\u0027t entirely make sense for a particular library, if there\u0027s a user of the library that is marked as host_supported, it\u0027s somewhat verbose \u0026 painful to list:\n\n  host_supported: true,\n  target: {\n    host: {\n      libs: [\"lib-host\"],\n    },\n    android: {\n      libs: [\"lib\"],\n    },\n  }\n\nvs\n\n  host_supported: true,\n  libs: [\"lib\"],\n\nSo I\u0027d argue that if there\u0027s ever going to be a user that is supported on both host and device, it can be nicer to expose both interfaces from a single name, even if their API is different (maybe it\u0027s a different library they use that uses host/device-specific sources using this library).\n\nBut if that\u0027s far-fetched enough in this case, maybe it\u0027s not worth it.\n\n\u003e after my proposed follow-up change we can no longer have a target that conditionally produces different packages \n\nYou\u0027d just need to put the srcs/exclude_srcs inside target: { android: {} } and move the current static_libs inside target: { host: {} }.\n\nDoes it make sense to turn off the host version of \"bouncycastle\" if it\u0027s always going to contain the com.android.org.bouncycastle version?",
      "parentUuid": "2dc6cae1_669f1b7d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "a92453d4428101e67a259b016e0be6fe95e92332",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}