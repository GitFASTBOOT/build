{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a5afa18d_0c13c65e",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3719,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-02-17T22:44:44Z",
      "side": 1,
      "message": "It works without this because the cd key happens to be the AVB test key which is what everything is signed with in dev builds. Either we assert that assumption (easy) or do another replacement here. Unfortunately it doesn\u0027t initially look easy to use the `replace_bytes` script from the virt apex.\n\nIt also looks from the virt APEX Android.bp that the microdroid_key might not always be the AVB test key. That might mean that keeping everything in sync can be a little tricky unless there someway to define the same aliases across these two build rules?",
      "range": {
        "startLine": 3719,
        "startChar": 1,
        "endLine": 3719,
        "endChar": 49
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa809489_1ad920e5",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3719,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-02-18T01:25:11Z",
      "side": 1,
      "message": "Yeah, this is fragile, but I think we at least for now assume that the two keys are identical.",
      "parentUuid": "a5afa18d_0c13c65e",
      "range": {
        "startLine": 3719,
        "startChar": 1,
        "endLine": 3719,
        "endChar": 49
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2851b7f_9cddf374",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5641,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-02-18T01:25:11Z",
      "side": 1,
      "message": "Drop this duplicated line?",
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "148e3140_c0fe6216",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5641,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-02-18T02:00:24Z",
      "side": 1,
      "message": "That\u0027s meant to be `INSTALLED_PVMFW_EMBEDDED_AVBKEY_TARGET`, I\u0027ll fix that.",
      "parentUuid": "f2851b7f_9cddf374",
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36defeec_58402040",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 5641,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-02-19T18:23:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "148e3140_c0fe6216",
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e34a5979_51c6b829",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-02-17T22:44:44Z",
      "side": 1,
      "message": "This should be the key that signs the virt APEX? But I don\u0027t see how to get access to it from here :/",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0ef5c93_421b45ab",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-02-18T01:25:11Z",
      "side": 1,
      "message": "I think we can\u0027t have access to the very key here.\n\nIt is available in sign_target_files_apks via the `--extra_apex_payload_key` option. There, you can have access to the key for the com.android.virt APEX, extract the public key from the key, and use it to amend pvmfw.img.",
      "parentUuid": "e34a5979_51c6b829",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "060e9303_c10a8b9d",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-02-18T02:00:24Z",
      "side": 1,
      "message": "I had been thinking that might be where this has to move. I was looking at the keys if `apex_keys` and there was `com.android.virt` as well as `com.google.android.virt`. What\u0027s the difference?",
      "parentUuid": "e0ef5c93_421b45ab",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78595836_7f46c7e6",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-02-18T02:09:07Z",
      "side": 1,
      "message": "Ah, did the two have different keys? When an APEX is signed for an OEM (e.g. Pixel), it usually is renamed to signify that it\u0027s a re-signed one.\n\nBut the problem here is that the google name is chosen by the Pixel team, and therefore shouldn\u0027t be used here in AOSP. I wish there\u0027s a relationship between the two names so that we can access the key of the google one via the aosp name.\n\nJooyung, do you have any thoughts?",
      "parentUuid": "060e9303_c10a8b9d",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9a54d77_c1b9f4bf",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2022-02-18T02:12:29Z",
      "side": 1,
      "message": "I guess it was arbitrary to use the same pubkey for the virt apex(its payload.img) and microdroid\u0027s bootloader image. Probably we need to explicitly specify a separate pubkey for both pvmfw and microdroid\u0027s bootloader? Then `sign_virt_apex` can use it instead of re-using the virt apex\u0027es pubkey.",
      "parentUuid": "e0ef5c93_421b45ab",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e406c992_5008018a",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-02-18T02:24:14Z",
      "side": 1,
      "message": "I\u0027d rather keep using the same key for the APEX and the bootloader images in it, because more keys \u003d more moving parts. If needed, we can assert that.",
      "parentUuid": "a9a54d77_c1b9f4bf",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e047ec8_e4dfbdbe",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2022-02-18T02:24:55Z",
      "side": 1,
      "message": "What if adding a separate CLI argument so that the caller to override the pvmfw key? AOSP/releasetools can fallback to `com.android.virt`\u0027s key when unspecified.\n\nFor internal signing, the signer could use `com.google.android.virt`\u0027s key for it.",
      "parentUuid": "a9a54d77_c1b9f4bf",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5073c72f_6322ef18",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-02-18T02:50:44Z",
      "side": 1,
      "message": "Reading [1], there are some quite strict rules about the use of keys with APEXs and the reuse for virt APEX feel like it might be on the side of abuse of the key. Do you know who set those rules so we can validate our use of the key?\n\n[1] -- https://source.android.com/devices/tech/ota/apex#signing",
      "parentUuid": "1e047ec8_e4dfbdbe",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54b132cc_9f57e3aa",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-02-18T05:22:55Z",
      "side": 1,
      "message": "I think it was me and others who worked in the early days of APEX. I don\u0027t see that the reuse is something what the rule prohibits. It basically says that (1) every apex is signed with different keys, and (2) the key for signing the zip container and the apex_payload.img file are different.\n\n(1) was because each APEX is owned by different teams and can be updated in isolation, and (2) was AFAIK because the key formats are different.",
      "parentUuid": "5073c72f_6322ef18",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "784e693b_b5dfa45f",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-02-19T18:23:50Z",
      "side": 1,
      "message": "I\u0027m just cautious as using keys for multiple purposes can often lead to problems down the line, maybe something like b/218890110. But if it\u0027s a considered choice then I\u0027m happy.",
      "parentUuid": "54b132cc_9f57e3aa",
      "range": {
        "startLine": 376,
        "startChar": 55,
        "endLine": 376,
        "endChar": 90
      },
      "revId": "652ebcc43c03fe26a8ad560ef96e24318b399823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}