{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "076b09e5_ebcd5e2c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-02T00:53:15Z",
      "side": 1,
      "message": "```\nAdd an integration test\n\nAdd a test to verify that the parameters passed from the envsetup.sh function are compatible with the actual tool event logger implementation.\n\nNote that this change adds support for extra logger arguments. This enables calling the real logger binary with a \u0027dry run\u0027 flag to avoid actual logging during test execution.\n```",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 12,
        "endChar": 27
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc78cce8_e9399faa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T18:36:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "076b09e5_ebcd5e2c",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 12,
        "endChar": 27
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43509a11_d531bd2c",
        "filename": "envsetup.sh",
        "patchSetId": 5
      },
      "lineNbr": 1139,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-01T20:51:06Z",
      "side": 1,
      "message": "Please add `\"` and `{}`.",
      "range": {
        "startLine": 1139,
        "startChar": 5,
        "endLine": 1139,
        "endChar": 35
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ee92ca3_f50f61f5",
        "filename": "envsetup.sh",
        "patchSetId": 5
      },
      "lineNbr": 1139,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T00:00:54Z",
      "side": 1,
      "message": "Added {}, if I add \"\" and ANDROID_TOOL_LOGGER_EXTRA_ARGS is unset, it will pass \"\" as an arg to the logger which will complain for unrecognized args.",
      "parentUuid": "43509a11_d531bd2c",
      "range": {
        "startLine": 1139,
        "startChar": 5,
        "endLine": 1139,
        "endChar": 35
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da126099_fa9b60ea",
        "filename": "envsetup.sh",
        "patchSetId": 5
      },
      "lineNbr": 1139,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-02T00:50:47Z",
      "side": 1,
      "message": "Would something like `${ANDROID_TOOL_LOGGER_EXTRA_ARGS:-}` work. See https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html but it\u0027s not that important.\n\nI may actually be correct as you have it since if we have multiple args we don\u0027t want them to be passed into the logger as a single param.",
      "parentUuid": "2ee92ca3_f50f61f5",
      "range": {
        "startLine": 1139,
        "startChar": 5,
        "endLine": 1139,
        "endChar": 35
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65652608_de1ff40b",
        "filename": "envsetup.sh",
        "patchSetId": 5
      },
      "lineNbr": 1139,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T18:36:22Z",
      "side": 1,
      "message": "Verified if we have multiple args specified in ANDROID_TOOL_LOGGER_EXTRA_ARGS, it will be passed to the logger correctly.",
      "parentUuid": "da126099_fa9b60ea",
      "range": {
        "startLine": 1139,
        "startChar": 5,
        "endLine": 1139,
        "endChar": 35
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d733716_bdb6c1de",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-01T20:51:06Z",
      "side": 1,
      "message": "Are we losing information about the args this way? What if the args contained `--dry-run` for example? Would that affect the logger?\n\nI think quoting the string is actually correct and you might need a dedicated test for that.",
      "range": {
        "startLine": 124,
        "startChar": 31,
        "endLine": 124,
        "endChar": 40
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00e4c276_f6b4bf39",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T00:00:54Z",
      "side": 1,
      "message": "I have verified that current script pass all the args as a single string to --tool_args, if we have --dry_run in the tool args, it will be passed to the logger correctly.",
      "parentUuid": "8d733716_bdb6c1de",
      "range": {
        "startLine": 124,
        "startChar": 31,
        "endLine": 124,
        "endChar": 40
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "005795ff_41c3e0e2",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-02T00:50:47Z",
      "side": 1,
      "message": "Ok. I still have doubts but it\u0027s your call.",
      "parentUuid": "00e4c276_f6b4bf39",
      "range": {
        "startLine": 124,
        "startChar": 31,
        "endLine": 124,
        "endChar": 40
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3734b838_0a66b752",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T18:36:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "005795ff_41c3e0e2",
      "range": {
        "startLine": 124,
        "startChar": 31,
        "endLine": 124,
        "endChar": 40
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a5622d_4a4c9c92",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-01T20:51:06Z",
      "side": 1,
      "message": "Consider putting this in a function like `logger_path \u003d self.import_logger()`.",
      "range": {
        "startLine": 233,
        "startChar": 0,
        "endLine": 237,
        "endChar": 32
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5d826ca_a0e76639",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-01T20:51:06Z",
      "side": 1,
      "message": "Can\u0027t you use `pathlib.chdmod`?",
      "range": {
        "startLine": 237,
        "startChar": 7,
        "endLine": 237,
        "endChar": 12
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15a276b9_06ecd85c",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T00:00:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22a5622d_4a4c9c92",
      "range": {
        "startLine": 233,
        "startChar": 0,
        "endLine": 237,
        "endChar": 32
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2b1cb84_5c54334f",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T00:00:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5d826ca_a0e76639",
      "range": {
        "startLine": 237,
        "startChar": 7,
        "endLine": 237,
        "endChar": 12
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a94790f2_5534b0cb",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-01T20:51:06Z",
      "side": 1,
      "message": "nit: Newline.",
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23e29ed6_900a5e85",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T00:00:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a94790f2_5534b0cb",
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e21bdf77_4d934e35",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 259,
      "author": {
        "id": 1480888
      },
      "writtenOn": "2024-05-01T20:51:06Z",
      "side": 1,
      "message": "Do you need to assert the contents? Also, consider a helper assertion method like `self.assert_logger_called`.\n\nTechnically speaking you could wrap your logger with a `TestScript` that forwards arguments to assert it was called :-).",
      "range": {
        "startLine": 254,
        "startChar": 4,
        "endLine": 259,
        "endChar": 40
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17448699_7ca02c1f",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 259,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T00:00:54Z",
      "side": 1,
      "message": "I think so, since the logger just fail silently if anything goes wrong. the only way we can check that the dry run success is that it to check the log contents.\n\nI moved it to a help function.",
      "parentUuid": "e21bdf77_4d934e35",
      "range": {
        "startLine": 254,
        "startChar": 4,
        "endLine": 259,
        "endChar": 40
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b82e8dae_8e17e9f1",
        "filename": "tests/run_tool_with_logging_test.py",
        "patchSetId": 5
      },
      "lineNbr": 259,
      "author": {
        "id": 1114063
      },
      "writtenOn": "2024-05-02T18:36:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17448699_7ca02c1f",
      "range": {
        "startLine": 254,
        "startChar": 4,
        "endLine": 259,
        "endChar": 40
      },
      "revId": "de2fd5dd53d5e8df2ab65be9abe30bc1a87a2437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}