{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9c4c684d_43fdbae6",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-02-06T16:18:07Z",
      "side": 1,
      "message": "Unpacking both a Result and Option makes the API less ergonomic to work with:\n\n```\nlet x \u003d get_package_offset_impl(...)?.ok_or(anyhow!(...)?;\n```\n\nCan we make it return just Result\u003cPackageOffset\u003e? (With multiple thiserror versions of the Result indicating different reasons of failure.)\n\nOr if you really want to provide an Option in case the requested data isn\u0027t available, restructure the API so the caller first gets a Result\u003cSomeHandle\u003e representing the mmapped file, and then impl SomeHandle { fn get_package_offset(...) -\u003e Option\u003c...\u003e }",
      "range": {
        "startLine": 140,
        "startChar": 5,
        "endLine": 140,
        "endChar": 34
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "846f1830_abeb5c1e",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-02-06T21:40:44Z",
      "side": 1,
      "message": "It is possible that the queried package is not in this package.map file. So I would like to it return an option. Overall, I would prefer to have just one api instead of two. An alternative is to factor the none option inside PackageOffset struct. We can add a boolean field called package_exists to cover the none case. But for now, I would prefer to keep this as it is.",
      "parentUuid": "9c4c684d_43fdbae6",
      "range": {
        "startLine": 140,
        "startChar": 5,
        "endLine": 140,
        "endChar": 34
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d8d3fb_d9ad0ff9",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-02-07T13:49:29Z",
      "side": 1,
      "message": "I don\u0027t think representing None in PackageOffset is the right way.\n\nI suggest\n\n```\nstruct Handle { ... }\nimpl Handle {\n  fn try_from_file(path: P) where P: Into\u003cPathBuf\u003e -\u003e Result\u003cHandle\u003e { ... }\n  fn get(\u0026self, ...) -\u003e Option\u003c...\u003e { ... }\n}\n```\n\ninstead of Result\u003cOption\u003c...\u003e\u003e, but happy to have a discussion why the nested result/option is a better choice.",
      "parentUuid": "846f1830_abeb5c1e",
      "range": {
        "startLine": 140,
        "startChar": 5,
        "endLine": 140,
        "endChar": 34
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad7435f6_b37eccd1",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1981530
      },
      "writtenOn": "2024-02-07T14:24:47Z",
      "side": 1,
      "message": "Would this apply to all of the other `get_*` functions as well? So we would just have one `get_file` API returning the `Handle`, and then the handle would be like:\n\n```\nstruct Handle { ... }\nimpl Handle {\n  fn try_from_file(path: P) where P: Into\u003cPathBuf\u003e -\u003e Result\u003cHandle\u003e { ... }\n  gn get_package_offset(\u0026self, ...) -\u003e Option\u003c..\u003e { .. }\n  fn get_flag_offset(\u0026self, ...) -\u003e Option\u003c...\u003e { ... }\n  ...\n}\n```\n\nI do think that API is cleaner, separates the file I/O handling and the searching for the offsets logic.",
      "parentUuid": "93d8d3fb_d9ad0ff9",
      "range": {
        "startLine": 140,
        "startChar": 5,
        "endLine": 140,
        "endChar": 34
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc8d1a05_e839543c",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 152,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-02-06T16:18:07Z",
      "side": 1,
      "message": "APIs exposed from libs should return thiserror Errors, not anyhow Errors. See go/android-rust-style, section \"Error handling\", for more info and rationale.",
      "range": {
        "startLine": 152,
        "startChar": 5,
        "endLine": 152,
        "endChar": 11
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72e64d91_ba6a444c",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 152,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-02-06T16:18:07Z",
      "side": 1,
      "message": "Why is there a PackageOffset in once instance, and a u16 here? Can you add a `type FlagOffset \u003d u16` and return FlagOffset?",
      "range": {
        "startLine": 152,
        "startChar": 19,
        "endLine": 152,
        "endChar": 22
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6acc34ab_f7284a45",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 152,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-02-06T21:27:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72e64d91_ba6a444c",
      "range": {
        "startLine": 152,
        "startChar": 19,
        "endLine": 152,
        "endChar": 22
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94017bec_bfa43f28",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 152,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-02-06T21:27:25Z",
      "side": 1,
      "message": "The change needed is pretty extensive, touching all mods as we probably would define custom error for each. I would prefer to make this change in a separate cl.",
      "parentUuid": "dc8d1a05_e839543c",
      "range": {
        "startLine": 152,
        "startChar": 5,
        "endLine": 152,
        "endChar": 11
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "762fd003_05f2da6b",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 152,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-02-07T13:49:29Z",
      "side": 1,
      "message": "Exposing thiserror results instead of anyhow results in the public API is an important change that needs to happen.\n\nMaybe I\u0027m missing something, but I thought this CL was the first CL to expose a public API from the module? If so, why not update this CL? Or are we already exposing anyhow results publicly? If so, will you be working on the anyhow -\u003e thiserror CL right after this one?",
      "parentUuid": "94017bec_bfa43f28",
      "range": {
        "startLine": 152,
        "startChar": 5,
        "endLine": 152,
        "endChar": 11
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7225991_acab5e17",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 10
      },
      "lineNbr": 152,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-02-07T14:13:49Z",
      "side": 1,
      "message": "No this api has not been exposed. It is purely from cl management perspective, the current cl is complex enough as it is. I would rather making another cl on top of this one. Yes, anyhow-\u003ethiserror cl would the immediate cl after this.",
      "parentUuid": "762fd003_05f2da6b",
      "range": {
        "startLine": 152,
        "startChar": 5,
        "endLine": 152,
        "endChar": 11
      },
      "revId": "31ae65d1ac2fe9417aa9729c7118dd3e7571bed2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}