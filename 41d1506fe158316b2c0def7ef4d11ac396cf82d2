{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "15501463_2a0da974",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-04T18:16:36Z",
      "side": 1,
      "message": "Presubmit seems to be happy as well.",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1f87dd9_04567907",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-05-04T18:56:30Z",
      "side": 1,
      "message": "I like the idea. I am just concerned that it does not fully support system server jars being in an APEX and so will cause issues if and when someone tries to do that.",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3900e76e_e8d1fbbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-04T19:06:55Z",
      "side": 1,
      "message": "Note that we already have system server jars in apexes. They go into PRODUCT_UPDATABLE_SYSTEM_SERVER_JARS and follow \u003capex\u003e:\u003cmodule\u003e format.\n\nAFAICT, there is no non-updatable apex with system server jar today.",
      "parentUuid": "d1f87dd9_04567907",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b76f230_cd8ed46d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-05-04T21:20:52Z",
      "side": 1,
      "message": "Ok. I didn\u0027t realise. In that case there seems to be little chance that PRODUCT_SYSTEM_SERVER_JARS will ever have a module that is from an apex.\n\nIn which case is there any point in complicating the make build having to deal with it. Why not simply do the work to map the list of modules to a ConfiguredJarList in Soong itself? e.g. You could make the logic to unmarshal JSON treat a list that looks like {\"module1\", \"module2\", \"module3\"} as if it was {\"platform:module1\", \"platform:module2\", \"platform:module3\"}.",
      "parentUuid": "3900e76e_e8d1fbbc",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d6ca237_395e61a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-05T09:24:52Z",
      "side": 1,
      "message": "It\u0027s still a non-zero chance, especially if partner apexes become a thing in some form.\n\nThis cl came along after a chat with Ulya. I could update the logic in UnmarshalJson(), but doesn\u0027t this bring consistency all around: boot jars have the same logic, the lists have similar formats both in make and soong?",
      "parentUuid": "2b76f230_cd8ed46d",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a527e98e_1189c3ff",
        "filename": "core/dex_preopt.mk",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-05-04T18:56:30Z",
      "side": 1,
      "message": "The path is probably wrong if this does have an apex.",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "856f0927_e0db8812",
        "filename": "core/dex_preopt.mk",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-04T19:06:55Z",
      "side": 1,
      "message": "Right... This would fail if there is a non-updatable system-server jar introduced in the future.\n\nThis line should look something like this I think?\n\n$(if $(findstring platform:,$(m)), \\\n  $(PRODUCT_OUT)/system/framework/$(call word-colon,2,$(m)).jar), \\\n  $(PRODUCT_OUT)/apex/$(call word-colon,1,$(m))/javalibs/$(call word-colon,2,$(m)).jar))\n\nDoes this look right?",
      "parentUuid": "a527e98e_1189c3ff",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e742a9fd_8219ea8a",
        "filename": "core/dex_preopt.mk",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-05-04T21:20:52Z",
      "side": 1,
      "message": "I\u0027m not sure.",
      "parentUuid": "856f0927_e0db8812",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6587f1b1_f445ef06",
        "filename": "core/dex_preopt.mk",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-05T09:24:52Z",
      "side": 1,
      "message": "The path format is right (that\u0027s what Soong does for DevicePaths logic as well). I just never used make before, and not sure if the syntax is correct.\n\nShould there be anyone else on R\u003d beside you and Ulya?",
      "parentUuid": "e742a9fd_8219ea8a",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a614112a_c09513f2",
        "filename": "core/dex_preopt.mk",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2021-05-05T10:34:27Z",
      "side": 1,
      "message": "Anton is the Android renown makefile expert in London. ðŸ˜„\n\nThis is still not right though, it would do the wrong thing for system_ext. The correct makefile code that used to do this was https://android-review.googlesource.com/c/platform/build/+/1478737/2/core/tasks/boot_jars_package_check.mk (now Paul has moved it to Soong).\n\nI don\u0027t like the idea of re-introducing that code... it better be done from Soong, analogous to DEXPREOPT_SYSTEM_SERVER_DEX_FILES on line 64.\n\nBut then there is also a place in Soong that assumes /system/framework and needs to be fixed: https://source.corp.google.com/aosp-master/build/soong/dexpreopt/dexpreopt.go;l\u003d250. And all the paths need to be gathered by a new SingletonModule with MakeVars(), because currently there is no good place to stick it into.\n\nAll in all this is too much work for this CL, so I suggest supporting only /system/framework for now, and marking this place and the one in Soong that I linked above with a:\n\n  TODO(b/155630745): support jars in /apex, /system_ext, etc.",
      "parentUuid": "6587f1b1_f445ef06",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fc89f89_e28ae5fc",
        "filename": "core/dex_preopt.mk",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-05T11:18:15Z",
      "side": 1,
      "message": "I imagine supporting /system_ext would require more changes than these two TODOs would imply. I\u0027d rather not add them for now if you don\u0027t mind.",
      "parentUuid": "a614112a_c09513f2",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "906566f6_a8b00b77",
        "filename": "core/dex_preopt.mk",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2021-05-05T12:25:22Z",
      "side": 1,
      "message": "Ok, if that\u0027s too much work then feel free to leave it as is.\n\n(In this case I think that a TODO is helpful, especially since the other place in Soong is not immediately obvious. You could mention on b/155630745 that the work is half-done for this bug --- there isn\u0027t much to do on the build system size besides what I mentioned).\n\nIn any case, please remove the /apex part (go back to PS4), as it\u0027s not supported in Soong as well as /system_ext.",
      "parentUuid": "9fc89f89_e28ae5fc",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc1b320c_0a06aa4e",
        "filename": "core/dex_preopt.mk",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-05T13:26:20Z",
      "side": 1,
      "message": "Dropped /apex part.\n\nIt\u0027s not too much work, I just wanted to keep changes to the minimum in the CL: just adding platform: where needed.\n\n(If you really want the TODOs, I am happy to add them! :-))",
      "parentUuid": "906566f6_a8b00b77",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c58937f_22d587d4",
        "filename": "core/dex_preopt_odex_install.mk",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-05-04T18:56:30Z",
      "side": 1,
      "message": "Could this use the full \u003capex\u003e:\u003cmodule\u003e pair and filter it based on another list of \u003capex\u003e:\u003cmodule\u003e pairs?",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "220abea6_fd772bee",
        "filename": "core/dex_preopt_odex_install.mk",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-04T19:06:55Z",
      "side": 1,
      "message": "Sorry, I am not sure I follow you here. Can you elaborate more please? :-)",
      "parentUuid": "7c58937f_22d587d4",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df59a3f7_0a985c2a",
        "filename": "core/dex_preopt_odex_install.mk",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2021-05-04T21:20:52Z",
      "side": 1,
      "message": "My concern was that you are dropping the apex which means you could end up filtering things out that you shouldn\u0027t. I\u0027m not sure it will be a problem in practice though.",
      "parentUuid": "220abea6_fd772bee",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98f8c19f_04a80875",
        "filename": "core/dex_preopt_odex_install.mk",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-05T09:24:52Z",
      "side": 1,
      "message": "Right.. Doesn\u0027t LOCAL_MODULE omit variant and just contains a module name?\n\nI could also just drop \"platform:\" from $(PRODUCT_SYSTEM_SERVER_JARS), I just don\u0027t know what this really needs.",
      "parentUuid": "df59a3f7_0a985c2a",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "365313e3_b2e68a37",
        "filename": "core/dex_preopt_odex_install.mk",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2021-05-05T10:34:27Z",
      "side": 1,
      "message": "What Paul suggests would be a nice simplification now that configured jar lists are used everywhere, but I think it should be done as a follow up, and also cover boot jars which use similar filters in the makefiles. For now I\u0027d add a TODO.",
      "parentUuid": "98f8c19f_04a80875",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8097f56a_2ae18930",
        "filename": "core/dex_preopt_odex_install.mk",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-05-05T11:18:15Z",
      "side": 1,
      "message": "Note sure what even to put in that todo, could you rather file a bug to remember changing this?",
      "parentUuid": "365313e3_b2e68a37",
      "revId": "41d1506fe158316b2c0def7ef4d11ac396cf82d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}