{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1705711a_8a0f87ec",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-09-05T17:29:35Z",
      "side": 1,
      "message": "Could you implement this in soong? Jiyong added required deps tracking to soong in aosp/3000612 but I guess it still ignores missing variations.",
      "revId": "bf6920382003e1f842d341225d0023c41ef6a326",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e7cdbd5_f44ae569",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-09-05T17:38:11Z",
      "side": 1,
      "message": "If it\u0027s implemented in Soong, it would only work for all modules, but Soong exports these dependencies here, and this will work for all modules, including modules that are still in make. So, I\u0027d like to keep it here.\n\n(also I originally implemented this in 2018, and this is rebasing/slightly improving http://r.android.com/615759. I am not going to be able to do it another way at this time. I also am not sure how to fix the APEX vendor dependencies, which should be done before this is merged.)",
      "parentUuid": "1705711a_8a0f87ec",
      "revId": "bf6920382003e1f842d341225d0023c41ef6a326",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57b77368_3663334b",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-09-06T02:33:03Z",
      "side": 1,
      "message": "See [1] where the check is skipped. \n\n[1] https://cs.android.com/android/platform/superproject/main/+/main:build/soong/android/module.go;drc\u003da136147c9c0b27cc1508fcb80fd19accbe7b0121;l\u003d526",
      "parentUuid": "9e7cdbd5_f44ae569",
      "revId": "bf6920382003e1f842d341225d0023c41ef6a326",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07c41bfc_468f333e",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 558,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-09-05T17:35:57Z",
      "side": 1,
      "message": "We can\u0027t really just spew warnings every time analysis is run, we need to fix these issues for real and make it an error. Or put the warnings behind a flag.",
      "revId": "bf6920382003e1f842d341225d0023c41ef6a326",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fa0d09d_1cd9093f",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 558,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-09-05T17:39:23Z",
      "side": 1,
      "message": "we can re-use the PRODUCT_PACKAGES flag to hide them, but after APEX is fixed there are not so many. It\u0027s better to expose this on many targets I think",
      "parentUuid": "07c41bfc_468f333e",
      "revId": "bf6920382003e1f842d341225d0023c41ef6a326",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6367b27_8d459c0f",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 558,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-09-05T18:26:21Z",
      "side": 1,
      "message": "You can write these messages to a file you can check, but outputting messages that are irrelevant to 99% of people is a no-go. We don\u0027t want people to learn to ignore warnings from the build any more than they already do.",
      "parentUuid": "2fa0d09d_1cd9093f",
      "revId": "bf6920382003e1f842d341225d0023c41ef6a326",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ba8389d_1e31e765",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 558,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-09-05T18:33:22Z",
      "side": 1,
      "message": "Well, if you really think this, solve b/242589449. ðŸ˜Š\n\nOf course the goal is to get rid of these logs, but if we fix most cases, I think exposing the warning log is good. It can\u0027t be made an error due to so many different lunch targets. It has to be scoped down.\n\nAnyway, the reason I\u0027m adding this is because someone told me they made a typo that\u0027s hard to debug here. It happens, and it can be frustrating. So, I think you\u0027re wrong, it\u0027s not 99% of people - it\u0027s anyone that makes a typo here. Making these cases easier to debug is helpful. Though, I generally agree this needs to be scoped down or some cases made an error before it can be submitted.",
      "parentUuid": "b6367b27_8d459c0f",
      "revId": "bf6920382003e1f842d341225d0023c41ef6a326",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e43e7f5_e88d99ba",
        "filename": "core/main.mk",
        "patchSetId": 1
      },
      "lineNbr": 558,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-09-06T02:33:03Z",
      "side": 1,
      "message": "Yeah, let\u0027s not emit warning which nobody cares. Instead, let\u0027s work on making this a hard error.\n\nA typical approach here has been that we enforce something but we an escape hatch (ex: BUILD_BROKEN_XXX) so that downstreams can buy some time, until we eventually kill the escape path.",
      "parentUuid": "4ba8389d_1e31e765",
      "revId": "bf6920382003e1f842d341225d0023c41ef6a326",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}