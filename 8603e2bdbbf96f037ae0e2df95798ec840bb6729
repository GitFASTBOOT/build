{
  "comments": [
    {
      "key": {
        "uuid": "548686a6_1412978e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2018-01-18T17:27:37Z",
      "side": 1,
      "message": "So, module can compile against @hide APIs in core-oj an core-libart - isn\u0027t it then a problem if a java:sdk module links against a java:core module ? (it would have been nice if we had public API stubs only for core-oj / core-libart but we don\u0027t yet)",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 31
      },
      "revId": "8603e2bdbbf96f037ae0e2df95798ec840bb6729",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b67065af_064a7397",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-01-19T01:25:54Z",
      "side": 1,
      "message": "In case of A(java:sdk) -\u003e B(java:core), this is safe if -\u003e is LOCAL_JAVA_LIBRARIES, but not safe if it is LOCAL_STATIC_JAVA_LIBRARIES. However, current link-type check does not distinguish them, which I would like to amend after these are all cleaned up.",
      "parentUuid": "548686a6_1412978e",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 31
      },
      "revId": "8603e2bdbbf96f037ae0e2df95798ec840bb6729",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0fa399_14df0d5b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2018-01-19T04:42:38Z",
      "side": 1,
      "message": "No it isn\u0027t -- Narayan is right. core-* contain @hide entries that won\u0027t be part of the stable sdk surface.\n\nTo model this correctly, we\u0027d need to have a core-* stubs file",
      "parentUuid": "b67065af_064a7397",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 31
      },
      "revId": "8603e2bdbbf96f037ae0e2df95798ec840bb6729",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30ff2c62_b26df56c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-01-19T07:23:28Z",
      "side": 1,
      "message": "No. As we talked on the chat... let\u0027s consider this case.\n\n/vendor/app/Awesome.apk(java:sdk) ---(dynamic)---\u003e /system/framework/foo.jar(java:core)\n                                      ^^^^^^^\n\nfoo.jar can use @hide APIs from core-oj and core-libart. However, that does not break the app even when the @hide APIs are altered or removed. It\u0027s still hidden inside foo.jar which should be updated along with the hide APIs. As long as API of foo.jar is stable, the app is okay.\n\n/vendor/app/Awesome.apk(java:sdk) ---(static)---\u003e foo.jar(java:core)\n                                      ^^^^^^\n\nHowever, in static linking case, this makes the app be dependent on the @hide APIs as foo.jar is embedded into the app. This should be prevented but we temporarily have to allow this until we can distinguish dynamic and static linkages in link_type check.\n\nAnother case that you may have concern is\n\n/vendor/app/Awesome.apk(java:sdk) ---(dynamic)---\u003e /vendor/framework/bar.jar(java:core)\n                                                    ^^^^^^\n\nHowever, this case cannot happen since we force bar.jar to be built with LOCAL_SDK_VERSION set; build system ensures that vendor jar/apks to have LOCAL_SDK_VERSION.",
      "parentUuid": "1f0fa399_14df0d5b",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 31
      },
      "revId": "8603e2bdbbf96f037ae0e2df95798ec840bb6729",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52053646_4286291b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2018-01-19T10:14:39Z",
      "side": 1,
      "message": "Well, as things stand it\u0027s still not safe in the STATIC libraries case (which was my main concern).\n\nIf this is temporary, it should clearly be spelled out in the commit message (with a bug to track future work to disallow this). Please also update the commit message to spell out why it\u0027s safe (basically the same thing you\u0027ve said in the comment here).",
      "parentUuid": "30ff2c62_b26df56c",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 31
      },
      "revId": "8603e2bdbbf96f037ae0e2df95798ec840bb6729",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}