{
  "comments": [
    {
      "key": {
        "uuid": "e10e8596_4dd7e53d",
        "filename": "core/Makefile",
        "patchSetId": 4
      },
      "lineNbr": 5192,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-04-03T12:48:46Z",
      "side": 1,
      "message": "Why do we need to have something qemu specific here?",
      "range": {
        "startLine": 5179,
        "startChar": 0,
        "endLine": 5192,
        "endChar": 0
      },
      "revId": "a88893c0cb9c41a4510d7a4445716d91ed7a02ac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab4fdf31_11f514d5",
        "filename": "core/Makefile",
        "patchSetId": 4
      },
      "lineNbr": 5192,
      "author": {
        "id": 1046320
      },
      "writtenOn": "2020-04-03T16:20:52Z",
      "side": 1,
      "message": "Anton,\n  This is for emulator only (qemu/goldfish); since both the \nramdisk.img and the vendor_boot.img will be created, the emulator will\nuse ramdisk.img when ramdisk-qemu.img is missing, and won\u0027t be able to\nboot since the ramdisk.img does not have goldfish ko modules anymore.\n  creating a ramdisk-qemu.img that is a simple combination of ramdisk.img\nand vendor_boot.img will direct emulator to use ramdisk-qemu.img instead.\n   ramdisk-qemu.img is also packaged to sdk-repo-linux-system-images.zip\nto distribute to studio. as in go/ag/10906271",
      "parentUuid": "e10e8596_4dd7e53d",
      "range": {
        "startLine": 5179,
        "startChar": 0,
        "endLine": 5192,
        "endChar": 0
      },
      "revId": "a88893c0cb9c41a4510d7a4445716d91ed7a02ac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57df5616_e00a917f",
        "filename": "core/Makefile",
        "patchSetId": 4
      },
      "lineNbr": 5192,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-04-06T11:50:56Z",
      "side": 1,
      "message": "but why don\u0027t we make ramdisk.img contain the right data on qemu builds, rather than come up with a separate filename? That\u0027s what I mean by qemu-specific, it just seems like if there are devices than need ramdisk.img and vendor_boot.img merged, the build system should support that without having to mention QEMU.",
      "parentUuid": "ab4fdf31_11f514d5",
      "range": {
        "startLine": 5179,
        "startChar": 0,
        "endLine": 5192,
        "endChar": 0
      },
      "revId": "a88893c0cb9c41a4510d7a4445716d91ed7a02ac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46da2034_629d0aa3",
        "filename": "core/Makefile",
        "patchSetId": 4
      },
      "lineNbr": 5192,
      "author": {
        "id": 1046320
      },
      "writtenOn": "2020-04-06T13:45:26Z",
      "side": 1,
      "message": "Anton,\n  I don\u0027t know much about other devices, they might handle this situation differently.\nso far, emulator is the only one that has this special need: distributing two files\n(ramdisk.img and vendor_boot.img) will cause unnecessary confusion without any real\nbenefit to app developers and their test tool chains.",
      "parentUuid": "57df5616_e00a917f",
      "range": {
        "startLine": 5179,
        "startChar": 0,
        "endLine": 5192,
        "endChar": 0
      },
      "revId": "a88893c0cb9c41a4510d7a4445716d91ed7a02ac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74f07997_5c556a89",
        "filename": "core/Makefile",
        "patchSetId": 4
      },
      "lineNbr": 5192,
      "author": {
        "id": 1046320
      },
      "writtenOn": "2020-04-06T15:32:24Z",
      "side": 1,
      "message": "Anton,\n   if we don\u0027t enable the VENDOR_BOOT flag, the ramdisk.img actually has everything\n:init(and its config), and vendor ko modules.\n   with VENDOR_BOOT flag on, the ramdisk.img will have only init binary(and its config);\nand vendor_boot.img will have vendor ko and vendor dtb.img; for the case of emulator,\nthere is no dtb.img; so it makes sense for us to have ramdisk-qemu.img for distribution\npurpose. we could distribute both ramdisk.img and vendor_boot.img, but that will cause\nconfusion for no obvious gain to app devs. the purpose of using ramdisk-qemu.img here\nis to conform to the  VENDOR_BOOT requirement but also reduce confusion.",
      "parentUuid": "46da2034_629d0aa3",
      "range": {
        "startLine": 5179,
        "startChar": 0,
        "endLine": 5192,
        "endChar": 0
      },
      "revId": "a88893c0cb9c41a4510d7a4445716d91ed7a02ac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}