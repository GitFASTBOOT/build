{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af6497c8_772e0764",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-21T23:15:12Z",
      "side": 1,
      "message": "Thanks Jaewoong! PTAL",
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f373469c_077d1cd3",
        "filename": "core/definitions.mk",
        "patchSetId": 20
      },
      "lineNbr": 542,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-12-22T16:24:55Z",
      "side": 1,
      "message": "$(ALL_MODULES) is sorted here:\nhttps://cs.android.com/android/platform/superproject/+/master:build/make/core/main.mk;l\u003d553;drc\u003de47d6e4a8c89cae336c60db35b27d08380d77179",
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed4a5291_17547976",
        "filename": "core/definitions.mk",
        "patchSetId": 20
      },
      "lineNbr": 542,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-22T19:01:31Z",
      "side": 1,
      "message": "Ack\n\nThat happens prior to\n\nhttps://cs.android.com/android/platform/superproject/+/master:build/make/core/main.mk;l\u003d1402;drc\u003de47d6e4a8c89cae336c60db35b27d08380d77179\n\nwhich adds to ALL_MODULES",
      "parentUuid": "f373469c_077d1cd3",
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d2d1b61_e309ec54",
        "filename": "core/definitions.mk",
        "patchSetId": 20
      },
      "lineNbr": 558,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-12-22T16:24:55Z",
      "side": 1,
      "message": "If you only need to fix ALL_MODULES.$(m).NOTICE_DEPS references, why do you add ALL_MODULES to the lookup table keys, _all_module_refs?",
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf353804_dde277d1",
        "filename": "core/definitions.mk",
        "patchSetId": 20
      },
      "lineNbr": 558,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-22T19:01:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d2d1b61_e309ec54",
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d7f3a73_fc0a2975",
        "filename": "core/notice_files.mk",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-12-22T16:24:55Z",
      "side": 1,
      "message": "This could be simplified to:\n\nis_container :\u003d $(strip $(LOCAL_MODULE_IS_CONTAINER))\nifeq (,$(is_container))",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 4
      },
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c25e374c_976b4d20",
        "filename": "core/notice_files.mk",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-22T19:01:31Z",
      "side": 1,
      "message": "Ack\n\nThat would change the behavior in the case that LOCAL_MODULE_IS_CONTAINER is neither true nor false nor empty.",
      "parentUuid": "4d7f3a73_fc0a2975",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 4
      },
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "142c94f7_a09d494b",
        "filename": "core/notice_files.mk",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 1060667
      },
      "writtenOn": "2020-12-23T15:16:43Z",
      "side": 1,
      "message": "Wouldn\u0027t you want to know if it ever happens, though? You can add a simple filter check on is_container to verify it.\n\nThe current code will silently ignore it too, and so isn\u0027t any better, but if you want the same behavior you can replace the 2nd line in my example to this:\nifeq (,$(filter true false,$(is_container)))",
      "parentUuid": "c25e374c_976b4d20",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 4
      },
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40b0c927_9143a8c8",
        "filename": "core/notice_files.mk",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T19:08:11Z",
      "side": 1,
      "message": "They way I look at it is: The normal and expected behavior is the build system determines whether the output is a container type based on the file extension. If someone wants to do something really extraordinary and override that, I am okay with them having to do it exactly right.\n\nIf I were to change the code as you propose, we would have to add an else clause with a $(error...). If you have a strong preference for adding the error, I can make the change.",
      "parentUuid": "142c94f7_a09d494b",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 4
      },
      "revId": "8aee18f5f3bfe0d7fa24254ea357ffeb05ad38df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}