{
  "comments": [
    {
      "key": {
        "uuid": "30ca486f_9d2a248f",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "in_any_range, and should just be a global func",
      "range": {
        "startLine": 69,
        "startChar": 8,
        "endLine": 69,
        "endChar": 16
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_918a0b6c",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-18T04:40:54Z",
      "side": 1,
      "message": "Utils grows in functionality and Id rather have it bound to class. I just don\u0027t like arbitrary static globals. Unless you can point to a Google style guide for python that says no, id prefer to leave it.",
      "parentUuid": "30ca486f_9d2a248f",
      "range": {
        "startLine": 69,
        "startChar": 8,
        "endLine": 69,
        "endChar": 16
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b010f8cf_0c620552",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-21T23:24:59Z",
      "side": 1,
      "message": "Interestingly the internal version of our style guide (annoyingly differs in a few places) says no, but the public one doesn\u0027t mind. There really isn\u0027t a consistent Python style in Android, but I think we can safely ignore the one that only Googlers can see :)\n\nThis is fine, it just looked a little odd since there\u0027s only a single method in it right now.",
      "parentUuid": "30ca486f_918a0b6c",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_7d7388c6",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "for lineno, line in enumerate(aid_file):",
      "range": {
        "startLine": 201,
        "startChar": 8,
        "endLine": 201,
        "endChar": 28
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_117efb83",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-18T04:40:54Z",
      "side": 1,
      "message": "neato",
      "parentUuid": "30ca486f_7d7388c6",
      "range": {
        "startLine": 201,
        "startChar": 8,
        "endLine": 201,
        "endChar": 28
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_9d1ce453",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "Should this ever be caught? Might make more sense to just sys.exit here (it\u0027s an expected form of failure).\n\nSame comment goes for the rest of these",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_d1d2c363",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-18T04:40:54Z",
      "side": 1,
      "message": "sys.exit just raises the SystemExit exception. I could really care less, but other cases in other patches that detect duplicate aid collisions also should then change.\n\nIf it really matters, ill change it.",
      "parentUuid": "30ca486f_9d1ce453",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b010f8cf_ec91f1e2",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-21T23:24:59Z",
      "side": 1,
      "message": "It does, but there\u0027s a default handler that catches SystemExit and simply prints the message rather than the stack trace (just a UX difference). Sounds like this is intended to be caught though, so LGTM.",
      "parentUuid": "30ca486f_d1d2c363",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_5df96cce",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "oops",
      "range": {
        "startLine": 317,
        "startChar": 37,
        "endLine": 317,
        "endChar": 47
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_3d48302e",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "You\u0027re checking each pair twice.\n\n    for i, range1 in enumerate(self._oem_ranges):\n        for range2 in self._oem_ranges[i + 1:]:\n\nAnd then you can drop the `range1 \u003d\u003d range2` check too.",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_f1cfbfb8",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-18T04:40:54Z",
      "side": 1,
      "message": "nice",
      "parentUuid": "30ca486f_3d48302e",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_3dde702e",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "_oem_ranges?",
      "range": {
        "startLine": 331,
        "startChar": 35,
        "endLine": 331,
        "endChar": 41
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_f1b6df22",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-18T04:40:54Z",
      "side": 1,
      "message": "yeah all the ranges...",
      "parentUuid": "30ca486f_3dde702e",
      "range": {
        "startLine": 331,
        "startChar": 35,
        "endLine": 331,
        "endChar": 41
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_7dd8e83e",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 340,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "Property?",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_31b13729",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 340,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-18T04:40:54Z",
      "side": 1,
      "message": "It doesn\u0027t provide much here...\n\nx.oem_ranges \u003c-- someone will try and mutate that and get an error.\n\nvs\n\nx.get_oem_ranges() \u003c-- this is a clearly not mutable\n\nI prefer explicit get/sets.",
      "parentUuid": "30ca486f_7dd8e83e",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_40925f39",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "Here ranges are [a, b), but in `in_any_range` they\u0027re [a, b].\n\n    \u003e\u003e\u003e _get_overlap((0, 1), (1, 2))\n    0\n\nThis is a trivially unit tested function. Could you add some?",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_110b5b06",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-18T04:40:54Z",
      "side": 1,
      "message": "Im not following what your saying about here vs in_any_range.\n\nFor unit tests, sure, I can add a commandlet called test that will fire up a unit test class. Ill do that in a different patch.",
      "parentUuid": "30ca486f_40925f39",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b010f8cf_6c13c17f",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-21T23:24:59Z",
      "side": 1,
      "message": "These? https://en.wikipedia.org/wiki/Interval_(mathematics)#Notations_for_intervals\n\nCould you add a comment explaining if these intervals are open or closed? I suspect I\u0027ll find out when I get to the test CL, but a comment would certainly help clarify.",
      "parentUuid": "30ca486f_110b5b06",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0297f6_8e00bdb5",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-28T19:53:32Z",
      "side": 1,
      "message": "Oh yeah I see how this is confusing, its a closed interval but in a python tuple.",
      "parentUuid": "b010f8cf_6c13c17f",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_20b483b0",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-11-18T00:13:44Z",
      "side": 1,
      "message": "in_any_range?",
      "range": {
        "startLine": 536,
        "startChar": 15,
        "endLine": 537,
        "endChar": 58
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_51f4f3d7",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-18T04:40:54Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "30ca486f_20b483b0",
      "range": {
        "startLine": 536,
        "startChar": 15,
        "endLine": 537,
        "endChar": 58
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_f0c0a0e9",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 827,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-11-17T22:12:35Z",
      "side": 1,
      "message": "let\u0027s call this --aid-header --- no reason to abbreviate here.",
      "range": {
        "startLine": 827,
        "startChar": 34,
        "endLine": 827,
        "endChar": 40
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_ab64f93a",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 827,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-17T22:51:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30ca486f_f0c0a0e9",
      "range": {
        "startLine": 827,
        "startChar": 34,
        "endLine": 827,
        "endChar": 40
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_10befc62",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 830,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-11-17T22:12:35Z",
      "side": 1,
      "message": "missing space?",
      "range": {
        "startLine": 829,
        "startChar": 72,
        "endLine": 830,
        "endChar": 32
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_8b801d94",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 830,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-17T22:51:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30ca486f_10befc62",
      "range": {
        "startLine": 829,
        "startChar": 72,
        "endLine": 830,
        "endChar": 32
      },
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_70c490f8",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 834,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-11-17T22:12:35Z",
      "side": 1,
      "message": "why does it say required\u003dTrue above, but seems to be optional here?",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ca486f_70a650a6",
        "filename": "tools/fs_config/fs_config_generator.py",
        "patchSetId": 3
      },
      "lineNbr": 834,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-11-17T22:51:26Z",
      "side": 1,
      "message": "It was originally optional, but subsequent revisions it went to required. Since we really want to endorce the oem aid ranges.\n\nI\u0027m just going to make this required now and drop the check below. Nice catch, thanks.",
      "parentUuid": "30ca486f_70c490f8",
      "revId": "0964f9294cb34cf9ea1725b317434db6ce8afc33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}