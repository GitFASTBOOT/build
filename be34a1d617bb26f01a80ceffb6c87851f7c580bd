{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0c879c3b_2b0e1fc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-15T23:55:06Z",
      "side": 1,
      "message": "PTAL",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17abd9f1_34d11758",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 11
      },
      "lineNbr": 30,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-17T23:48:35Z",
      "side": 1,
      "message": "const?",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "314469d0_65073101",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 11
      },
      "lineNbr": 30,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T03:48:41Z",
      "side": 1,
      "message": "Ack\n\nThat\u0027s a var so that it is possible to override from the binary using a flag if needed.",
      "parentUuid": "17abd9f1_34d11758",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e32d3452_53b9c979",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-17T23:48:35Z",
      "side": 1,
      "message": "5 is pretty low, is something like 200 any faster?",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8806b338_511c70ea",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T03:48:41Z",
      "side": 1,
      "message": "Ack\n\nIf it ever becomes a performance issue, we can add a flag to the binary and measure empirically.",
      "parentUuid": "e32d3452_53b9c979",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13602e9c_b7d09907",
        "filename": "tools/compliance/testfs/testfs.go",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-17T23:48:35Z",
      "side": 1,
      "message": "I think this already exists in in the stdlib as `testing.MapFS`.",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc212884_81ca388a",
        "filename": "tools/compliance/testfs/testfs.go",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T03:48:41Z",
      "side": 1,
      "message": "Open and ReadAll don\u0027t seem to work with fstest.MapFS or more specifically with fstest.MapFile.",
      "parentUuid": "13602e9c_b7d09907",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40e0257f_a5ff124d",
        "filename": "tools/compliance/testfs/testfs.go",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-18T05:21:53Z",
      "side": 1,
      "message": "What do you mean \"don\u0027t seem to work\"?  That seems like it would defeat the point of `fstest.MapFS`.  It claims to support `Open`: https://pkg.go.dev/testing/fstest#MapFS.Open",
      "parentUuid": "cc212884_81ca388a",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1407bd08_3fb1c7c4",
        "filename": "tools/compliance/testfs/testfs.go",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T15:29:09Z",
      "side": 1,
      "message": "I mean I went to all the trouble of deleting this and replacing TestFS with fstest.MapFS. It was no trivial matter. I had to change all of my test data from []byte(...) to something that used a named initializer to put the content in a Data member plus initialize the test ModTime. Even putting that inside a small function, it nevertheless changed the structure of the test data initializers.\n\nAfter I did so, all of my tests failed because Open + ReadAll invariably resulted in empty results instead of the configured test data.\n\nIf you look below, you may note that TestFile keeps track of how much has been read allowing for multiple calls to Read each grabbing only part of the content. If you look at the definition of fstest.MapFile, you may note it has no similar member.\n\nI don\u0027t know how Read is implemented for fstest.MapFile, and I didn\u0027t have the time to try to investigate it further. Instead, I reverted those changes and continued with TestFS, which has been working just fine for at least a year.",
      "parentUuid": "40e0257f_a5ff124d",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c42d5c3_f451b007",
        "filename": "tools/compliance/testfs/testfs.go",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-18T16:45:30Z",
      "side": 1,
      "message": "Ack.  I didn\u0027t notice this is just moving the code, so fine to leave as is for now.\n\nopenedMapFile has an offset that should support multiple reads, and not supporting Open and ReadAll would make the whole thing pretty useless, so there\u0027s probably a way to make it work.  Can you upload the MapFS changes to projectmetadata_test.go as a separate CL and I can take a look some time?",
      "parentUuid": "1407bd08_3fb1c7c4",
      "revId": "be34a1d617bb26f01a80ceffb6c87851f7c580bd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}