{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2461f2bd_73a86f90",
        "filename": "target/product/media_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-02-19T16:04:14Z",
      "side": 1,
      "message": "We try to avoid this for the most part, if we can make the jar adhere to an interface SS already knows about we don\u0027t need the art service jar on the system server classpath. Worth considering",
      "revId": "a9943d264c5674ff75f8b85793ec0c97ab6f8e5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d20e2a93_22823c83",
        "filename": "target/product/media_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2021-02-19T21:56:50Z",
      "side": 1,
      "message": "Is the alternative you are proposing here having\n\n1) a non-updatable interface in system server like\n\ninterface ArtServiceInterface {\n  foo();\n  bar();\n}\n\n2) an updatable implementation of that interface in the art module that will be instantiated via reflection, similar to what startServiceFromJar eventually do.\n\nclass ArtServiceImplementation {\n}\n\n\nversus having the implementation called directly?\n\n\n(note that there\u0027s no existing single interface that will encompass all the functionality, so either way we do need to create some)",
      "parentUuid": "2461f2bd_73a86f90",
      "revId": "a9943d264c5674ff75f8b85793ec0c97ab6f8e5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1e74952_0a283df1",
        "filename": "target/product/media_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-02-22T17:00:56Z",
      "side": 1,
      "message": "yes, that\u0027s what I meant, however if there is no existing interface that works I retract the comment. Generally speaking we should be using existing interfaces that work, and if they don\u0027t we should create generic interfaces that do work. ArtServiceInterface isn\u0027t really generic in that way (but there is noone working on generic interfaces either, so I suspect we\u0027ll end up with a specific one either way).\n\nWhether the interface is defined in the core or in art depends on which way the dep makes sense. Generally speaking we want the modules to depend on the core (and the interfaces to be defined there), but it seems like art team wants the dependency the other way around for the art module.",
      "parentUuid": "d20e2a93_22823c83",
      "revId": "a9943d264c5674ff75f8b85793ec0c97ab6f8e5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7e9c5ac_b0d1bed3",
        "filename": "target/product/media_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2021-02-22T20:56:24Z",
      "side": 1,
      "message": "re interface: yep, we don\u0027t have an existing generic interface right now. The existing API is spaghetti right now with various PM/installd components calling ART-functionality in different places. Part of this effort is to detangle the existing spaghetti. \n\nI think we should have the interface none the less in the code, which makes the loading part of the implementation an \"implementation\" detail (i.e. be in on server classpath or reflected from the module). I have a slight preference towards reflecting from the module as it seems to align better with the existing work of the other modules.\n\n\nre dependency: yea, from a stack perspective, ART sits below framework and having a pure framework depends on ART would have been ideal. However, I gave up in maintaining that clear separation (especially since we do need binder...).",
      "parentUuid": "f1e74952_0a283df1",
      "revId": "a9943d264c5674ff75f8b85793ec0c97ab6f8e5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2da37c0c_e46d37c2",
        "filename": "target/product/media_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1047255
      },
      "writtenOn": "2021-02-22T23:16:48Z",
      "side": 1,
      "message": "Thanks for your input Anton.  I think for the moment we will proceed with the current design, and can switch to dynamic loading of the artservice.jar file if it becomes necessary in the future.",
      "parentUuid": "a7e9c5ac_b0d1bed3",
      "revId": "a9943d264c5674ff75f8b85793ec0c97ab6f8e5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0968128c_f770bfaf",
        "filename": "target/product/media_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2021-03-01T20:03:59Z",
      "side": 1,
      "message": "I just realized that this is media_system.mk and the header say:\n\n# This makefile contains the system partition contents for\n# media-capable devices (non-wearables). Only add something\n# here if it definitely doesn\u0027t belong on wearables. Otherwise,\n# choose base_system.mk\n\nIt looks likes we should be adding this in base_system.mk",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 33
      },
      "revId": "a9943d264c5674ff75f8b85793ec0c97ab6f8e5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d989e2a7_d2a9aaf1",
        "filename": "target/product/media_system.mk",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-03-02T08:26:38Z",
      "side": 1,
      "message": "That comment doesn\u0027t really apply to the system server classpath. This is the right location (or we should move all of them in a separate CL)",
      "parentUuid": "0968128c_f770bfaf",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 33
      },
      "revId": "a9943d264c5674ff75f8b85793ec0c97ab6f8e5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}