{
  "comments": [
    {
      "key": {
        "uuid": "f548492a_593d8dd3",
        "filename": "target/product/base_system.mk",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-11-28T13:14:03Z",
      "side": 1,
      "message": "Wouldn\u0027t consistency with PRODUCT_BOOT_JARS be that we drop the apex name in that list?\n\nI guess we\u0027re ending up using two information from that list: the location, and the library name. Can we not infer the location from the library name?",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 331,
        "endChar": 37
      },
      "revId": "626f6371dc267f65a46a724d90fef7c2fa488a8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9094318f_a81254cf",
        "filename": "target/product/base_system.mk",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2019-11-28T14:43:29Z",
      "side": 1,
      "message": "I think for a given \"module\" in Soong it would amount to finding a module of type ApexBundle that has \"module\" in its properties.Java_libs. Supposing that module\u0027s name is \"name\", then the location will be \"/apex/module-name/javalib/module.jar\". It would be necessary to traverse all modules at least once and check that each library-apex combination is unique. So the inference can be done in Soong, but it\u0027s neither simple nor reliable.\n\nIn Make I\u0027m not sure how this inference would work (and I\u0027m not sure it\u0027s needed anyway).",
      "parentUuid": "f548492a_593d8dd3",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 331,
        "endChar": 37
      },
      "revId": "626f6371dc267f65a46a724d90fef7c2fa488a8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc2174da_f24e19b0",
        "filename": "target/product/base_system.mk",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-11-28T14:45:25Z",
      "side": 1,
      "message": "(the argument was to make it consistent with PRODUCT_UPDATABLE_SYSTEM_SERVER_JARS, not PRODUCT_BOOT_JARS) :)",
      "parentUuid": "f548492a_593d8dd3",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 331,
        "endChar": 37
      },
      "revId": "626f6371dc267f65a46a724d90fef7c2fa488a8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4616fa63_795b197e",
        "filename": "target/product/base_system.mk",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-11-28T14:52:00Z",
      "side": 1,
      "message": "@Ulyana: thanks!\n@Anton: I know :)",
      "parentUuid": "dc2174da_f24e19b0",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 331,
        "endChar": 37
      },
      "revId": "626f6371dc267f65a46a724d90fef7c2fa488a8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}