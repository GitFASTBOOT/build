{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "be8f9a1e_18d7d1b7",
        "filename": "tools/aconfig/src/protos.rs",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2023-07-26T12:31:22Z",
      "side": 1,
      "message": "I think we should be enforcing this is exactly one as we want to make sure each flag is tracked by a bug.",
      "range": {
        "startLine": 95,
        "startChar": 30,
        "endLine": 95,
        "endChar": 34
      },
      "revId": "d40686b97f574002037dc0fad88df21d64c93f32",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c62a909_823eeb29",
        "filename": "tools/aconfig/src/protos.rs",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-26T12:45:07Z",
      "side": 1,
      "message": "Will that cause issues if aconfig is used by OEMs? This feels like a step towards requiring that the value is \"b/\u003cint\u003e\".\n\nOTOH, we can enforce that the field exists exactly once, but ignore the contents (so \"\" as a dummy value is acceptable).",
      "parentUuid": "be8f9a1e_18d7d1b7",
      "range": {
        "startLine": 95,
        "startChar": 30,
        "endLine": 95,
        "endChar": 34
      },
      "revId": "d40686b97f574002037dc0fad88df21d64c93f32",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de40c502_4a4f73d9",
        "filename": "tools/aconfig/src/protos.rs",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2023-07-26T13:51:19Z",
      "side": 1,
      "message": "Yes, enforcing it exists but not the format (explicitly not enforcing \"b/xxxx\" or \"issuetracker.google.com/xxxx\") sounds good so others can format in ways that makes sense for them. If we find that to be a problem we can add a flag to disable the enforcement, but we should leave it enabled in AOSP.",
      "parentUuid": "1c62a909_823eeb29",
      "range": {
        "startLine": 95,
        "startChar": 30,
        "endLine": 95,
        "endChar": 34
      },
      "revId": "d40686b97f574002037dc0fad88df21d64c93f32",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20fef419_f82f01e4",
        "filename": "tools/aconfig/src/protos.rs",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 2011130
      },
      "writtenOn": "2023-07-26T15:21:21Z",
      "side": 1,
      "message": "We\u0027d like for it to be exactly one so gantry can enforce policies on it.\n\ndev specifies feaeture bug id -\u003e halyard picks it up -\u003e plumbs it to gantry -\u003e gantry gate does policy (e.g., if it\u0027s a feature bug, makes sure the appropriate bits are signed off on before you can enable a feature in prod)",
      "parentUuid": "de40c502_4a4f73d9",
      "range": {
        "startLine": 95,
        "startChar": 30,
        "endLine": 95,
        "endChar": 34
      },
      "revId": "d40686b97f574002037dc0fad88df21d64c93f32",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49f788f1_5699704c",
        "filename": "tools/aconfig/src/protos.rs",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2023-07-27T07:54:32Z",
      "side": 1,
      "message": "Changed the impl to require exactly one bug per flag, while keeping the field as `repeated` instead of `optional` (so no need to re-import the proto).",
      "parentUuid": "20fef419_f82f01e4",
      "range": {
        "startLine": 95,
        "startChar": 30,
        "endLine": 95,
        "endChar": 34
      },
      "revId": "d40686b97f574002037dc0fad88df21d64c93f32",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}