{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "21e12eda_de2ab346",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-03-17T02:43:21Z",
      "side": 1,
      "message": "We used to have something very similar to this as the [partial source] PDK, and removed it because it complicated a lot of things, did not work with Soong, and was quite slow due to needing to look through the full zip file at analysis time. Based on the current logic here, why aren\u0027t you just disabling building the system[_ext] images and specifying prebuilts for those images instead?",
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cffaa30_0d36fbd1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-03-17T05:05:26Z",
      "side": 1,
      "message": "You can find most of the details from go/source-tree-treble-1p, but general idea is that in AB we can utilize chained build, to have one common partial cf build which targets system and system_ext, and other cf build with specific target (such as phone) builds system and system_ext image, with most of modules just being copied from the common partial cf build. For now we are not considering to replace images as prebuilt, as some of the modules from system_ext won\u0027t be used from all targets, and also we\u0027d like to keep use of packaging logic from current build instead of merging artifact with `merge_target_files`.",
      "parentUuid": "21e12eda_de2ab346",
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80c7c8fb_da77e879",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-03-17T05:33:53Z",
      "side": 1,
      "message": "My reading of that proposal (which didn\u0027t seem to go through an approval process) was for a full split which would enable using prebuilt partition images. Using partial files and partial sources becomes far more complicated, risky to build correctness, and expensive.\n\nWith partial replacements you need to verify that the configs that build the rest of the files are identical with the current build, otherwise there could be mismatches between prebuilts and source built files (as there is not a stable treble boundary within the partition). Since you can\u0027t just use installed prebuilts to build against, many dependencies of source built things will need to be built again.\n\nThis also makes things like licensing, sbom compliance, debug symbols, etc much trickier, as all of that information would need to be extracted somehow and patched through the build.",
      "parentUuid": "4cffaa30_0d36fbd1",
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c3907e3_b2ce85bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-03-17T07:08:57Z",
      "side": 1,
      "message": "1. For now, our initial target is to build within the same build id, so expect files to be identical.\n\n2. Yes there are blockers with licensing, debug symbol and other stuffs. Anyway, we\u0027d like to first check how much we can save with this idea from the build, and move on if it worth. Our current target is to clarify if this idea can save some time from the CI, and how much if so.",
      "parentUuid": "80c7c8fb_da77e879",
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4812a05_ec107b2b",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2023-03-20T08:03:02Z",
      "side": 1,
      "message": "Also, it must check if `GENERATE_CONTEXT_SCRIPT_FILE` is defined.",
      "range": {
        "startLine": 147,
        "startChar": 5,
        "endLine": 147,
        "endChar": 42
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1b3dc25_852f1f62",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-03-28T01:59:26Z",
      "side": 1,
      "message": "The variable is removed for now. Let\u0027s revisit to make this variable from next step.",
      "parentUuid": "d4812a05_ec107b2b",
      "range": {
        "startLine": 147,
        "startChar": 5,
        "endLine": 147,
        "endChar": 42
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91e32e10_d4060b4c",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-03-17T02:43:21Z",
      "side": 1,
      "message": "This is missing all the inputs used by the script (including all the directories it looks through to find the target_files zip). It\u0027s also missing the list of all the files that will be written (which should be in .KATI_IMPLICIT_OUTPUTS).",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 16
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07d13977_14f8f456",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-03-17T05:05:26Z",
      "side": 1,
      "message": "Thx. We expect some of the inputs from the scripts are not required from all cases (for now we target with ab build, but we\u0027d like to cover more cases containing partners if possible), and this will be updated once we have more common target inputs. Let me check about KATI_IMPLICIT_OUTPUTS as I was not aware of it. Thx.",
      "parentUuid": "91e32e10_d4060b4c",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 16
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bd59183_3d9986d0",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2023-03-17T05:33:53Z",
      "side": 1,
      "message": "All used inputs are required for correct incremental builds.",
      "parentUuid": "07d13977_14f8f456",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 16
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40b1ad9f_70d27218",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-03-17T07:08:57Z",
      "side": 1,
      "message": "QQ: What should I do if I don\u0027t want all of the intermediate files not to be kept from the incremental build?",
      "parentUuid": "1bd59183_3d9986d0",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 16
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63103211_54f5864e",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2023-03-20T08:03:02Z",
      "side": 1,
      "message": "I think, it is missing a dependency to `$(GENERATE_CONTEXT_SCRIPT_FILE)`. Which may change from the target configuration.\nAlso, what triggers this build? Once the `context` file is generated, it will never called again until the file is removed.",
      "parentUuid": "40b1ad9f_70d27218",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 16
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf30145f_5ae99187",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2023-03-21T03:31:16Z",
      "side": 1,
      "message": "This rule not only generates the context, but also unzip target_files.zip which isn\u0027t a part of inputs as a side effect.",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 16
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaf85add_a31caa42",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-03-28T01:59:26Z",
      "side": 1,
      "message": "This is because we don\u0027t expect same input from the generate_context.sh all the time. If we want to specify all valid input, then we should separate mk file per target environment.",
      "parentUuid": "bf30145f_5ae99187",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 16
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0e84672_81559dc5",
        "filename": "tools/download_artifact.sh",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2023-03-20T08:03:02Z",
      "side": 1,
      "message": "download_artfact",
      "range": {
        "startLine": 21,
        "startChar": 17,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c7a6d67_5aa5200f",
        "filename": "tools/download_artifact.sh",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-03-28T01:59:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0e84672_81559dc5",
      "range": {
        "startLine": 21,
        "startChar": 17,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f8b9253_3c3d1a5a",
        "filename": "tools/download_artifact.sh",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2023-03-21T08:46:39Z",
      "side": 1,
      "message": "To support other partitions as well, how about this?\n\n1) `TARGET_PATH` contains a path under `$PRODUCT_OUT` (e.g. `system/bin/toybox`, `system_ext/apex/com.google.android.compos.apex`\n2) Make the first directory uppercase (maybe with `sed`?)",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 75,
        "endChar": 2
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7533f6c8_060eb55f",
        "filename": "tools/download_artifact.sh",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2023-03-20T08:03:02Z",
      "side": 1,
      "message": "Can\u0027t we just `mv` this?",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 2
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eab5855_1e01b69b",
        "filename": "tools/download_artifact.sh",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2023-03-21T08:29:34Z",
      "side": 1,
      "message": "I don\u0027t think we can. If we `mv`, subsequent builds will fail.",
      "parentUuid": "7533f6c8_060eb55f",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 2
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37bfa7ac_7623a46d",
        "filename": "tools/download_artifact.sh",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2023-03-22T04:28:07Z",
      "side": 1,
      "message": "IIUC, the files in `$SRC_PATH` is copied only if the `context` is updated. That means the `$SRC_PATH` is updated by fetching the new target files. So I thought the `$SRC_PATH` would never be read afterward.\nOTOH, as the build system must not change the source tree and the fetched files as sources must stay as it was. In that sense, `cp` must be the proper way.",
      "parentUuid": "1eab5855_1e01b69b",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 2
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c896c158_57335c29",
        "filename": "tools/generate_context.sh",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2023-03-21T03:31:16Z",
      "side": 1,
      "message": "it\u0027s actually \u0027input\u0027, not a part of \u0027out\u0027, isn\u0027t it?",
      "range": {
        "startLine": 18,
        "startChar": 14,
        "endLine": 18,
        "endChar": 47
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a47213ef_1ab34a6c",
        "filename": "tools/generate_context.sh",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2023-03-21T08:29:34Z",
      "side": 1,
      "message": "Yes, but in case of chained-builds, the cached artifacts are placed under out/prebuilt_cached.",
      "parentUuid": "c896c158_57335c29",
      "range": {
        "startLine": 18,
        "startChar": 14,
        "endLine": 18,
        "endChar": 47
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c5f4797_9a4cb9c2",
        "filename": "tools/generate_context.sh",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2023-03-21T08:29:34Z",
      "side": 1,
      "message": "$OUT_DIR",
      "range": {
        "startLine": 18,
        "startChar": 14,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2608961_2a3fcc72",
        "filename": "tools/generate_context.sh",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-03-28T01:59:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c5f4797_9a4cb9c2",
      "range": {
        "startLine": 18,
        "startChar": 14,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "339d0ffdcd6dcafafa0e6e5b1d55e4ef6d15f8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}