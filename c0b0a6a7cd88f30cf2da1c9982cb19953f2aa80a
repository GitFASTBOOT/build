{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f59f58bb_0cbd1ddf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1077574
      },
      "writtenOn": "2021-12-13T18:41:01Z",
      "side": 1,
      "message": "Hi, \nzipalign_test fails when we migrate the Android\nbuild\u0026test system to Bazel as part of pesto project. Because Bazel is running tests under sandbox environment. method android::base::GetExecutablePath returns a path in $ANDRIOD_HOST_OUT which is not accessible by sandbox. \n\nPlease help reviewing.",
      "revId": "c0b0a6a7cd88f30cf2da1c9982cb19953f2aa80a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c68d42d4_c16dff68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2021-12-13T19:37:40Z",
      "side": 1,
      "message": "The existing implementation is currently the best practice for tests, which means you\u0027ll likely need to make similar changes in many places. (The test executable is expected to be placed next to the test data)\n\nThis new implementation also relies on the GNU extension program_invocation_name, which doesn\u0027t appear to exist in bionic, so this code won\u0027t work for host+device tests. (This happens to be a host-only test, and usually gets built with a libc that has program_invocation_name, but that\u0027s not the case w/host_bionic either)",
      "parentUuid": "f59f58bb_0cbd1ddf",
      "revId": "c0b0a6a7cd88f30cf2da1c9982cb19953f2aa80a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dda4d569_9d082ab4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1077574
      },
      "writtenOn": "2021-12-13T21:16:39Z",
      "side": 1,
      "message": "Thanks for pointing out the case for device tests. We are trying to fix host unit tests case by case right now.",
      "parentUuid": "c68d42d4_c16dff68",
      "revId": "c0b0a6a7cd88f30cf2da1c9982cb19953f2aa80a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3dbf062_937d82fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2021-12-13T21:38:49Z",
      "side": 1,
      "message": "It doesn\u0027t appear like this works in the test infra according to presubmit, and it also won\u0027t work when building with host bionic, or any tests that are built for both host and device. It seems like this needs a deeper look/design rather than just changing a bunch of host-only tests for now (if anything, if we went this way, it would be a good idea to have a common implementation of finding the test directory instead of copying it in every user)",
      "parentUuid": "dda4d569_9d082ab4",
      "revId": "c0b0a6a7cd88f30cf2da1c9982cb19953f2aa80a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e6cf7f2_68f9f340",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1077574
      },
      "writtenOn": "2021-12-13T22:21:40Z",
      "side": 1,
      "message": "I\u0027ll look into presubmit failures. I agree a common implementation of finding the test directory is a better approach. Right now the scope is pretty small. Out of more than 500 host unit tests, only zipalign_tests and aapt2_tests failed due to bazel sandbox.\n\nFYI. Here is a google3 reference implementation https://source.corp.google.com/piper///depot/google3/devtools/build/runtime/get_runfiles_dir.cc;rcl\u003d324048656;l\u003d328",
      "parentUuid": "f3dbf062_937d82fd",
      "revId": "c0b0a6a7cd88f30cf2da1c9982cb19953f2aa80a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}