{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b8b4b67a_ca5ec1f3",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 1020,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2022-01-26T23:58:20Z",
      "side": 1,
      "message": "wait a sec... why not writing these files as ZIP_STORED in the first place, since you already have an option in the OutputFile class",
      "range": {
        "startLine": 1020,
        "startChar": 0,
        "endLine": 1020,
        "endChar": 58
      },
      "revId": "a65e1abef199b5e7c9acdb40e5001afc26f31c30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70041812_fdc4e861",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 1020,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2022-01-27T00:04:17Z",
      "side": 1,
      "message": "Because we don\u0027t know how well these images compress before hand. We also don\u0027t know if this image is EROFS or not. Even if it\u0027s EROFS, it could be uncompressed EROFS.",
      "parentUuid": "b8b4b67a_ca5ec1f3",
      "range": {
        "startLine": 1020,
        "startChar": 0,
        "endLine": 1020,
        "endChar": 58
      },
      "revId": "a65e1abef199b5e7c9acdb40e5001afc26f31c30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1e402bb_2cc2e9c6",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 1020,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2022-01-27T18:24:36Z",
      "side": 1,
      "message": "Can we guard this with some flag, e.g. only do it if EROFS is enabled. I suspect the unzip takes quite a few minutes, so the step doesn\u0027t affect most other formats.",
      "parentUuid": "70041812_fdc4e861",
      "range": {
        "startLine": 1020,
        "startChar": 0,
        "endLine": 1020,
        "endChar": 58
      },
      "revId": "a65e1abef199b5e7c9acdb40e5001afc26f31c30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1c5177b_5392fc89",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 1020,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2022-01-27T18:27:56Z",
      "side": 1,
      "message": "One of the motivators for this is so the virtual devices can construct a disk image based on the ZIP file stored data extents without extracting it. I don\u0027t see any reason to make this filesystem specific. If a file is not compressible, it should be stored.",
      "parentUuid": "c1e402bb_2cc2e9c6",
      "range": {
        "startLine": 1020,
        "startChar": 0,
        "endLine": 1020,
        "endChar": 58
      },
      "revId": "a65e1abef199b5e7c9acdb40e5001afc26f31c30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4ffe8ec_4fa3062c",
        "filename": "tools/releasetools/add_img_to_target_files.py",
        "patchSetId": 3
      },
      "lineNbr": 1020,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2022-02-02T20:37:10Z",
      "side": 1,
      "message": "For most other formats, we wouldn\u0027t call \"zip -d\" because the check in 1017. Note uncompressed sizes are recored in zip headers, so we don\u0027t need to unzip to obtain these information.",
      "parentUuid": "d1c5177b_5392fc89",
      "range": {
        "startLine": 1020,
        "startChar": 0,
        "endLine": 1020,
        "endChar": 58
      },
      "revId": "a65e1abef199b5e7c9acdb40e5001afc26f31c30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}