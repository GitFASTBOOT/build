{
  "comments": [
    {
      "key": {
        "uuid": "e3b1613b_93aa30d4",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-09-23T08:33:52Z",
      "side": 1,
      "message": "Don\u0027t believe you need this to be here? false is the default",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecda6e9c_f599f119",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2019-09-23T09:00:07Z",
      "side": 1,
      "message": "According to aosp/957100 I believe it\u0027s by default true.\nI modified this file from mainline_arm64/BoardConfig.mk, so I tried to keep the modification minimal. (So that the \"logic\" of this BoardConfig is same as mainline_arm64, only the arch is different)\n\nI think it\u0027s better if we change this line to:\n$(call inherit-product, $(SRC_TARGET_DIR)/product/updatable_apex.mk)\n\nthoughts?",
      "parentUuid": "e3b1613b_93aa30d4",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "322b5402_f9ef0672",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-09-23T09:23:11Z",
      "side": 1,
      "message": "ah sorry, got myself confused.\n\nIt actually was in BoardConfigMainlineCommon in AOSP prior to the Q -\u003e aosp push,. I do believe it needs to be added back there.. I think I originally moved it out of there because of emulator actually, so if that\u0027s no longer true, maybe we can just add it to BoardConfigMainlineCommon directly? GSI can override it to false.\n\nSee http://go/ag/7951568",
      "parentUuid": "ecda6e9c_f599f119",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1330ea1c_b1813e5e",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1128729
      },
      "writtenOn": "2019-09-23T10:09:35Z",
      "side": 1,
      "message": "How about just remove this \"TARGET_FLATTEN_APEX :\u003d false\" here?\nAnd all target could decide by \"updatable_apex.mk\".\nWe could add \"updatable_apex.mk\" into mainline_system_arm64.mk and mainline_system_x86.mk.",
      "parentUuid": "322b5402_f9ef0672",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be51e50a_d1557edd",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-09-23T10:25:59Z",
      "side": 1,
      "message": "The purpose of BoardConfigMainlineCommon is to collect all the settings that affect how the system image is compiled. TARGET_FLATTEN_APEX belongs in that set",
      "parentUuid": "1330ea1c_b1813e5e",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f58fa07_9476264e",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2019-09-23T10:58:10Z",
      "side": 1,
      "message": "I believe TARGET_FLATTEN_APEX defaults to true and this var is not meant to be set/unset directly?\nOne only override APEX flatness through updatable_apex.mk. It feels contradicted to set TARGET_FLATTEN_APEX to false in BoardConfigMainlineCommon, because\n1. Then the default value introduced in aosp/957100 is overridden\n2. BoardConfigGsiCommon.mk would have to unset TARGET_FLATTEN_APEX and sysprop ro.apex.updatable",
      "parentUuid": "be51e50a_d1557edd",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dac635df_649b9ad4",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-09-23T11:18:54Z",
      "side": 1,
      "message": "Yeah, flatteness should be controlled by inheriting or not inheriting updatable_apex.mk.\n\nThe distinction between product- or board- variables is very confusing to me. I wish we could have just one.",
      "parentUuid": "6f58fa07_9476264e",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9f492a0_da199a8a",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-09-23T12:19:54Z",
      "side": 1,
      "message": "- it would be better to have the build system automatically write the right value of the sysprop based on the value of TARGET_FLATTEN_APEX\n- I don\u0027t see why setting it in BoardConfigMainlineCommon would be a problem. We want to override the default. We can\u0027t set the prop in the board config though, because GSI would have no way to \"undo\" that.",
      "parentUuid": "dac635df_649b9ad4",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb8aaa06_4c426bbe",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2019-09-23T13:25:18Z",
      "side": 1,
      "message": "\u0027because GSI would have no way to \"undo\" that\u0027 this is why I think setting it in BoardConfigMainlineCommon would be a problem, other than that I don\u0027t see a problem too.\n\nI think letting the build system choose the sysprop automatically is more reasonable.",
      "parentUuid": "d9f492a0_da199a8a",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ab897ca_0092785a",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-09-23T13:29:00Z",
      "side": 1,
      "message": "Right, to clarify what I\u0027m suggesting is to:\n- put TARGET_FLATTEN_APEX in BoardConfigMainlineCommon instead of here\n- auto-write the sysprop in the build based on TARGET_FLATTEN_APEX",
      "parentUuid": "fb8aaa06_4c426bbe",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54eb4589_5a5f68f8",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2019-09-23T13:51:26Z",
      "side": 1,
      "message": "I agree. Let\u0027s see what +jiyong think. If he agree that it\u0027s better to let the build system auto-choose the sysprop, then I can prepare another CL to move TARGET_FLATTEN_APEX to BoardConfigMainlineCommon and phase out updatable_apex.mk.",
      "parentUuid": "6ab897ca_0092785a",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc41c0e0_12e49d0a",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1128729
      },
      "writtenOn": "2019-09-24T02:05:13Z",
      "side": 1,
      "message": "Agree. By comparing these two solutions, I prefer enable the feature by TARGET_FLATTEN_APEX instead of updatable_apex.mk.",
      "parentUuid": "54eb4589_5a5f68f8",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92ab7fd7_32c0903a",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-09-27T03:35:53Z",
      "side": 1,
      "message": "Sorry, I haven\u0027t followed this for a while. Can anyone tell me why updatable_apex.mk can\u0027t be used for this?",
      "parentUuid": "dc41c0e0_12e49d0a",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09bcb4e4_672d7f9b",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2019-09-27T04:05:54Z",
      "side": 1,
      "message": "If BoardConfigMainlineCommon were to use updatable_apex.mk then GSI targets would have to override TARGET_FLATTEN_APEX to \"true\" and \"undo\" the sysprop (PRODUCT_PROPERTY_OVERRIDES :\u003d ro.apex.updatable\u003dtrue) added by updatable_apex.\n\nWhat we were thinking is that BoardConfigMainlineCommon (and other boards) can use TARGET_FLATTEN_APEX to decide apex flatness (without manually setting ro.apex.updatable\u003dtrue), and let the build system add the sysprop automatically",
      "parentUuid": "92ab7fd7_32c0903a",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfc0d15b_21a47162",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-09-27T04:20:24Z",
      "side": 1,
      "message": "Why such override and undo are considered bad? You can abstract that by having\n\nnon_updatable_apex.mk:\nPRODUCT_PROPERTY_OVERRIDES :\u003d ro.apex.updatable\u003dfalse\nTARGET_FLATTEN_APEX :\u003d true\n\nand let GSI to inherit from it",
      "parentUuid": "09bcb4e4_672d7f9b",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e72e2621_5b1aa7d1",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2019-09-27T04:37:43Z",
      "side": 1,
      "message": "Because BoardConfigGsiCommon includes BoardConfigMainlineCommon, so if we add \"TARGET_FLATTEN_APEX :\u003d true\" and \"PRODUCT_PROPERTY_OVERRIDES :\u003d ro.apex.updatable\u003dtrue\" to BoardConfigMainlineCommon, we would have to somehow \"undo\" the \"ro.apex.updatable\u003dtrue\" in BoardConfigGsiCommon. As far as I know we don\u0027t have a way to do that? (Please correct me if there actually is one)",
      "parentUuid": "cfc0d15b_21a47162",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e982344d_da641edf",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-09-27T04:59:13Z",
      "side": 1,
      "message": "yeah, for example..\n\nmyproduct.mk:\n$(inherit-product non-updatable-apex.mk)\n$(inherit-product base.mk)  # order is important here\n\nnon-updatable-apex.mk:\nTARGET_FLATTEN_APEX :\u003d true\nPRODUCT_PROPERTY_OVERRIDES :\u003d ro.apex.updatable\u003dfalse\n\nbase.mk:\n$(inherit-product updatable-apex.mk)\n\nupdatable-apex.mk:\nTARGET_FLATTEN_APEX :\u003d false\nPRODUCT_PROPERTY_OVERRIDES :\u003d ro.apex.updatable\u003dtrue\n\nThen\nTARGET_FLATTEN_APEX is true for myproduct and false for base\nvendor/build.prop will have ro.apex.updatable\u003dfalse for myproduct and ro.apex.updatable\u003dtrue for base",
      "parentUuid": "e72e2621_5b1aa7d1",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbcf5dab_87028ed9",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-09-27T09:02:25Z",
      "side": 1,
      "message": "the semantics of which of the two entries in PRODUCT_PROPERTY_OVERRIDES will have an effect is not well specified. Because it\u0027s a PRODUCT_ variable, it doesn\u0027t get overridden in this case (both values get inherited and put into a list).",
      "parentUuid": "e982344d_da641edf",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10656541_aea1167b",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-09-27T09:24:22Z",
      "side": 1,
      "message": "\u003e both values get inherited and put into a list\n\nThat\u0027s correct. But the one that comes first wins and emitted to build.prop. see uniq-pairs-by-first-component",
      "parentUuid": "dbcf5dab_87028ed9",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c5f7e47_90507110",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-09-27T09:31:52Z",
      "side": 1,
      "message": "yep, but it\u0027s confusing and unnecessary. Why don\u0027t we just have the one variable (TARGET_FLATTEN_APEX) that supports being overwritten in an intuitive way?",
      "parentUuid": "10656541_aea1167b",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2faf7705_1829479b",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1128729
      },
      "writtenOn": "2019-09-27T09:37:17Z",
      "side": 1,
      "message": "This patch is to setup a target building a golden binary for CSI x86.\nThe target requires TARGET_FLATTEN_APEX, and GSI will align CSI.\n\nMaybe we could leave the \"TODO\" here (which is cloned from mainline_arm64/BoardConfig.mk),\nand discuss the solution in a bug separately?",
      "parentUuid": "10656541_aea1167b",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "090c75d9_60be7fa8",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-09-27T09:45:57Z",
      "side": 1,
      "message": "I didn\u0027t want build system to specifically recognize TARGET_FLATTEN_APEX and set ro.updatable.apex accordingly. We seldom do that. In my understanding, the common pattern is to abstract those multiple configs into an *.mk and turn on or off by inheriting or not inheriting the mk file. virtual_ab_ota.mk, verity.mk, vboot.mk, etc are all using the same pattern.",
      "parentUuid": "2faf7705_1829479b",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54c9a693_5a765af6",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-09-27T11:31:20Z",
      "side": 1,
      "message": "\u003e We seldom do that\n\nPlenty of examples (in e.g. core/main.mk). In general I\u0027d agree with you we want the core to be more generic, just in this case it seems to keep causing pain..",
      "parentUuid": "090c75d9_60be7fa8",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b43ef939_c4168968",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-09-30T01:32:13Z",
      "side": 1,
      "message": "Most of the ADDITIONAL_BUILD_PROPERTIES in core/main.mk are conditionally set by TARGET_BUILD_VARIANT, which is not a product-specific variable, but a generic variable that affects the entire builds. TARGET_FLATTEN_APEX however is a variable that is very specific to a domain and a product.\n\nYo, could you try the non-updatable-apex.mk way? Sorry that I seem to be preventing you from making progress. If so and if you are in hurry, I am also fine with you submitting this first and then work on the suggested method in a follow-up CL.",
      "parentUuid": "54c9a693_5a765af6",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35e3f984_80b908dc",
        "filename": "target/board/mainline_x86/BoardConfig.mk",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2019-09-30T11:38:10Z",
      "side": 1,
      "message": "\u003e Yo, could you try the non-updatable-apex.mk way? Sorry that I seem to be preventing you from making progress. If so and if you are in hurry, I am also fine with you submitting this first and then work on the suggested method in a follow-up CL.\n\nNo worries Jiyong, this CL is not in a hurry, and I also need to figure out if we actually need a x86 or x86_arm board (b/141657175#comment5) before submitting.\n\nFor the [non-]updatable-apex.mk part, I agree with Anton \n\n\u003e the semantics of which of the two entries in PRODUCT_PROPERTY_OVERRIDES will have an effect is not well specified.\n\nand I feel that relying on the order of inheritance isn\u0027t a \"healthy\" pattern.\n\nI propose to not change BoardConfigMainlineCommon and only add \"$(call inherit-product, $(SRC_TARGET_DIR)/product/updatable_apex.mk)\" to mainline_system_x86.mk (which is the product makefile).",
      "parentUuid": "b43ef939_c4168968",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "dea30915d43dbb08e96de1d345e59f27755e6099",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}