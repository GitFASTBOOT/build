{
  "comments": [
    {
      "key": {
        "uuid": "57bb093b_aeeefba5",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2016-03-14T16:17:36Z",
      "side": 1,
      "message": "Maybe compare directly with $($(LOCAL_2ND_ARCH_VAR_PREFIX)ADDRESS_SANITIZER_RUNTIME_LIBRARY) ?",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_349a5a8b",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2016-03-14T18:03:39Z",
      "side": 1,
      "message": "Although $(ADDRESS_SANITIZER_CONFIG_EXTRA_SHARED_LIBRARIES) is empty now, I think it is safer to check it too here.\nmake complains about recursive dependency if $(my_shared_libraries) contains current $(LOCAL_MODULE).",
      "parentUuid": "57bb093b_aeeefba5",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_f4f9f294",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2016-03-14T18:08:02Z",
      "side": 1,
      "message": "If it\u0027s empty in all configurations, it\u0027s better to just remove it. An explicit check against ...RUNTIME_LIBRARY is a lot less confusing, and you can also move the my_static_libraries line below (line 121) under this check, too.",
      "parentUuid": "57bb093b_349a5a8b",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_94586602",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2016-03-14T18:27:21Z",
      "side": 1,
      "message": "$(ADDRESS_SANITIZER_CONFIG_EXTRA_STATIC_LIBRARIES) is libasan, which we should check to avoid recursive dependency.\nI guess ADDRESS_SANITIZER_CONFIG_EXTRA_SHARED_LIBRARIES  is there, although empty now, for the future in case we need something like libasan as shared library.\nI think Dan added those two variables.\nI will check it with him.",
      "parentUuid": "57bb093b_f4f9f294",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_14bf56f2",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-03-14T18:38:08Z",
      "side": 1,
      "message": "It used to contain libdl https://android-review.git.corp.google.com/#/c/155082/\n\nDon\u0027t think we need it any more.",
      "parentUuid": "57bb093b_94586602",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_dfd04718",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2016-03-14T18:43:20Z",
      "side": 1,
      "message": "Hm, would not this thing apply to, say, libc, which asan library depends on, thus creating a circular dependency?",
      "parentUuid": "57bb093b_14bf56f2",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_bfa0e36b",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2016-03-14T19:00:28Z",
      "side": 1,
      "message": "I don\u0027t see circular dependency between libc and libasan now.\nMaybe that\u0027s one reason libc is built with LOCAL_SANITIZE :\u003d never.",
      "parentUuid": "57bb093b_dfd04718",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_dfca0719",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2016-03-14T19:00:28Z",
      "side": 1,
      "message": "Okay, i am going to remove ADDRESS_SANITIZER_CONFIG_EXTRA_SHARED_LIBRARIES in my next upload.",
      "parentUuid": "57bb093b_14bf56f2",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_ff00abe6",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2016-03-14T19:09:06Z",
      "side": 1,
      "message": "Right, but this change adds libasan as a dependency to LOCAL_SANITIZE:\u003dnever targets.",
      "parentUuid": "57bb093b_bfa0e36b",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_9f623fa5",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2016-03-14T19:21:16Z",
      "side": 1,
      "message": "I see what you meant now.\nWhen my_global_santitize is set, any LOCAL_SANITIZE:\u003dnever module still has a potential to depend on libasan, if it depends on something that uses libasan. This patch is to make that work to build any LOCAL_SANITIZE:\u003dnever module. We should make sure that libc does not actually use anything that uses libasan or libasan should not use libc. Then the extra unused link library should be okay. I think that condition is true for now.",
      "parentUuid": "57bb093b_ff00abe6",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_fa739971",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2016-03-14T20:32:28Z",
      "side": 1,
      "message": "We already have libasan depending on libc.\nLibc is LOCAL_SANITIZE:\u003dnever, so this change will make libc depend on libasan.\nThat\u0027s a dependency loop. Do I miss anything?",
      "parentUuid": "57bb093b_9f623fa5",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_c5d87a38",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2016-03-14T21:01:29Z",
      "side": 1,
      "message": "libasan depends on libc, but libc does not depend on libasan.\nAlthough this patch adds libasan.a to link with libc.so, it was linked with -Wl,--no-whole-archive, so code in libasan.a does not get into libc.so. Later it is still possible to use the libc.so without libasan.",
      "parentUuid": "57bb093b_fa739971",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_052442f3",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2016-03-14T21:05:09Z",
      "side": 1,
      "message": "But this patch also adds libclang_rt.asan-arm-android.so to libc deps, which is a shared library.",
      "parentUuid": "57bb093b_c5d87a38",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_259a2696",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2016-03-14T21:47:08Z",
      "side": 1,
      "message": "Ah, that\u0027s true. I am not sure yet if that circular dependency between .so files would cause real runtime problem.\nProbably we should add -Wl,--as-needed here, but now I don\u0027t understand the need of -Wl,--no-as-needed at line 110, for LOCAL_IS_HOST_MODULE case. Dan?",
      "parentUuid": "57bb093b_052442f3",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bb093b_9417c1d4",
        "filename": "core/config_sanitizers.mk",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2016-03-14T23:01:54Z",
      "side": 1,
      "message": "--as-needed would not work for sanitize\u003dnever executables - they don\u0027t \"need\" ASan runtime, but we still want them to link it.\n\nMaybe limit this new functionality (ASan linking of sanitize\u003dnever) to executables? This is getting more and more complicated...",
      "parentUuid": "57bb093b_259a2696",
      "revId": "87eff33fa64bb19331bf326e897777c0e2e214c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}