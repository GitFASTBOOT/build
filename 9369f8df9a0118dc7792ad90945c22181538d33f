{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "754cf494_ebafa920",
        "filename": "target/product/generic_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2023-11-10T00:29:57Z",
      "side": 1,
      "message": "Do they include the modules only for the system image?\nIf they include any of non-system modules, the build will fail if `PRODUCT_ENFORCE_ARTIFACT_PATH_REQUIREMENTS` is set to `true` or `strict`.",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 45
      },
      "revId": "9369f8df9a0118dc7792ad90945c22181538d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e097108_4ccd8de7",
        "filename": "target/product/generic_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-11-10T00:38:20Z",
      "side": 1,
      "message": "Different packages are added to them when building different images as far as I understand. In `build/make/target/product/base_vendor.mk` we add vendor modules to them like we do with `PRODUCT_PACKAGES`, and `base_system.mk` adds the system packages. I think these GSIs that inherit from `base_system.mk` through `handheld_system.mk` and they don\u0027t inherit from `base_vendor.mk`.\n\nIf someone added a vendor package to one of these variables from `base_system.mk` it should be a build failure because of the artifact path requirements.\n\nDoes that sound right? I\u0027m not thaaat familiar with how all of these make files interact.",
      "parentUuid": "754cf494_ebafa920",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 45
      },
      "revId": "9369f8df9a0118dc7792ad90945c22181538d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab3b13d6_91a7280a",
        "filename": "target/product/generic_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2023-11-10T01:03:25Z",
      "side": 1,
      "message": "The artifact check tests the `PRODUCT_PACKAGES` that were added before `require-artifacts-in-path` is called are in the allowed path. So it does matter where the module is added. `generic_system.mk` is for system modules. Vendor modules must not be added in `generic_system.mk`.\nThe correct solution must be splitting `PRODUCT_PACKAGES_SHIPPING_API_LEVEL_*` into system and non-system variables.",
      "parentUuid": "8e097108_4ccd8de7",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 45
      },
      "revId": "9369f8df9a0118dc7792ad90945c22181538d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6151197e_d54e5fc8",
        "filename": "target/product/generic_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-11-10T01:13:12Z",
      "side": 1,
      "message": "I don\u0027t think `generic_system.mk` inherits from `base_vendor.mk`, so there should not be any vendor modules added to any of the `PRODUCT_PACKAGES_SHIPPING_API_LEVEL_*` variables by the time we get here, right?\n\nIf there were, it would fail to build with this change. I was building aosp_x86_64-trunk_staging-userdebug locally and I see aosp_arm64-trunk_staging-userdebug builds ok with this CL in presubmits.",
      "parentUuid": "ab3b13d6_91a7280a",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 45
      },
      "revId": "9369f8df9a0118dc7792ad90945c22181538d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "111579ae_4a67cabd",
        "filename": "target/product/generic_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-11-10T01:29:35Z",
      "side": 1,
      "message": "one way to check this could be adding $(error $(PRODUCT_PACKAGES_SHIPPING_API_LEVEL_34)) here\n\nif that\u0027s the case, that\u0027s great!",
      "parentUuid": "6151197e_d54e5fc8",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 45
      },
      "revId": "9369f8df9a0118dc7792ad90945c22181538d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36d7666f_3b025113",
        "filename": "target/product/generic_system.mk",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2023-11-10T01:50:35Z",
      "side": 1,
      "message": "\u003eI don\u0027t think generic_system.mk inherits from base_vendor.mk, so there should not be any vendor modules added to any of the PRODUCT_PACKAGES_SHIPPING_API_LEVEL_* variables by the time we get here, right?\n\nAh, right. Then, I think, it solves the problem.\nCan we remove the allowlist in base_system.mk with this CL?",
      "parentUuid": "111579ae_4a67cabd",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 45
      },
      "revId": "9369f8df9a0118dc7792ad90945c22181538d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}