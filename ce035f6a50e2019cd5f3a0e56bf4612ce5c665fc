{
  "comments": [
    {
      "key": {
        "uuid": "d10bad31_e7dadfa8",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2187,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2019-03-27T18:12:46Z",
      "side": 1,
      "message": "thanks",
      "range": {
        "startLine": 2187,
        "startChar": 0,
        "endLine": 2187,
        "endChar": 34
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f6caf95_86f399b6",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2211,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2019-03-27T23:35:18Z",
      "side": 1,
      "message": "You could use \"ifeq\" here, finish with \"endif\" (cs/ will give you tons of examples)",
      "range": {
        "startLine": 2211,
        "startChar": 0,
        "endLine": 2211,
        "endChar": 41
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a71a162b_ce51d1e8",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2211,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-03-28T10:59:29Z",
      "side": 1,
      "message": "+1, using ifneq usually ends up less cryptic to read",
      "parentUuid": "1f6caf95_86f399b6",
      "range": {
        "startLine": 2211,
        "startChar": 0,
        "endLine": 2211,
        "endChar": 41
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86750b57_86a411e7",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2211,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-28T13:23:51Z",
      "side": 1,
      "message": "Good point, switched to ifndef like many other examples in this file.",
      "parentUuid": "a71a162b_ce51d1e8",
      "range": {
        "startLine": 2211,
        "startChar": 0,
        "endLine": 2211,
        "endChar": 41
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdbafb6b_918f268a",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2216,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2019-03-27T18:12:46Z",
      "side": 1,
      "message": "Ah, now that I\u0027m looking at it... I should have mentioned there is also $(error). You could consider using that, but you\u0027d have to merge the \"$$findres\" into it because it crashes right away",
      "range": {
        "startLine": 2216,
        "startChar": 8,
        "endLine": 2216,
        "endChar": 15
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b0079ab_e1344658",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2216,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-27T20:48:26Z",
      "side": 1,
      "message": "It expands in a weird way:\n\n(echo -e \\\"build/make/core/Makefile:2242: *** APEX libraries found in system image ...\\\" 2\u003e\u00261 \u0026\u0026 false ) \u0026\u0026 ... \u0026\u0026 (( cd out/target/product/taimen/system; findres\u003d\\$(find lib* -type f ...) || exit 1; if [ -n \\\"\\$findres\\\" ]; then  fi; ) ) \u0026\u0026 ...\n\nI.e. it goes first instead of inside the \"then fi\" block. Actually, $(warning) does the same - I just didn\u0027t notice since the message isn\u0027t printed (or maybe scrolls away) when the check succeeds. (Guess the uses of echo in the shell scripts a few lines up are there for good reason.)\n\nSo I changed back to echo again. It would be nice to expand the file and line location just by themselves, but I can\u0027t find anything for that.",
      "parentUuid": "fdbafb6b_918f268a",
      "range": {
        "startLine": 2216,
        "startChar": 8,
        "endLine": 2216,
        "endChar": 15
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "129a09e2_e80ecd3c",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2216,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2019-03-27T23:35:18Z",
      "side": 1,
      "message": "Don\u0027t worry, nobody in the world fully understands makefile expansion... I think this gets evaluated when the Makefile is parsed, so you can\u0027t get `findres` in there. You\u0027d have to convert it to makefile commands. But leave it if too complicated.",
      "parentUuid": "3b0079ab_e1344658",
      "range": {
        "startLine": 2216,
        "startChar": 8,
        "endLine": 2216,
        "endChar": 15
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ae4ee26_4f9fe050",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2216,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-03-28T10:59:29Z",
      "side": 1,
      "message": "This was discussed in the original patch. The check could be converted to use $(product_target_FILES) from main.mk and fail at kati-time with $(error) rather than after doing the full build. The advantage of the current approach is that it doesn\u0027t run the risk of missing files not in product_target_FILES (there are a few, mostly JNI libs).",
      "parentUuid": "129a09e2_e80ecd3c",
      "range": {
        "startLine": 2216,
        "startChar": 8,
        "endLine": 2216,
        "endChar": 15
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "701352d6_59d02c97",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2216,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2019-03-28T11:51:11Z",
      "side": 1,
      "message": "One can delay the evaluation with $(eval $(error xyz)). But I am the last person who would force another human being to have to endure the pain of debugging makefiles.",
      "parentUuid": "7ae4ee26_4f9fe050",
      "range": {
        "startLine": 2216,
        "startChar": 8,
        "endLine": 2216,
        "endChar": 15
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5943bd79_d4a37343",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2216,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-03-28T11:55:53Z",
      "side": 1,
      "message": "I don\u0027t think you\u0027re not going to get $(error) to work here regardless of how you wrap it, because $(error) can only run in make, and you want to fail in ninja?",
      "parentUuid": "701352d6_59d02c97",
      "range": {
        "startLine": 2216,
        "startChar": 8,
        "endLine": 2216,
        "endChar": 15
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f55ea0f9_0a8fa776",
        "filename": "core/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 2216,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-28T13:23:51Z",
      "side": 1,
      "message": "Yes, it\u0027s intentional that the check is (late) in the build execution rather than in the make (i.e. kati) step, precisely to catch things like the one that is bothering David.",
      "parentUuid": "701352d6_59d02c97",
      "range": {
        "startLine": 2216,
        "startChar": 8,
        "endLine": 2216,
        "endChar": 15
      },
      "revId": "ce035f6a50e2019cd5f3a0e56bf4612ce5c665fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}