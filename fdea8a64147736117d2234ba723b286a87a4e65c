{
  "comments": [
    {
      "key": {
        "uuid": "e987c5e6_a813b4ad",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1263,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-04-02T11:45:06Z",
      "side": 1,
      "message": "sorry but why is all this additional code necessary? Isn\u0027t it sufficient the change the existing \"enforcement\" variable to basically be \u003d PRODUCT_ENFORCE_ARTIFACT_PATH_REQUIREMENTS \u0026\u0026  ARTIFACT_PATH_EXCLUSIVE?",
      "range": {
        "startLine": 1201,
        "startChar": 0,
        "endLine": 1263,
        "endChar": 146
      },
      "revId": "fdea8a64147736117d2234ba723b286a87a4e65c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1432c49_8e5e73aa",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1263,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-04-06T13:41:51Z",
      "side": 1,
      "message": "In the case that ARTIFACT_PATH_EXCLUSIVE is false, it should check only makefiles which call     require-artifacts-in-path-extensible are allowed to declare modules on the specific paths.",
      "parentUuid": "e987c5e6_a813b4ad",
      "range": {
        "startLine": 1201,
        "startChar": 0,
        "endLine": 1263,
        "endChar": 146
      },
      "revId": "fdea8a64147736117d2234ba723b286a87a4e65c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b3a3ec8_5c8ca035",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1263,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-04-06T15:26:59Z",
      "side": 1,
      "message": "oh so that\u0027s how it works. I thought you wanted to allow *any* other .mk to contribute to this path if it was extensible.\n\nLet me think about that for a moment :) there may be a simpler way...",
      "parentUuid": "c1432c49_8e5e73aa",
      "range": {
        "startLine": 1201,
        "startChar": 0,
        "endLine": 1263,
        "endChar": 146
      },
      "revId": "fdea8a64147736117d2234ba723b286a87a4e65c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8971fffd_9d396639",
        "filename": "core/main.mk",
        "patchSetId": 2
      },
      "lineNbr": 1263,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-04-24T12:09:09Z",
      "side": 1,
      "message": "I don\u0027t have the idea about simpler way yet..\nWDYT?",
      "parentUuid": "0b3a3ec8_5c8ca035",
      "range": {
        "startLine": 1201,
        "startChar": 0,
        "endLine": 1263,
        "endChar": 146
      },
      "revId": "fdea8a64147736117d2234ba723b286a87a4e65c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1b5397a_4681c97a",
        "filename": "core/product.mk",
        "patchSetId": 2
      },
      "lineNbr": 436,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-04-02T11:45:06Z",
      "side": 1,
      "message": "instead of reusing the same macro with a new param, could we make separate macros for these two different behaviors? I propose:\n\n    require-artifacts-in-path-exclusive\n    require-artifacts-in-path-extensible\n\nOne which sets ARTIFACT_PATH_EXCLUSIVE \u003d true, and the other doesn\u0027t\n\nThen make require-artifacts-in-path call into require-artifacts-in-path-exclusive (compat mode).",
      "range": {
        "startLine": 436,
        "startChar": 7,
        "endLine": 436,
        "endChar": 32
      },
      "revId": "fdea8a64147736117d2234ba723b286a87a4e65c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffb99a92_748bc467",
        "filename": "core/product.mk",
        "patchSetId": 2
      },
      "lineNbr": 436,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-04-24T12:09:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1b5397a_4681c97a",
      "range": {
        "startLine": 436,
        "startChar": 7,
        "endLine": 436,
        "endChar": 32
      },
      "revId": "fdea8a64147736117d2234ba723b286a87a4e65c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19e103ac_c2a96101",
        "filename": "core/product.mk",
        "patchSetId": 2
      },
      "lineNbr": 440,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-04-02T11:45:06Z",
      "side": 1,
      "message": "rename to ARTIFACT_PATH_EXCLUSIVE?",
      "range": {
        "startLine": 440,
        "startChar": 32,
        "endLine": 440,
        "endChar": 73
      },
      "revId": "fdea8a64147736117d2234ba723b286a87a4e65c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "986f7153_9a5b8777",
        "filename": "core/product.mk",
        "patchSetId": 2
      },
      "lineNbr": 440,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-04-24T12:09:09Z",
      "side": 1,
      "message": "renamed to ARTIFACT_PATH_EXTENSIBLE to keep require-artifacts-in-path behavior.",
      "parentUuid": "19e103ac_c2a96101",
      "range": {
        "startLine": 440,
        "startChar": 32,
        "endLine": 440,
        "endChar": 73
      },
      "revId": "fdea8a64147736117d2234ba723b286a87a4e65c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}