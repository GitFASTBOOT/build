{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9950cc5a_b12cb8ec",
        "filename": "tools/releasetools/ota_from_target_files.py",
        "patchSetId": 5
      },
      "lineNbr": 975,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-11-04T00:15:39Z",
      "side": 1,
      "message": "I believe the input is guaranteed to be a zipfile in our usage. \n\nI am also debating if we can just query the entries under PRODUCT/ without parsing the map file. But that would make the behavior inconsistent to generate OTA from image files.",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 33
      },
      "revId": "095c5f818d5e49531a0d8fdb6e58590250d64fd4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49cbf588_98a5cdf6",
        "filename": "tools/releasetools/ota_from_target_files.py",
        "patchSetId": 5
      },
      "lineNbr": 975,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-04T00:22:55Z",
      "side": 1,
      "message": "\u003e generate OTA from image files.\n\nWhen do we do that? When will target files not include entries under PRODUCT/ ?\n\nAlso, the map file could be missing because it is not required.",
      "parentUuid": "9950cc5a_b12cb8ec",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 33
      },
      "revId": "095c5f818d5e49531a0d8fdb6e58590250d64fd4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3586728_a3ba77d6",
        "filename": "tools/releasetools/ota_from_target_files.py",
        "patchSetId": 5
      },
      "lineNbr": 975,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-11-04T00:25:55Z",
      "side": 1,
      "message": "The map file will be included under IMAGES/* of the target-file, e.g. aosp_cf_x86_phone-target_files-6949642.zip. But if we later want to modify the target-file, we may only include everything under IMAGES/* and META/*. So the PRODUCT/* isn\u0027t available at that point",
      "parentUuid": "49cbf588_98a5cdf6",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 33
      },
      "revId": "095c5f818d5e49531a0d8fdb6e58590250d64fd4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe765286_366e76fe",
        "filename": "tools/releasetools/ota_from_target_files.py",
        "patchSetId": 5
      },
      "lineNbr": 975,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-11-04T00:26:45Z",
      "side": 1,
      "message": "For example, when using a modified new target-file, or using img* file to generate the pkg",
      "parentUuid": "e3586728_a3ba77d6",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 33
      },
      "revId": "095c5f818d5e49531a0d8fdb6e58590250d64fd4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d72c531d_da669bd3",
        "filename": "tools/releasetools/ota_from_target_files.py",
        "patchSetId": 5
      },
      "lineNbr": 975,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-04T00:34:21Z",
      "side": 1,
      "message": "Here\u0027s an alternative:\n\n  debugfs -R \"ls -p /apex\" IMAGES/product.img\n\npreferably check each image, but just product would work for now.\n\nThen search for \"com.android.gki\" in the output. You need to add \"debugfs\" to \"required\" and otatools list, though",
      "parentUuid": "fe765286_366e76fe",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 33
      },
      "revId": "095c5f818d5e49531a0d8fdb6e58590250d64fd4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fde8203_d3bef480",
        "filename": "tools/releasetools/ota_from_target_files.py",
        "patchSetId": 5
      },
      "lineNbr": 975,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-04T00:43:43Z",
      "side": 1,
      "message": "man page for debugfs:\n\nhttps://linux.die.net/man/8/debugfs",
      "parentUuid": "d72c531d_da669bd3",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 33
      },
      "revId": "095c5f818d5e49531a0d8fdb6e58590250d64fd4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "281ce439_dd17e5ec",
        "filename": "tools/releasetools/ota_from_target_files.py",
        "patchSetId": 5
      },
      "lineNbr": 975,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2020-11-04T15:01:05Z",
      "side": 1,
      "message": "Do we want to search all images? Or just product.img",
      "parentUuid": "7fde8203_d3bef480",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 33
      },
      "revId": "095c5f818d5e49531a0d8fdb6e58590250d64fd4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bee81e2_42aac63c",
        "filename": "tools/releasetools/ota_from_target_files.py",
        "patchSetId": 5
      },
      "lineNbr": 1062,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-04T00:22:55Z",
      "side": 1,
      "message": "nit: Gki (I think)",
      "range": {
        "startLine": 1062,
        "startChar": 21,
        "endLine": 1062,
        "endChar": 24
      },
      "revId": "095c5f818d5e49531a0d8fdb6e58590250d64fd4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}