{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e74380b5_d37142b1",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-03-21T07:04:04Z",
      "side": 0,
      "message": "How about you relax the read only check when `#[cfg(test)]`? That should be OK for CI while retaining the check on device.",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e02a7b48_38a39998",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-03-21T13:45:22Z",
      "side": 0,
      "message": "No, we cannot enforce read only check on device. I realized that painfully just now. I thought the files on RO partitions like system can have file permission of 444. But no, they are 644 and it is a mountain to climb over, if not impossible, to make build system to create files of 444 on these RO partitions.\n\nIt is simpler just leave the api unsafe and add a safety comment. In reality though, the partitions are RO even though the file permissions are not.",
      "parentUuid": "e74380b5_d37142b1",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eb3236d_60baffcd",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-03-21T14:05:43Z",
      "side": 0,
      "message": "OK.\n\nWhat will happen if I as a developer run `adb shell stop \u0026\u0026 adb sync \u0026\u0026 adb shell start` and the sync happen to push an updated version of a currently mmapped storage file?",
      "parentUuid": "e02a7b48_38a39998",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c197b5b7_f7f61bba",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-03-21T14:08:36Z",
      "side": 0,
      "message": "I think that chain of commands would trigger the init process to run again? So wouldn\u0027t all processes gets flushed anyway?",
      "parentUuid": "8eb3236d_60baffcd",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45c4ab2b_0f676657",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-03-21T14:21:50Z",
      "side": 0,
      "message": "No, `adb reboot` would cause init to run again. `adb shell stop` causes zygote and a some very few native services to get killed, but leave most of the native system intact. It\u0027s the recommended way of developing framework code as it doesn\u0027t require a full device reboot (so the kernel keeps running, your adb connection stays up, etc, not to mention it\u0027s much faster). Breaking this workflow would be a severe problem for platform developers.",
      "parentUuid": "c197b5b7_f7f61bba",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa075219_d01997e8",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-03-21T14:28:09Z",
      "side": 0,
      "message": "This problem already exists today. For whatever processes that do not restart in this workflow, if I made any changes, it would not take effect unless I reboot.",
      "parentUuid": "45c4ab2b_0f676657",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59fee136_34f7e1d6",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-03-21T14:29:38Z",
      "side": 0,
      "message": "I think even today, if you are developing some native processes that does not restart, you should adb reboot.",
      "parentUuid": "aa075219_d01997e8",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b9b0296_434a888c",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1937565
      },
      "writtenOn": "2024-03-21T15:18:46Z",
      "side": 0,
      "message": "Yes, native processes will require something different than `adb shell stop`. This is not about native processes, it\u0027s about frameworks/base.\n\nWhat I\u0027m worried about is if `aconfigd` crashes when a mmapped file changes, all processes that uses aconfig flags will crash (directly or when attempting to read a flag?), ultimately preventing the processes supposed to start via `adb shell start` from actually starting.\n\nI don\u0027t expect the init.rc rules to be able to recover from that.\n\nExamples: what if `servicemanager` dies? (`adb shell kill -9 \u003cpid\u003e` shows that the device becomes really borked -- adbd is still running, but very little continues to work; `adb shell reboot` is hanging.)\n\nWhat if `adbd` dies?",
      "parentUuid": "59fee136_34f7e1d6",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0122374b_5a30d92c",
        "filename": "tools/aconfig/aconfig_storage_read_api/src/mapped_file.rs",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-03-21T15:36:28Z",
      "side": 0,
      "message": "for flag read, individual processes holds their mmaped files in memory, not via aconfigd. So aconfigd crashing won\u0027t be in the way of reading flags. Today each process when start will look for /metadata/aconfig/boot/available_aconfig_storage_records.pb to find if the storage files they needs is available, if so, they find the storage file location from that pb file and then mmap it. processes do not communicate with aconfigd in flag read.",
      "parentUuid": "1b9b0296_434a888c",
      "range": {
        "startLine": 60,
        "startChar": 3,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "497f02d8c0208790f112aad79ed814f7147a0e42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}