{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e970f11b_14a19f85",
        "filename": "core/local_vendor_product.mk",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-01-29T19:15:55Z",
      "side": 1,
      "message": "We already have `LOCAL_VENDOR_MODULE` and `LOCAL_PRODUCT_MODULE`, which are the direct corollaries of Soongs\u0027 `mod.InVendor()` or `mod.InProduct()` that you used in aosp/2897612. Please use those instead of `LOCAL_IN_VENDOR` / `LOCAL_IN_PRODUCT`, and don\u0027t use the derivative variable `LOCAL_IN_VENDOR_OR_PRODUCT`. (Create a function to check both `LOCAL_VENDOR_MODULE` and `LOCAL_PRODUCT_MODULE` instead)",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 25
      },
      "revId": "15d5a3bd3b158f2e137696938671e13ea0dcf902",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3308730_6afd3c13",
        "filename": "core/local_vendor_product.mk",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2024-01-30T08:00:45Z",
      "side": 1,
      "message": "I moved usage of `LOCAL_IN_VENDOR_OR_PRODUCT` into function as you suggested, but I left definitions of `LOCAL_IN_VENDOR` / `LOCAL_IN_PRODUCT`, because in Soong there are some modules which are not installed in vendor / odm / product (thus not `LOCAL_VENDOR_MODULE` nor `LOCAL_ODM_MDOULE`), but should be built as vendor / product variant - such as LLNDK stubs. PTAL.",
      "parentUuid": "e970f11b_14a19f85",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 25
      },
      "revId": "15d5a3bd3b158f2e137696938671e13ea0dcf902",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d2cf15d_491676e1",
        "filename": "core/local_vendor_product.mk",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-30T08:30:54Z",
      "side": 1,
      "message": "+1 to Kiyoung.\n`InVendor()`/`InProduct()` shows a module is vendor/product image variant. It does not mean the module is specific to each partition. Different from `LOCAL_{image}_MODULE`, `LOCAL_IN_[VENDOR|PRODUCT]` is not settable from Android.mk.\nSo I agree to define `LOCAL_IN_[VENDOR|PRODUCT]` to reflect the `mod.InVendor()` or `mod.InProduct()`.",
      "parentUuid": "f3308730_6afd3c13",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 25
      },
      "revId": "15d5a3bd3b158f2e137696938671e13ea0dcf902",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d485b3f7_05c4f6be",
        "filename": "core/local_vendor_product.mk",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-01-30T21:57:36Z",
      "side": 1,
      "message": "\u003e `LOCAL_IN_[VENDOR|PRODUCT]` is not settable from Android.mk.\n\nIs there anything that prevents that right now?\n\nLooking at the revised version, it looks like `LOCAL_IN_PRODUCT \u003d\u003d LOCAL_PRODUCT_MODULE`, so could we remove `LOCAL_IN_PRODUCT` at least? And could `LOCAL_IN_VENDOR` be made a function that ORs `$(LOCAL_VENDOR_MODULE) $(LOCAL_ODM_MODULE) $(LOCAL_OEM_MODULE) $(LOCAL_PROPRIETARY_MODULE)`? And consider naming it something like `is_vendor_variant`, `LOCAL_IN_VENDOR` implies that it actually goes into the vendor partition which is confusing me.",
      "parentUuid": "4d2cf15d_491676e1",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 25
      },
      "revId": "15d5a3bd3b158f2e137696938671e13ea0dcf902",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ea6d0b9_100c5544",
        "filename": "core/local_vendor_product.mk",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2024-01-31T01:22:01Z",
      "side": 1,
      "message": "`LOCAL_IN_PRODUCT` is not exactly `LOCAL_PRODUCT_MODULE` for modules coming from Soong. In Makefile it exactly matches (even `LOCAL_IN_VENDOR` matches with combination of those variables as you mentioned), but it is not true from the Soong world.\n\nI hesitated to use the word \u0027variant\u0027 as this is mostly used from Soong, but if you are worried about confusing naming, what about `LOCAL_VENDOR_VARIANT`, `LOCAL_PRODUCT_VARIANT`, and `module-is-vendor-or-product-variant`?",
      "parentUuid": "d485b3f7_05c4f6be",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 25
      },
      "revId": "15d5a3bd3b158f2e137696938671e13ea0dcf902",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55190734_28bfdb38",
        "filename": "core/local_vendor_product.mk",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-02-01T18:04:55Z",
      "side": 1,
      "message": "I see, I didn\u0027t realize that it was handled differently in soong. I guess you\u0027re right that \"variant\" is kindof a soong thing, I guess this is fine.",
      "parentUuid": "9ea6d0b9_100c5544",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 25
      },
      "revId": "15d5a3bd3b158f2e137696938671e13ea0dcf902",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}