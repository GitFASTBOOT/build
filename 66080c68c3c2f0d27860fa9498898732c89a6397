{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aca70260_e4820ca2",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-07-10T09:17:40Z",
      "side": 1,
      "message": "I think the current dependency in line#3586 must be the same for building the system image in soong that is already handled by the soong dependency graph. So this must work as intended.\nBut I think it is better to put the PRODUCT_SOONG_DEFINED_SYSTEM_IMAGE output to the dependency instead of keeping the make dependency for the soong system image.",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4a10ee7_93067ca8",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2024-07-10T22:14:21Z",
      "side": 1,
      "message": "The file list processing has always been a bit weird anyway, because it\u0027s doing a find in the directory (line 3533), not operating on the kati\u0027s notion of what will be installed.\n\nDo you think this can go away if generating INSTALLED_FILES_FILE is also done by soong?",
      "parentUuid": "aca70260_e4820ca2",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5271c523_ee297ba3",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2024-07-11T01:53:16Z",
      "side": 1,
      "message": "+1 to have PRODUCT_SOONG_DEFINED_SYSTEM_IMAGE as direct dependency of BUILT_SYSTEMIMAGE if possible (if my understanding on the comment is correct).",
      "parentUuid": "d4a10ee7_93067ca8",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "146c4e16_c24d9e98",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-07-11T01:54:43Z",
      "side": 1,
      "message": "\u003e But I think it is better to put the PRODUCT_SOONG_DEFINED_SYSTEM_IMAGE output to the dependency instead of keeping the make dependency for the soong system image.\n\n\u003e +1 to have PRODUCT_SOONG_DEFINED_SYSTEM_IMAGE as direct dependency of BUILT_SYSTEMIMAGE if possible (if my understanding on the comment is correct).\n\nYou mean making `PRODUCT_SOONG_DEFINED_SYSTEM_IMAGE` the **only** dependency of `BUILT_SYSTEMIMAGE` right? `copy-one-file` automatically adds such dependency",
      "parentUuid": "5271c523_ee297ba3",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20668b84_0aff6714",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2024-07-11T01:56:03Z",
      "side": 1,
      "message": "Yes it does, but makes less visibility on the dependency ðŸ˜ž",
      "parentUuid": "146c4e16_c24d9e98",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31236177_25e5700f",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-07-11T02:01:50Z",
      "side": 1,
      "message": "Yes. That will simplify the dependency graph and make it easy to find what triggered a module to be installed. (Still we need to remove the filelist dependency that Joe commented above when we don\u0027t need both make and soong file lists anymore.)",
      "parentUuid": "146c4e16_c24d9e98",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6a1f711_1740ea95",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-07-11T02:01:55Z",
      "side": 1,
      "message": "\u003e Do you think this can go away if generating INSTALLED_FILES_FILE is also done by soong?\n\nYes I do. (also `$(systemimage_intermediates)/file_list.txt`)",
      "parentUuid": "20668b84_0aff6714",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d811d50_cc7324f0",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2024-07-11T02:04:13Z",
      "side": 1,
      "message": "We still need `$(systemimage_intermediates)/file_list.txt` which is required from file list diff ðŸ˜ž We can remove the file once we fully switch system image as Soong based (or at least being used as major solution, so diff can easily be found without the test).",
      "parentUuid": "d6a1f711_1740ea95",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1d96507_cc6c76d6",
        "filename": "core/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 3591,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-07-11T02:05:59Z",
      "side": 1,
      "message": "\u003e We still need $(systemimage_intermediates)/file_list.txt which is required from file list diff ðŸ˜ž \n\nThis is what I meant. (both INSTALLED_FILES_FILE and $(systemimage_intermediates)/file_list.txt (or soong equivalent))",
      "parentUuid": "3d811d50_cc7324f0",
      "range": {
        "startLine": 3591,
        "startChar": 0,
        "endLine": 3591,
        "endChar": 162
      },
      "revId": "66080c68c3c2f0d27860fa9498898732c89a6397",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}