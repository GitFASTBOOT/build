{
  "comments": [
    {
      "key": {
        "uuid": "f368b0b0_e8dd2675",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1311067
      },
      "writtenOn": "2018-06-19T11:39:03Z",
      "side": 1,
      "message": "If I change $cached_vars from a string to an array:\ncached_vars\u003d(`cat $T/build/envsetup.sh | tr \u0027()\u0027 \u0027  \u0027 | awk \u0027{for(i\u003d1;i\u003c\u003dNF;i++) if($i~/get_build_var/) print $(i+1)}\u0027 | sort -u | tr \u0027\\n\u0027 \u0027 \u0027`)\n\nIt turned out that zsh is functional but bash behaves oddly. $(get_build_var TARGET_ARCH) will get null value and results in \"Can\u0027t find toolchain for unknown architecture: \".\n\nIt is to do with zsh and bash syntax compatibility, I will need some help zsh experts.",
      "range": {
        "startLine": 51,
        "startChar": 16,
        "endLine": 51,
        "endChar": 146
      },
      "revId": "dbb9b83077f6fab58471c21582ea46f1646f12bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0610934d_ca930912",
        "filename": "envsetup.sh",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1311067
      },
      "writtenOn": "2018-06-19T11:39:03Z",
      "side": 1,
      "message": "This code section will fail in zsh because zsh has different behaviour and syntax in for loop.\nFor example:\n(bash)\n$ str\u003d\"1 2 3\"\n$ for i in $str; do echo var_$i; done\nvar_1\nvar_2\nvar_3\n\n(zsh)\n% str\u003d\"1 2 3\"\n% for i in $str; do echo var_$i; done\nvar_1 2 3\n% str\u003d(1 2 3)\n% for i in $str; do echo var_$i; done\nvar_1\nvar_2\nvar_3\n\nThis must be fixed in line 51 and 52.",
      "range": {
        "startLine": 82,
        "startChar": 4,
        "endLine": 89,
        "endChar": 25
      },
      "revId": "dbb9b83077f6fab58471c21582ea46f1646f12bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}