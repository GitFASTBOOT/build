{
  "comments": [
    {
      "key": {
        "uuid": "b83896b1_dc59795d",
        "filename": "core/Makefile",
        "patchSetId": 3
      },
      "lineNbr": 776,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-07-21T18:02:27Z",
      "side": 1,
      "message": "Shouldn\u0027t we combine this with the new variable? say if no TARGET_RECOVERY_RESOURCE_DIRS is specified, use this as the default?",
      "range": {
        "startLine": 776,
        "startChar": 0,
        "endLine": 776,
        "endChar": 84
      },
      "revId": "43fb1e32d0f227f15c45b876d8196b0637ba248c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad7a16a8_da70e501",
        "filename": "core/Makefile",
        "patchSetId": 3
      },
      "lineNbr": 776,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2015-07-22T03:08:34Z",
      "side": 1,
      "message": "(1). Strictly speaking, $(recovery_resources_private) and $(recovery_resources_common) are used for resource files(say *.png) in recovery mode.\n\n(2). What I want now is to put some misc files into recovery image, they may be additional debug binary tools and *.so files. These files are generated during android build, so it\u0027s not suitable to find files in the directory as dependency before whole android compilation.(#Line 777). The result of \"find xx -type f\" will be empty then.\n\n(3). What about naming the new var as TARGET_RECOVERY_MISC_DIRS other than TARGET_RECOVERY_RESOURCE_DIRS ?",
      "parentUuid": "b83896b1_dc59795d",
      "range": {
        "startLine": 776,
        "startChar": 0,
        "endLine": 776,
        "endChar": 84
      },
      "revId": "43fb1e32d0f227f15c45b876d8196b0637ba248c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdc02a18_3c7c7d5d",
        "filename": "core/Makefile",
        "patchSetId": 3
      },
      "lineNbr": 776,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-07-22T18:36:09Z",
      "side": 1,
      "message": "Regarding (2): no, you can\u0027t install files built from source by just copying them to the recovery directory without establishing dependency. Why do you need extra binaries and libraries in the recovery.img but not install them to the ramdisk?\nIt seems to me by design Android only allows to customize the resources at this point. Tao has more say than I do on this.",
      "parentUuid": "ad7a16a8_da70e501",
      "range": {
        "startLine": 776,
        "startChar": 0,
        "endLine": 776,
        "endChar": 84
      },
      "revId": "43fb1e32d0f227f15c45b876d8196b0637ba248c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dd2dee8_61a580b9",
        "filename": "core/Makefile",
        "patchSetId": 3
      },
      "lineNbr": 776,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2015-07-23T04:45:20Z",
      "side": 1,
      "message": "Why I need extra files:\n(a)engineer tools like logd and debuggerd, which are helpful for engineers when something is wrong in recovery mode. They are in /system/bin/, dependent libs in /system/lib. They are not in ramdisk.\n(b)vendor binary. If vendor doesn\u0027t support kernel frame buffer driver, we need customized \"/sbin/recovery\". We are trying to bring up frame buffer driver now, but before it\u0027s ready, we still need this vendor binary.\n\nIf Android by design allow customization of other files, yes, it\u0027s a good idea to establish proper dependency then.",
      "parentUuid": "cdc02a18_3c7c7d5d",
      "range": {
        "startLine": 776,
        "startChar": 0,
        "endLine": 776,
        "endChar": 84
      },
      "revId": "43fb1e32d0f227f15c45b876d8196b0637ba248c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdc02a18_735c7854",
        "filename": "core/Makefile",
        "patchSetId": 3
      },
      "lineNbr": 848,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2015-07-22T03:08:34Z",
      "side": 1,
      "message": "It\u0027s a little confusing to see this \"foreach\", since multiple $(recovery_resources_private) doesn\u0027t work here.\nWhat about simplify it as :\ncp -rf $(recovery_resources_private) $(TARGET_RECOVERY_ROOT_OUT)/",
      "range": {
        "startLine": 847,
        "startChar": 0,
        "endLine": 848,
        "endChar": 48
      },
      "revId": "43fb1e32d0f227f15c45b876d8196b0637ba248c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed808ec6_df60d7af",
        "filename": "core/Makefile",
        "patchSetId": 3
      },
      "lineNbr": 848,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-07-22T18:36:09Z",
      "side": 1,
      "message": "Yes, we should remove the $(foreach) call.",
      "parentUuid": "cdc02a18_735c7854",
      "range": {
        "startLine": 847,
        "startChar": 0,
        "endLine": 848,
        "endChar": 48
      },
      "revId": "43fb1e32d0f227f15c45b876d8196b0637ba248c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ddfa2f3_f2b946c4",
        "filename": "core/Makefile",
        "patchSetId": 3
      },
      "lineNbr": 852,
      "author": {
        "id": 1029303
      },
      "writtenOn": "2015-07-22T03:08:34Z",
      "side": 1,
      "message": "If opinion (3) is adopted, we can add new rule like:\n$(hide) $(foreach item,$(TARGET_RECOVERY_MISC_DIRS), \\\n    cp -rf $(item) $(TARGET_RECOVERY_ROOT_OUT)/$(newline))",
      "range": {
        "startLine": 851,
        "startChar": 0,
        "endLine": 852,
        "endChar": 58
      },
      "revId": "43fb1e32d0f227f15c45b876d8196b0637ba248c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}