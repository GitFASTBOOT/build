{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ef79eea5_048df106",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1076194
      },
      "writtenOn": "2024-07-18T14:26:25Z",
      "side": 1,
      "message": "Looks great!",
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46e68b13_b973637e",
        "filename": "ci/build_test_suites.py",
        "patchSetId": 7
      },
      "lineNbr": 157,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2024-07-19T21:45:35Z",
      "side": 1,
      "message": "Where does this come from?  And is it always going to have the empty list, or is it better to let the caller handle the missing elements?",
      "range": {
        "startLine": 157,
        "startChar": 11,
        "endLine": 157,
        "endChar": 31
      },
      "fixSuggestions": [
        {
          "fixId": "b38f498b_91260132",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "ci/build_test_suites.py",
              "range": {
                "startLine": 144,
                "startChar": 0,
                "endLine": 144,
                "endChar": 0
              },
              "replacement": "  \"\"\"Loads the build context from the BUILD_CONTEXT env var.\n\n  Returns:\n    The build context dict.\n\n  Raises:\n    Error: If the build context file is not found or is not valid JSON.\n  \"\"\"\n"
            },
            {
              "path": "ci/build_test_suites.py",
              "range": {
                "startLine": 153,
                "startChar": 0,
                "endLine": 157,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53b60d69_f676f4b8",
        "filename": "ci/build_test_suites.py",
        "patchSetId": 7
      },
      "lineNbr": 157,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-07-20T00:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46e68b13_b973637e",
      "range": {
        "startLine": 157,
        "startChar": 11,
        "endLine": 157,
        "endChar": 31
      },
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6734bef0_785daecb",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2024-07-19T21:45:35Z",
      "side": 1,
      "message": "Why all the newlines?",
      "range": {
        "startLine": 45,
        "startChar": 56,
        "endLine": 47,
        "endChar": 6
      },
      "fixSuggestions": [
        {
          "fixId": "fddd2c11_55864128",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "ci/optimized_targets.py",
              "range": {
                "startLine": 45,
                "startChar": 0,
                "endLine": 49,
                "endChar": 0
              },
              "replacement": "    if self.get_enabled_flag() in self.build_context.get(\u0027enabledBuildFeatures\u0027, []):\n      return self.package_outputs_impl()    \n"
            }
          ]
        }
      ],
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bedb1b7_b52df0af",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-07-20T00:46:37Z",
      "side": 1,
      "message": "they were put in by the python formatter, wouldn\u0027t the line be too long without them?",
      "parentUuid": "6734bef0_785daecb",
      "range": {
        "startLine": 45,
        "startChar": 56,
        "endLine": 47,
        "endChar": 6
      },
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d389799_7cc8e9c3",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1076194
      },
      "writtenOn": "2024-07-20T01:44:09Z",
      "side": 1,
      "message": "You can put enabledBuildFeatures on a separate line.\n```suggestion\n    features \u003d self.build_context.get(\u0027enabledBuildFeatures\u0027, [])\n    if self.get_enabled_flag() in features:\n\n```",
      "parentUuid": "4bedb1b7_b52df0af",
      "range": {
        "startLine": 45,
        "startChar": 56,
        "endLine": 47,
        "endChar": 6
      },
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b5a18e7_6eecbb90",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-07-22T17:43:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d389799_7cc8e9c3",
      "range": {
        "startLine": 45,
        "startChar": 56,
        "endLine": 47,
        "endChar": 6
      },
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f4af827_aa8a8f5d",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2024-07-19T21:45:35Z",
      "side": 1,
      "message": "Should this be an impl instead? This is going to return None instead of a boolean, which could be surprising.",
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4db117a_e3d8daa6",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-07-20T00:46:37Z",
      "side": 1,
      "message": "package_outputs isn\u0027t supposed to return a bool, it doesn\u0027t return anything. But now that you mention it let me remove the return from the base class as that shouldn\u0027t be there either.",
      "parentUuid": "7f4af827_aa8a8f5d",
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fde6c7e8_03a7c951",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2024-07-19T21:45:35Z",
      "side": 1,
      "message": "I don\u0027t think these should be hard coded here. Then this file needs to be maintained in addition to the build files for it and the test configuration.",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa46d660_bbc5cc2b",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-07-20T00:46:37Z",
      "side": 1,
      "message": "I don\u0027t think there\u0027s a way to query soong for what artifacts a module outputs is there? Then there\u0027s the fact of having to know which ones get put into dist etc. Adding more soong calls would slow down the build even more as well, I\u0027m not sure what the best way to determine these outputs is.",
      "parentUuid": "fde6c7e8_03a7c951",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a79ea44_9ed746d8",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1076194
      },
      "writtenOn": "2024-07-20T01:44:09Z",
      "side": 1,
      "message": "This is how the test configuration specifies to pull from catbox.zip and is what we need to key off of. We have unit tests tests in place to maintain this exact format. So I think this makes sense.\n\nThe pattern is android-$(test_suite_name).zip for cts-related zips so it\u0027s possible to skip the second part for these zips. This isn\u0027t true of all zips though so we can\u0027t generalize that pattern.",
      "parentUuid": "aa46d660_bbc5cc2b",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70dc1f30_bbc3b72e",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 135,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2024-07-19T21:45:35Z",
      "side": 1,
      "message": "This is hard to review. Can you put a comment explaining the inputs, the outputs and the algorithm?",
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5f2b089_195f74df",
        "filename": "ci/optimized_targets.py",
        "patchSetId": 7
      },
      "lineNbr": 135,
      "author": {
        "id": 1900272
      },
      "writtenOn": "2024-07-20T00:46:37Z",
      "side": 1,
      "message": "Added some comments.",
      "parentUuid": "70dc1f30_bbc3b72e",
      "revId": "8fcbbe49f98807a6d5c5eefed5ac6750408dcceb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}