{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "33411ee7_249a98ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T15:29:09Z",
      "side": 1,
      "message": "PTAL",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "104e9e7d_11e713ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T20:21:38Z",
      "side": 1,
      "message": "PTAL",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1796a25e_9fa73ef9",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 16
      },
      "lineNbr": 126,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-18T16:45:30Z",
      "side": 1,
      "message": "This needs to happen before `LoadOrStore`, otherwise one call to `MetadataForProjects` could add the `*projectIndex` with a nil channel to the map, and another call to `MetadataForProjects` could read it from the map and try to use it before the first call initializes it.",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04a57a4e_da6fce1f",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 16
      },
      "lineNbr": 126,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T17:20:45Z",
      "side": 1,
      "message": "Having to make a lot of channels only to throw them away argues strongly in favor of the original mutex.",
      "parentUuid": "1796a25e_9fa73ef9",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1fd911f_24e148d0",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 16
      },
      "lineNbr": 126,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-18T17:53:37Z",
      "side": 1,
      "message": "Making a channel is cheap, this has zero element size and zero buffer depth, so its basically a single malloc, similar to the cost of creating the `*projectIndex`: https://cs.android.com/android/platform/superproject/+/master:prebuilts/go/linux-x86/src/runtime/chan.go;l\u003d72;drc\u003d1cbb82abab1e31bb6b63b0d1fda8071b9e72510e\n\nIf benchmarking shows these two allocations are an issue, then it would be simple enough to save and reuse the unused `*projectIndex` if `loaded \u003d\u003d true`.",
      "parentUuid": "04a57a4e_da6fce1f",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca309289_d2cbb5ca",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 16
      },
      "lineNbr": 126,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T20:21:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1fd911f_24e148d0",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a28b22ea_42405142",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 16
      },
      "lineNbr": 165,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-18T16:45:30Z",
      "side": 1,
      "message": "There\u0027s no need to go back to the map here either, you can put the `pi` returned by `LoadOrStore` into a list.",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f87bfb1_cdc63abb",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 16
      },
      "lineNbr": 165,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T17:20:45Z",
      "side": 1,
      "message": "Ack\n\nThere is also no reason not to. I don\u0027t see the need for allocating another array.",
      "parentUuid": "a28b22ea_42405142",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaffcff7_46013b06",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 16
      },
      "lineNbr": 165,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2022-10-18T17:53:37Z",
      "side": 1,
      "message": "I expect going back to the map for every project to be more expensive than the channel allocation above.  A map lookup requires both synchronization and hashing the project string.",
      "parentUuid": "1f87bfb1_cdc63abb",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "696201a2_3450687f",
        "filename": "tools/compliance/projectmetadata/projectmetadata.go",
        "patchSetId": 16
      },
      "lineNbr": 165,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2022-10-18T20:21:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eaffcff7_46013b06",
      "revId": "a84cab0dc13777f27a016ebbe16504c3c3ccc356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}