{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "83784c31_06899af3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-04-19T16:47:57Z",
      "side": 1,
      "message": "Martin, any idea if this is desired or not?",
      "revId": "5f024ff6641a26cb829d1ea07239487d101c8112",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83631ac8_f7757c90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-04-20T17:31:20Z",
      "side": 1,
      "message": "Fine for resolving diffs, but seems like duplicating the list is going to cause future issues when it is only set in one of the lists.  Should the list be moved to a separate product file that both places can inherit from?",
      "revId": "5f024ff6641a26cb829d1ea07239487d101c8112",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc9449c3_2944519e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-04-21T09:19:34Z",
      "side": 1,
      "message": "That product file exists already. I was hoping there\u0027d be some traction on the bug I filed and that the goal should be removal of these 2 paths. I switched to inheriting that the cfi product makefile instead.",
      "parentUuid": "83631ac8_f7757c90",
      "revId": "5f024ff6641a26cb829d1ea07239487d101c8112",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2dcd1b4_b4ff80d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-21T11:14:19Z",
      "side": 1,
      "message": "Since cfi-common.mk only contains that list of paths it doesn\u0027t look that bad. After all, it only affects the APEXes in those locations, not anything else.",
      "parentUuid": "bc9449c3_2944519e",
      "revId": "5f024ff6641a26cb829d1ea07239487d101c8112",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6b2a083_39aa1c2d",
        "filename": "target/product/module_common.mk",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T22:45:11Z",
      "side": 1,
      "message": "Iiuc this enables CFI for com.android.media.swcodec. Do you need both directories to avoid a diff?\n\nIf it only enables CFI then it\u0027d be better to do that in the module rather than here. I.e. with\n\n  sanitizer {\n    cfi: true,\n  },\n\nin the cc_* modules that make up the APEX. I can imagine someone thought it was easier to set it in the product rather than adding those all over, though.\n\nI also see that enabling CFI has the side-effect to potentially enable installation of some vendor variant of VNDK libraries, but I doubt that\u0027s significant when building an APEX: https://cs.android.com/android/platform/superproject/+/master:build/soong/cc/library.go;l\u003d1563;drc\u003dmaster\n\nStepping back, I wonder why a module wants to control this - call frames get enough info by default to make stack traces sensible, don\u0027t they? I\u0027m not familiar enough with CFI to understand what it adds beyond that. Can you find a reviewer that knows the context a bit more?",
      "revId": "5f024ff6641a26cb829d1ea07239487d101c8112",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "043b2717_675bb63e",
        "filename": "target/product/module_common.mk",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-04-20T15:35:35Z",
      "side": 1,
      "message": "+Colin WDYT?",
      "parentUuid": "c6b2a083_39aa1c2d",
      "revId": "5f024ff6641a26cb829d1ea07239487d101c8112",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61bdd8e1_e715fbac",
        "filename": "target/product/module_common.mk",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-04-20T17:23:53Z",
      "side": 1,
      "message": "CFI is a security measure, as I understand it it prevents using arbitrary code sequences in ROP gadgets.\n\nI don\u0027t know why it is enabled at the product level instead of the module level, maybe it\u0027s easier to enforce it as a policy if it affects the whole directory rather than having to remember to put it on every module?",
      "parentUuid": "043b2717_675bb63e",
      "revId": "5f024ff6641a26cb829d1ea07239487d101c8112",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51e67dfb_d2168e0f",
        "filename": "target/product/module_common.mk",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2021-04-21T09:20:34Z",
      "side": 1,
      "message": "ack, let\u0027s discuss further on the bug about whether it should stay this way.",
      "parentUuid": "61bdd8e1_e715fbac",
      "revId": "5f024ff6641a26cb829d1ea07239487d101c8112",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}