{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cefb8bd6_e8424a8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-22T20:54:44Z",
      "side": 1,
      "message": "Partial review, I haven\u0027t looked in depth at the shell script, but I\u0027d suggest considering rewriting it in python or Go given the complexity.",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcc544c3_4ed6cc46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T00:06:52Z",
      "side": 1,
      "message": "I have removed all the conditional branches from the script that I can so it\u0027s really not all the complex any more.\n\nI prefer to keep it as a shell script because I do not want to encourage anyone to think it is a suitable place to inject any special logic or options.",
      "parentUuid": "cefb8bd6_e8424a8d",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55b6f32e_9006ecca",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 582,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-22T20:54:44Z",
      "side": 1,
      "message": "Is this double colon intentional?  I don\u0027t think ninja has any equivalent functionality, so I don\u0027t expect it is doing anything.",
      "range": {
        "startLine": 582,
        "startChar": 25,
        "endLine": 582,
        "endChar": 27
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f35d528_b89109b5",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 582,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T00:06:52Z",
      "side": 1,
      "message": "Ack\n\nYes, it is intentional. I forget the exact targets, but make can fail with errors about redefining targets or something.\n\nNot sure what make sends to ninja for them, but ninja doesn\u0027t complain.",
      "parentUuid": "55b6f32e_9006ecca",
      "range": {
        "startLine": 582,
        "startChar": 25,
        "endLine": 582,
        "endChar": 27
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e04b2e0_ff450d41",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 582,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-23T01:04:52Z",
      "side": 1,
      "message": "What are the errors?  Ninja definitely doesn\u0027t support Make\u0027s behavior (running a different rule to generate the output based on which input files were changed), so the behavior is going to depend on what Kati does to translate it.",
      "parentUuid": "5f35d528_b89109b5",
      "range": {
        "startLine": 582,
        "startChar": 25,
        "endLine": 582,
        "endChar": 27
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f14c064_a63bf940",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 582,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T04:21:40Z",
      "side": 1,
      "message": "I am running another `m all` having replaced double-colon with colon.\n\nI am a little uneasy though. When I ran into the errors, I was building for taimen, and now I am building for sunfish.\n\nEven if it builds without error for sunfish, I worry about breakage for older or less-common configurations. I wouldn\u0027t want a situation where it gets past pre-submit and maybe even automerges to a host or two before blowing up on us.\n\n\nEven if make throws away one of the rules, I would prefer that to breakage.",
      "parentUuid": "6e04b2e0_ff450d41",
      "range": {
        "startLine": 582,
        "startChar": 25,
        "endLine": 582,
        "endChar": 27
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "038b820b_81cbd6f1",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 582,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-23T19:08:49Z",
      "side": 1,
      "message": "You can test pretty extensively with forrest to cover at least all of the pixel devices.  You could also check for duplicates manually with something like:\n\n$(if ALL_MODULES.$(1).LICENSE_METADATA_DEFINED,$(error Duplicate license metadata rules for $(1)))\n$(eval ALL_MODULES.$(1).LICENSE_METADATA_DEFINED :\u003d true)\n\nIf you did it in build-license-metadata it wouldn\u0027t be hard to change it to skip the second rule, so you could have an easy fix-forward if it caused problems.\n\nAlternatively, how about leaving a TODO here to remove it, then if the CL to remove it causes problems it will be easy to revert.",
      "parentUuid": "0f14c064_a63bf940",
      "range": {
        "startLine": 582,
        "startChar": 25,
        "endLine": 582,
        "endChar": 27
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7819bd3b_4d5047f3",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 582,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T20:49:49Z",
      "side": 1,
      "message": "Right now, I am dealing with the Wembley self-reference to see if I can get a green presubmit. After that is done, I will try again with single-colon to see if it turns up anything. If it is still green, I will be willing to go with that.",
      "parentUuid": "038b820b_81cbd6f1",
      "range": {
        "startLine": 582,
        "startChar": 25,
        "endLine": 582,
        "endChar": 27
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a41aae8_866f1120",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 583,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-22T20:54:44Z",
      "side": 1,
      "message": "This doesn\u0027t do anything any more, might as well remove them from new rules.",
      "range": {
        "startLine": 583,
        "startChar": 1,
        "endLine": 583,
        "endChar": 8
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0df6fcbb_718524b8",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 583,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T00:06:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a41aae8_866f1120",
      "range": {
        "startLine": 583,
        "startChar": 1,
        "endLine": 583,
        "endChar": 8
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e442360_7ce6d805",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 601,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-22T20:54:44Z",
      "side": 1,
      "message": "Adding this dependency directly to the module name will miss various other ways to build the module, for example mma which builds MODULES-IN-path-to-dir.  The correct way to add a file to be built when the module is requested on the command line is through $(my_register_name).  If you want it to build whenever the module is built, including via `m system.img` or `m checkbuild`, then it should be a dependency of $(LOCAL_BUILT_MODULE).",
      "range": {
        "startLine": 601,
        "startChar": 0,
        "endLine": 601,
        "endChar": 4
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8b0a52e_c690b34e",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 601,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T00:06:52Z",
      "side": 1,
      "message": "This is run for every $(1) in $(ALL_MODULES), which is every value of $(my_register_name). Would it help if I changed the comment at line 576 from \"module\" to \"my_register_name\" ?",
      "parentUuid": "9e442360_7ce6d805",
      "range": {
        "startLine": 601,
        "startChar": 0,
        "endLine": 601,
        "endChar": 4
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2abe671_7aab0f49",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 601,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-23T01:04:52Z",
      "side": 1,
      "message": "Yes, that would help.",
      "parentUuid": "e8b0a52e_c690b34e",
      "range": {
        "startLine": 601,
        "startChar": 0,
        "endLine": 601,
        "endChar": 4
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7b56f99_b3d4fd1f",
        "filename": "core/definitions.mk",
        "patchSetId": 31
      },
      "lineNbr": 601,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T04:21:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2abe671_7aab0f49",
      "range": {
        "startLine": 601,
        "startChar": 0,
        "endLine": 601,
        "endChar": 4
      },
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cd8622d_90ed3d60",
        "filename": "core/main.mk",
        "patchSetId": 31
      },
      "lineNbr": 1408,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-22T20:54:44Z",
      "side": 1,
      "message": "Can you add a comment here that this could be done per-module except that it needs to happen after fix-notice-deps?  Maybe with a TODO to remove fix-notice-deps and move build-license-metadata into base_rules.mk if you expect that to be feasible in the future?",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59341ce3_5f2947e8",
        "filename": "core/main.mk",
        "patchSetId": 31
      },
      "lineNbr": 1408,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T00:06:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6cd8622d_90ed3d60",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "467ffd97_bdcf617d",
        "filename": "core/notice_files.mk",
        "patchSetId": 31
      },
      "lineNbr": 170,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-22T20:54:44Z",
      "side": 1,
      "message": "Can this stay as an error?  Warnings just get ignored.",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b34e127_dd8dc460",
        "filename": "core/notice_files.mk",
        "patchSetId": 31
      },
      "lineNbr": 170,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T00:06:52Z",
      "side": 1,
      "message": "Ack\n\nNo, I don\u0027t believe it can. There are modules that currently have no license text because there is no LICENSE or NOTICE file in the directory with the makefile or Android.bp file.\n\nAfter the large-scale-change runs, every makefile and Android.bp file will set an explicit reference to one or more license text files. All the makefiles will assign to LOCAL_NOTICE_FILE, and all the Android.bp files will reference a license module with a license_text property.\n\n\nIn the cases in question with no LICENSE or NOTICE file in the directory, the script for the large-scale-change will find the license text files in a parent directory instead. Or in the case of 1p code with an Android.bp, it will reference a global Apache 2.0 license module.\n\n\nIn the new way of doing things, having a license text with no place to put it won\u0027t be an error because the notice files for the UI won\u0027t depend on copying license texts to directories reflecting system or vendor etc. We can just leave the license text files where they are.\n\nEither the license text file will be in the dependency graph of some notice file, in which case we know exactly where to put it, or it will not, in which case we don\u0027t have to put it anywhere.\n\nIn the interim, having a license text file with no place to copy it won\u0027t change anything from what we have now where we don\u0027t have a license text file (and have no place to copy it.)\n\nI am doing a run of the large-scale-change to confirm. I won\u0027t have a result for 3 or 4 hours, but I am confident the warnings will appear after the lsc runs and I rebuilt all.",
      "parentUuid": "467ffd97_bdcf617d",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a48e1b3d_7570658a",
        "filename": "core/notice_files.mk",
        "patchSetId": 31
      },
      "lineNbr": 170,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-23T01:04:52Z",
      "side": 1,
      "message": "Can you leave a TODO here to remove the warning after the LSC?",
      "parentUuid": "0b34e127_dd8dc460",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7993aae3_a6151e9d",
        "filename": "core/notice_files.mk",
        "patchSetId": 31
      },
      "lineNbr": 170,
      "author": {
        "id": 1359095
      },
      "writtenOn": "2020-12-23T04:21:40Z",
      "side": 1,
      "message": "I have confirmed that after running the LSC, this branch of code gets hit:\n[ 46% 108/232] including external/robolectric-shadows/Android.mk ...\nbuild/make/core/notice_files.mk:170: warning: Cannot determine where to install NOTICE file for Run_robolectric_shadows_androidx_fragment_tests\n[ 58% 136/232] including hardware/interfaces/configstore/1.1/default/Android.mk ...\nbuild/make/core/notice_files.mk:170: warning: Cannot determine where to install NOTICE file for disable_configstore\n[ 73% 170/232] including packages/apps/Launcher3/Android.mk ...\nbuild/make/core/notice_files.mk:170: warning: Cannot determine where to install NOTICE file for RunLauncherRoboTests\n\n\nI would expect most or all of this code will get deleted as clean-up after replacing the NOTICE.xml.gz target rules with ones based on the .meta_lic files without needing a TODO per se.\n\nAssuming you have no objections, I will delete the warning now. The plan is to change the notice files before release S goes out in any case.",
      "parentUuid": "a48e1b3d_7570658a",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9cbf05c_17a0b97f",
        "filename": "core/notice_files.mk",
        "patchSetId": 31
      },
      "lineNbr": 170,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2020-12-23T19:08:49Z",
      "side": 1,
      "message": "SGTM.  It looks like at least the disable_configstore warning is from an executable that is marked not installable, which doesn\u0027t need any handling here.  You could probably produce an allowlist of module types that are not relevant here to skip the error, but removing it is also fine with me.",
      "parentUuid": "7993aae3_a6151e9d",
      "revId": "20b22274d0f4546068ddcd605445d2884ab42e20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}