{
  "comments": [
    {
      "key": {
        "uuid": "bbd2c82b_2794ad84",
        "filename": "core/base_rules.mk",
        "patchSetId": 1
      },
      "lineNbr": 543,
      "author": {
        "id": 1088076
      },
      "writtenOn": "2018-01-08T22:20:27Z",
      "side": 1,
      "message": "this matches one more more characters, not just a single character. I\u0027m wondering if there is pattern to match single character? So far I haven\u0027t found a way to do that. (guess there can be a more complicated way to do the matching).",
      "revId": "7a9c2b1101977b480f04498ecca1fdd7c7ecf8af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c077769d_46d4dc49",
        "filename": "core/base_rules.mk",
        "patchSetId": 1
      },
      "lineNbr": 543,
      "author": {
        "id": 1083173
      },
      "writtenOn": "2018-01-08T22:22:43Z",
      "side": 1,
      "message": "Yeah this will match device-tes\"ts\" and general-tes\"ts\" so we\u0027ll need something more specific.",
      "parentUuid": "bbd2c82b_2794ad84",
      "revId": "7a9c2b1101977b480f04498ecca1fdd7c7ecf8af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d04d5b1_5e663e22",
        "filename": "core/base_rules.mk",
        "patchSetId": 1
      },
      "lineNbr": 543,
      "author": {
        "id": 1088076
      },
      "writtenOn": "2018-01-08T22:53:41Z",
      "side": 1,
      "message": "So far the only workaround I found is to use bash, mk text operation doesn\u0027t even have length function.",
      "parentUuid": "c077769d_46d4dc49",
      "revId": "7a9c2b1101977b480f04498ecca1fdd7c7ecf8af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ab3cdb8_b1586632",
        "filename": "core/base_rules.mk",
        "patchSetId": 1
      },
      "lineNbr": 543,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2018-01-08T22:58:02Z",
      "side": 1,
      "message": "I don\u0027t think that this is the right logic anyway -- why would we forbid auto-generated configs for our major test suites?\n\nBash isn\u0027t an option, though we could filter-out %tests before/after this filter.",
      "parentUuid": "1d04d5b1_5e663e22",
      "revId": "7a9c2b1101977b480f04498ecca1fdd7c7ecf8af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b634f5d4_a83e15fb",
        "filename": "core/base_rules.mk",
        "patchSetId": 1
      },
      "lineNbr": 543,
      "author": {
        "id": 1088076
      },
      "writtenOn": "2018-01-08T23:40:43Z",
      "side": 1,
      "message": "The original problem for CTS is that there are many auxiliary modules in CTS that are not test, but included in the suite so they can be part of device-tests.zip. Also, individual CTS test has some special options, so auto-generating won\u0027t help much anyway.\n\nIn this case, we just found another ?ts suite has the similar issue.\n\nFilter out %tests can be a workaround for now. I think we don\u0027t have other suite name ends with *ts/tests",
      "parentUuid": "5ab3cdb8_b1586632",
      "revId": "7a9c2b1101977b480f04498ecca1fdd7c7ecf8af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea1cb5f5_aaaf582d",
        "filename": "core/base_rules.mk",
        "patchSetId": 1
      },
      "lineNbr": 543,
      "author": {
        "id": 1083173
      },
      "writtenOn": "2018-01-09T00:34:48Z",
      "side": 1,
      "message": "So the autogenerated configs are for the gtests and instrumentation tests that don\u0027t belong to any *TS.\n\nBefore atest the only way to execute them locally was to manually push them to the device and execute them. Originally we were encouraging developers to write these configs so that atest and tradefed would know how to execute them but many devs got turned off by this extra step and replied essentially \"These files are all nearly identical why do I need to provide it?\"\n\nBut now we are overgenerating the configs into areas like CTS/PTS whose developers want finer grain control over what is included in those suites.\n\n\nAny alternative fix here is we only copy autogenerated configs to the common testcase directory (and ensure device-tests.zip and general-tests.zip still includes them) and ignore the extra suite specific directories.",
      "parentUuid": "b634f5d4_a83e15fb",
      "revId": "7a9c2b1101977b480f04498ecca1fdd7c7ecf8af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}