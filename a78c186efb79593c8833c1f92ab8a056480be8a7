{
  "comments": [
    {
      "key": {
        "uuid": "9b47124e_24038a13",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-11-18T09:51:59Z",
      "side": 1,
      "message": "Unfortunately, with mainline, we do expect some classes to be unresolved at the time of dexpreopt.",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39e17122_cab47a52",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1206688
      },
      "writtenOn": "2019-11-18T13:12:29Z",
      "side": 1,
      "message": "Could we add a flag to mark which jar should be skipped by --abort-on-soft-verifier-error? e.g., LOCAL_DEX_PREOPT_DONT_ABORT_ON_SOFT_VERIFIER_ERROR",
      "parentUuid": "9b47124e_24038a13",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c9f3718_fb71b43c",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-11-18T14:35:14Z",
      "side": 1,
      "message": "That would mean knowing which jar references code in mainline modules - as it can literally happen to any one at any time I don\u0027t think that\u0027s feasible.",
      "parentUuid": "39e17122_cab47a52",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44cff12d_dad37201",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1206688
      },
      "writtenOn": "2019-11-19T01:57:11Z",
      "side": 1,
      "message": "Could we add a file that saves the skipped methods, and the file is used to input dex2oatd(debug only) for method level skipping? If we enable this function on dex2oatd only, it can avoid affect normal dex2oat.",
      "parentUuid": "2c9f3718_fb71b43c",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "724fd81f_159524c2",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-11-19T09:30:32Z",
      "side": 1,
      "message": "This would be part of the build right? I fear this will be complicated to implement and later maintain.",
      "parentUuid": "44cff12d_dad37201",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6eede334_80b0de6e",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1206688
      },
      "writtenOn": "2019-11-25T02:50:33Z",
      "side": 1,
      "message": "My idea is roundabout. I don\u0027t know whether the unresolved issues can be resolved directly.\nCould you give an unresolved class example? Could I know the unresolved cause?",
      "parentUuid": "724fd81f_159524c2",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60fc4646_57d9f5db",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-11-25T08:09:38Z",
      "side": 1,
      "message": "For example, using classes of the conscrypt module. We\u0027re not making it part of dex2oat because conscrypt can be updated.",
      "parentUuid": "6eede334_80b0de6e",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94827daa_3bc21cc1",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1371486
      },
      "writtenOn": "2019-11-26T05:19:07Z",
      "side": 1,
      "message": "I tried to suppose some cases we might face. If I am wrong, please help to correcting me. Thanks.\nCase 1: If the conscrypt module is updated without interface changed, the classes of refer to the conscrypt module is unnecessary to be re-dexopted.\nCase 2: If the conscrypt module is updated with interface changed, the classes of refer to the conscrypt module is necessary to be re-dexopted during booting.\nAre you worry about case 2 will cause a longer boot time so it is not a part of dex2oat?\n\nActually, I am facing about 20,000+ soft verification failures in our internal load. I tried to let these failure module owners to understand that those failures will cause a performance impact, but that is not a efficient method. If we can make a mandatory error to notice module owners, that is the best solution for the scenario.",
      "parentUuid": "60fc4646_57d9f5db",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "512cc6e9_94f728ce",
        "filename": "core/dex_preopt_config.mk",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-11-26T10:17:35Z",
      "side": 1,
      "message": "It\u0027s not just interface change - you only need to have a private field added to a conscrypt class to mess things up. So we worry of both case 1 and 2 actually.\n\nI\u0027m surprised about the soft verification failures you\u0027re getting. The dex code is supposed to get compiled through javac and d8, which at some point must have had the whole classpath available and therefore have been able to resolve all classes. Isn\u0027t the problem that the jars are dex2oated in isolation?",
      "parentUuid": "94827daa_3bc21cc1",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "a78c186efb79593c8833c1f92ab8a056480be8a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}