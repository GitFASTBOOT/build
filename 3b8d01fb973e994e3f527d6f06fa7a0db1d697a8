{
  "comments": [
    {
      "key": {
        "uuid": "2515c110_07a6b24d",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 750,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-12-12T07:49:37Z",
      "side": 1,
      "message": "why don\u0027t you add PRODUCT_USE_VNDK here so that this can be overridden by PRODUCT_USE_VNDK_OVERRIDE?",
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "676d846a_161841e7",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 750,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2017-12-12T08:37:43Z",
      "side": 1,
      "message": "If we use PRODUCT_USE_VNDK, PRODUCT_USE_VNDK\u003dtrue indicates that the BOARD_VNDK_VERSION shall be set to \"current\" only if BOARD_VNDK_VERSION is not defined.\nPRODUCT_USE_VNDK\u003dfalse does nothing. Am I right?\nAlso we don\u0027t need to define BOARD_VNDK_VERSION_OVERRIDE that was actually not the scope of this CL.",
      "parentUuid": "2515c110_07a6b24d",
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f74bf143_93658013",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 750,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2017-12-12T09:19:54Z",
      "side": 1,
      "message": "Defined PRODUCT_USE_VNDK but not added here.",
      "parentUuid": "676d846a_161841e7",
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7d29827_b518cfa6",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 758,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-12-12T07:49:37Z",
      "side": 1,
      "message": "I would like to rewrite this so that we can specify the first API level that a req becomes true by default.\n\nrequirements :\u003d \\\n    PRODUCT_XXX:27 \\\n    PRODUCT_YYY:28 \\\n    PRODUCT_ZZZ:27 \\\n    \n$(foreach pair,$(requirements),\\\n    $(eval _name :\u003d $(firstword $(subst :,$(space),$(pair)))) \\\n    $(eval _ver :\u003d $(lastword $(subst :,$(space),$(pair)))) \\\n    $(eval _default :\u003d $$(if $$(call math_gt_or_eq,$(...API_LEVEL),$$(_ver)),true,false)) \\\n    $(eval $$(_name) :\u003d $$(if $($$(_name)_OVERRIDE),$($$(_name)_OVERRIDE),$$(_default))) \\\n\n(maybe I missed a few $ or (..) pair. Don\u0027t trust this code)",
      "range": {
        "startLine": 755,
        "startChar": 0,
        "endLine": 758,
        "endChar": 82
      },
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5eb4679c_b8ac97d8",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 758,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2017-12-12T08:37:43Z",
      "side": 1,
      "message": "LGTM. But I am not sure if we can use 28 for PRODUCT_USE_VNDK.",
      "parentUuid": "a7d29827_b518cfa6",
      "range": {
        "startLine": 755,
        "startChar": 0,
        "endLine": 758,
        "endChar": 82
      },
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2140d947_b04cde24",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 758,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2017-12-12T08:45:01Z",
      "side": 1,
      "message": "That looks overly complicated for what\u0027s needed here. And yes, we\u0027d need to use \u003e, not \u003e\u003d, since P doesn\u0027t have a number until the API is locked.",
      "parentUuid": "5eb4679c_b8ac97d8",
      "range": {
        "startLine": 755,
        "startChar": 0,
        "endLine": 758,
        "endChar": 82
      },
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e59a9343_9726f3c3",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 758,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2017-12-12T09:19:54Z",
      "side": 1,
      "message": "Ok, I will have separate configuration for BOARD_VNDK_VERSION.",
      "parentUuid": "2140d947_b04cde24",
      "range": {
        "startLine": 755,
        "startChar": 0,
        "endLine": 758,
        "endChar": 82
      },
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33dd7d85_e934642c",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 778,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-12-12T07:49:37Z",
      "side": 1,
      "message": "This is weird as you are using BOARD_VNDK_VERSION_OVERRIDE as boolean and a version number.",
      "range": {
        "startLine": 775,
        "startChar": 0,
        "endLine": 778,
        "endChar": 54
      },
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33656229_a7169364",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 778,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2017-12-12T08:37:43Z",
      "side": 1,
      "message": "Yes, I agree with your comment. To avoid this, I have to define BOARD_VNDK_DISABLE boolean variable as well to reset BOARD_VNDK_VERSION if the value is true.\nWhich one looks better? Or we may drop this as I commented in line#750.",
      "parentUuid": "33dd7d85_e934642c",
      "range": {
        "startLine": 775,
        "startChar": 0,
        "endLine": 778,
        "endChar": 54
      },
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ec33321_b2e757e9",
        "filename": "core/config.mk",
        "patchSetId": 2
      },
      "lineNbr": 778,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2017-12-12T09:19:54Z",
      "side": 1,
      "message": "I removed BOARD_VNDK_VERSION_OVERRIDE and defined PRODUCT_USE_VNDK and _OVERRIDE instead.",
      "parentUuid": "33656229_a7169364",
      "range": {
        "startLine": 775,
        "startChar": 0,
        "endLine": 778,
        "endChar": 54
      },
      "revId": "3b8d01fb973e994e3f527d6f06fa7a0db1d697a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}