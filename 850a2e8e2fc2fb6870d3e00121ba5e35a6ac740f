{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0baa9871_35ae8923",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-12-13T19:46:16Z",
      "side": 1,
      "message": "it doesn\u0027t do that though, right? it just means someone\u0027s set this property...",
      "revId": "850a2e8e2fc2fb6870d3e00121ba5e35a6ac740f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ce602c1_72ed1507",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-12-13T18:08:02Z",
      "side": 1,
      "message": "No strong objection, but it seems a little roundabout to add a property just to propagate a build flag that otherwise doesn\u0027t affect anything at runtime.  It would be fairly easy for the property to become disconnected from the compiler flag accidentally.\n\nYou\u0027re already parsing the init ELF data, it might be a little hacky and I\u0027m not sure Elliott would agree, but you could use `#ifdef __BIONIC_NO_PAGE_SIZE_MACRO` to add a symbol to the init or libc binary, and then your VTS test would be checking that the flag was getting to the compiler.",
      "revId": "850a2e8e2fc2fb6870d3e00121ba5e35a6ac740f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19dd3e68_96a484a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2023-12-13T18:47:54Z",
      "side": 1,
      "message": "@enh@google.com, thoughts on the approach Colin is suggesting? I\u0027m fine with that as well.",
      "parentUuid": "1ce602c1_72ed1507",
      "revId": "850a2e8e2fc2fb6870d3e00121ba5e35a6ac740f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}