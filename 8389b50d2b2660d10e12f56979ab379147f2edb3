{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b5eb92e5_dc0a9475",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1981530
      },
      "writtenOn": "2024-10-30T14:24:41Z",
      "side": 1,
      "message": "If `buf` is empty, but `head \u003e 1`, this would panic, since `usize` can\u0027t be negative. What if we write `buf.len() \u003c *head + 2`? Same in other functions.",
      "revId": "8389b50d2b2660d10e12f56979ab379147f2edb3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df4fce53_abe938dc",
        "filename": "tools/aconfig/aconfig_storage_file/src/lib.rs",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1981530
      },
      "writtenOn": "2024-10-30T14:28:35Z",
      "side": 1,
      "message": "To be extra safe (in addition to these explicit bound checks), we could replace `buf[*head..*head + num_bytes]` with `buf.get(*head..*head + num_bytes)`, which returns `None` instead of panicking if the range is out of bounds. We could turn that into a result with `ok_or`.",
      "revId": "8389b50d2b2660d10e12f56979ab379147f2edb3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}