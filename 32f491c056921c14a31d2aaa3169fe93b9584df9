{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9d59df1f_5e571e8d",
        "filename": "tools/product_config_go/README.md",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2020-10-28T11:48:00Z",
      "side": 1,
      "message": "Will you also have a means to read variables values?\n\nThis is relevant because Starlark, being functional, constrains data flow to function arguments and return values and set() and setFinal() seem to introduce another data conduit.\n\nThe transformation to functional style can be done \"mechanically\" because something like this:\n\ndef main():\n  one()\n  two()\n\ndef one():\n  set(\"foo\", \"one\")\n\ndef two():\n  print(get(\"foo\"))\n\ncan be rewritten by explicitly threading the product variable map like this:\n\ndef main():\n  vars \u003d {}\n  one(vars)\n  two(vars)\n\ndef one(vars):\n  vars[\"foo\"] \u003d \"one\"\n\ndef two(vars):\n  print(vars[\"foo\"])\n\n, all one needs is to explicitly thread the map around.",
      "range": {
        "startLine": 48,
        "startChar": 6,
        "endLine": 48,
        "endChar": 9
      },
      "revId": "32f491c056921c14a31d2aaa3169fe93b9584df9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb04c65c_f177ead3",
        "filename": "tools/product_config_go/README.md",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2020-10-27T08:35:00Z",
      "side": 1,
      "message": "What will this be used for? \n\nThis is relevant because one can\u0027t implement this in the general case within Bazel; we can do some trickery with external repositories, if need be, but I\u0027d like to know the use case before committing to that approach.",
      "range": {
        "startLine": 61,
        "startChar": 6,
        "endLine": 61,
        "endChar": 19
      },
      "revId": "32f491c056921c14a31d2aaa3169fe93b9584df9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ced066c7_67d97887",
        "filename": "tools/product_config_go/README.md",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1344584
      },
      "writtenOn": "2020-10-27T17:26:12Z",
      "side": 1,
      "message": "This is to help extracting configuration variables from makefiles: loadGenerated invokes the extractor which generates \u0027set(\"VAR\", \"value\")\u0027 statements. They are executed just as \u0027set/setFinal/appendTo\u0027 read from .star files.\nIs your concern that this is not OS-neutral?",
      "parentUuid": "eb04c65c_f177ead3",
      "range": {
        "startLine": 61,
        "startChar": 6,
        "endLine": 61,
        "endChar": 19
      },
      "revId": "32f491c056921c14a31d2aaa3169fe93b9584df9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d3af5e1_264f3c61",
        "filename": "tools/product_config_go/README.md",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2020-10-28T11:48:00Z",
      "side": 1,
      "message": "My concern is that this function is not implementable in Bazel: neither the loading nor the analysis phase allows for execution of arbitrary shell binaries (in fact, all they can do is read and evaluate .bzl files)\n\nThis may or may not be a problem, depending on how you are planning to use loadGenerated().\n\nIs my understanding correct that the \"extractor\" means the code that will take the Makefiles and extract the variable values from them? Do you know already how this will work? \n\nWhat I hope is that the extractor will be one of the first things that need to be run. Then we could do a few things:\n\n1. Invoke it before Bazel and load the Starlark files it generates using the regular mechanisms to load Starlark\n2. Invoke it in a Bazel external repository (which can run arbitrary shell binaries)",
      "parentUuid": "ced066c7_67d97887",
      "range": {
        "startLine": 61,
        "startChar": 6,
        "endLine": 61,
        "endChar": 19
      },
      "revId": "32f491c056921c14a31d2aaa3169fe93b9584df9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}