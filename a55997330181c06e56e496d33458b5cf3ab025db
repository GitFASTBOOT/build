{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "83cd3da7_9cd0c77f",
        "filename": "core/definitions.mk",
        "patchSetId": 1
      },
      "lineNbr": 2944,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-06-21T23:41:12Z",
      "side": 1,
      "message": "I wonder if we should run this directly and add a dependency instead of relying on `$PATH`.  For most toybox tools I\u0027m not too worried about rerunning them when toybox changes, but gzip can produce varied enough output that it\u0027s probably worth rerunning it whenever it changes.",
      "revId": "a55997330181c06e56e496d33458b5cf3ab025db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "727856c6_bd129d03",
        "filename": "core/definitions.mk",
        "patchSetId": 1
      },
      "lineNbr": 2944,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-22T18:40:09Z",
      "side": 1,
      "message": "how would we implement that? and are you sure you don\u0027t just want to do it for all of toybox? so far tar and sed have been the most problematic for me. as long as it\u0027s not too expensive (which aiui is why _toolchain_ updates don\u0027t cause full rebuilds), i\u0027d love to just have toybox prebuilt updates cause the relevant subset of rules to be rerun. iirc dwillemsen told me toybox isn\u0027t a significant chunk of build time last time he looked?",
      "parentUuid": "83cd3da7_9cd0c77f",
      "revId": "a55997330181c06e56e496d33458b5cf3ab025db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1599286_6894f527",
        "filename": "core/definitions.mk",
        "patchSetId": 1
      },
      "lineNbr": 2944,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-06-22T19:53:36Z",
      "side": 1,
      "message": "There unfortunately isn\u0027t a good way to do it automatically unless you change the path to toybox and its tool symlinks each time you update it.  To do it manually you would basically leave everything as it is now, rename `MINIGZIP` to `GZIP` and set it to the path to the prebuilt.  Anything that uses it should then add `$(GZIP)` to its dependencies.",
      "parentUuid": "727856c6_bd129d03",
      "revId": "a55997330181c06e56e496d33458b5cf3ab025db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2840046_2ec8e3ce",
        "filename": "core/definitions.mk",
        "patchSetId": 1
      },
      "lineNbr": 2944,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-22T20:04:56Z",
      "side": 1,
      "message": "i suspect most people wouldn\u0027t use that anyway (because they\u0027ll try `gzip` first, it\u0027ll work, and they\u0027ll move on with their lives; and even if they do use `$(GZIP)` i bet they won\u0027t realize/remember to _also_ add that as a dependency, and that will still work)?\n\ni don\u0027t have a strong opinion (beyond \"ideally toybox would be an implicit dependency for all rules using toybox\"), so just let me know whether you prefer `gzip` or `$(GZIP)`.",
      "parentUuid": "c1599286_6894f527",
      "revId": "a55997330181c06e56e496d33458b5cf3ab025db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4e8b251_d99ce166",
        "filename": "core/definitions.mk",
        "patchSetId": 1
      },
      "lineNbr": 2944,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2023-06-22T20:06:04Z",
      "side": 1,
      "message": "`$(GZIP)` at least lets you do it right if you want/need to.",
      "parentUuid": "b2840046_2ec8e3ce",
      "revId": "a55997330181c06e56e496d33458b5cf3ab025db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed04c6bc_1e5039d4",
        "filename": "core/definitions.mk",
        "patchSetId": 1
      },
      "lineNbr": 2944,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-22T23:11:49Z",
      "side": 1,
      "message": "yeah, that makes sense.\n\ndid you want me to make any/all of the callers in this topic use `$(GZIP)`? (at the moment we have a tie --- there are the same number of .bp files calling `gzip` as there are `$(location minigzip)` users!) i\u0027m assuming you think bootable/recovery should be `$(GZIP)`, and frameworks doesn\u0027t care, and  i\u0027m not sure about mkbootimg?",
      "parentUuid": "b4e8b251_d99ce166",
      "revId": "a55997330181c06e56e496d33458b5cf3ab025db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}