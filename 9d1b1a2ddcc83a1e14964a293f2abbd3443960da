{
  "comments": [
    {
      "key": {
        "uuid": "9f0807a7_b9b02843",
        "filename": "core/combo/arch/x86/skylake.mk",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-04-10T15:16:09Z",
      "side": 1,
      "message": "at this point, does it make sense to default all these to `true` and then just have the older architectures set `false` where necessary? that should reduce the amount of boilerplate for new/future architectures.",
      "revId": "9d1b1a2ddcc83a1e14964a293f2abbd3443960da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a888f92c_8699a6ff",
        "filename": "core/combo/arch/x86/skylake.mk",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1013846
      },
      "writtenOn": "2018-04-11T01:45:01Z",
      "side": 1,
      "message": "hello, we may have new feature/arch in future. So I\u0027m sure whether it can reduce the effort. Maybe we can try it another way, that is to inherit the basic features from older arch and add new features below. What do you think?",
      "parentUuid": "9f0807a7_b9b02843",
      "revId": "9d1b1a2ddcc83a1e14964a293f2abbd3443960da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "799421ff_56705e29",
        "filename": "core/combo/arch/x86/skylake.mk",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2018-04-11T01:51:44Z",
      "side": 1,
      "message": "Ideally these would be exported from Soong, but I never got around to it.\n\nIt\u0027s unlikely to actually cause issues in practice, but in Soong these are all per-bitness (x86 vs x86_64), while here there\u0027s one value that\u0027s hopefully the same across both. That can cause issues in stranger situations -- like if we\u0027re building unbundled apps and have different expected minimum capabilities between the architectures.",
      "parentUuid": "a888f92c_8699a6ff",
      "revId": "9d1b1a2ddcc83a1e14964a293f2abbd3443960da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2f5181e_5be55898",
        "filename": "core/combo/arch/x86/skylake.mk",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2018-04-11T01:58:50Z",
      "side": 1,
      "message": "Or perhaps it\u0027s time to deprecate them -- for all ARCH_X86_HAVE_*, the only one actively used is ARCH_X86_HAVE_SSE4_1, and that\u0027s only used in one project (mesa3d). With the obsolete variable support, we can make reading it an error, so it won\u0027t silently revert to false if other codebases are still using it.\n\nARCH_ARM_HAVE_* is used slightly more widely, but only to check for neon, and it\u0027s likely about time to enforce that to true (unbundled apps have been the only holdout).",
      "parentUuid": "799421ff_56705e29",
      "revId": "9d1b1a2ddcc83a1e14964a293f2abbd3443960da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}